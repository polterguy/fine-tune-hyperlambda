/*

 * Create an endpoint that:
 * 1. Accepts three input arguments named exactly as follows:
 *    - partnerType:string
 *    - activeStatus:string
 *    - sortColumn:string
 * 2. Connects to a database named 'network'.
 * 3. Reads from a table called 'Partners'.
 * 4. Filters partners by checking that Type equals 'partnerType'
 *    and Active equals 'activeStatus'.
 * 5. Retrieves these fields: PartnerId, Name, Type, Country, Active, and JoinedOn.
 * 6. Sorts results based on the value provided in 'sortColumn'.
 * 7. Returns the filtered results inside a node named 'partners' using [yield].
 */
.arguments
   partnerType:string
   activeStatus:string
   sortColumn:string

data.connect:network
   data.read
      table:Partners
      columns
         PartnerId
         Name
         Type
         Country
         Active
         JoinedOn
      where
         and
            Type.eq:x:@.arguments/*/partnerType
            Active.eq:x:@.arguments/*/activeStatus
      order:x:@.arguments/*/sortColumn

   yield
      partners:x:@data.read/*

