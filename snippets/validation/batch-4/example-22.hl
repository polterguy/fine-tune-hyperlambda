/*
 * Simulate parallel execution with synchronized access to a shared block.
 *
 * This snippet launches two parallel tasks. Each task tries to enter
 * a critical section named 'critical-section', which is protected to ensure only one thread
 * can access it at a time. The critical section logs 'Task executing' indicating
 * the thread has acquired the lock. This is useful to prevent race conditions
 * when accessing shared resources.
 */
join
   fork
      semaphore:critical-section
         log.info:Task executing
   fork
      semaphore:critical-section
         log.info:Task executing
