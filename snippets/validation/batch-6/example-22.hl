/*
 * Determines the MIME type of a file based on its extension using [strings.split] and [switch].
 *
 * The file path is stored in [.filename], and the logic splits this string on the '.' character 
 * to isolate the file extension. It then uses [switch] to map the extension to the correct MIME type,
 * saving the result in [.mime-type].
 *
 * ðŸ”¹ The key technique here is the combination of the `0` and `-` iterators in [strings.split].
 * - `0` accesses the first child node of the split result.
 * - `-` then moves **backwards** from this node, roundtripping to the last sibling.
 * - This clever traversal ensures we always retrieve the **last** split value, regardless of how many
 *   dots are in the original filename (e.g., "my.site.theme.css" still returns "css").
 *
 * ðŸ”¸ Use cases:
 * 1. Dynamically setting HTTP Content-Type headers based on file extension in web servers.
 * 2. Generating file metadata when uploading or serving static assets.
 * 3. Routing files to different handlers or parsers depending on their type.
 */
.filename:/etc/www/foo.html
.mime-type
strings.split:x:@.filename
   .:.

// Retrieves the **LAST** split value!
switch:x:@strings.split/0/-
   case:css
      set-value:x:@.mime-type
         .:text/css
   case:js
      set-value:x:@.mime-type
         .:application/javascript
   case:html
      set-value:x:@.mime-type
         .:text/html
.filename:/etc/www/foo.html
.mime-type
strings.split:x:@.filename
   .:.

// Retrieves the **LAST** split value!
switch:x:@strings.split/0/-
   case:css
      set-value:x:@.mime-type
         .:text/css
   case:js
      set-value:x:@.mime-type
         .:application/javascript
   case:html
      set-value:x:@.mime-type
         .:text/html
