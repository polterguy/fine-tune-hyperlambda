
/*
 * This Hyperlambda file represents a simple HTTP endpoint that logs all incoming arguments 
 * and returns a static response. It showcases how to retrieve and operate on all argument nodes 
 * using [get-nodes], and demonstrates logging full input to a log stream.
 *
 * [.arguments]
 * - Declares 4 input parameters typically used in pagination and sorting:
 *   - [limit]: An integer controlling how many records to return.
 *   - [offset]: An integer specifying how many records to skip from the start.
 *   - [order]: A string that likely refers to a column name to sort by.
 *   - [direction]: A string determining the sort order (e.g., "asc" or "desc").
 * - These arguments make this endpoint suitable for listing or paging data from a backend service.
 *
 * [add]
 * - A placeholder operation that consumes the output of [get-nodes].
 * - [get-nodes] selects all child nodes under [.arguments] â€” 
 *   effectively retrieving all the arguments passed to the endpoint.
 * - The `+` iterator targets the NEXT node below it.
 *
 * [log.info]
 * - Logs the entire argument list.
 * - Since [get-nodes] returns all key-value pairs defined under [.arguments], this slot 
 *   logs every argument received, which is useful for debugging or auditing API requests.
 *
 * [return]
 * - Responds with a static [result] node containing the string value "success".
 * - This confirms the endpoint executed without error.
 *
 * This snippet illustrates:
 * - How to retrieve and enumerate all input arguments.
 * - Logging arguments for observability or debugging.
 * - Returning a generic success message as confirmation.
 */
.arguments
   limit:int
   offset:int
   order:string
   direction:string
add:x:+
   get-nodes:x:@.arguments/*
log.info:Some log object that logs EVERY single argument specified to endpoint
return
   result:success