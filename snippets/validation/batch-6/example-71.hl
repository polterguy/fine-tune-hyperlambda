/*
 * Loads support tickets from the [Tickets] table in the [support] database.
 * Optionally filters by status using the [Status.eq] argument.
 *
 * ðŸ”¹ [Status.eq] is not mandatory, because it's dynamically added using [add].
 * - If the user provides it, it becomes part of the [where â†’ and] clause.
 * - If not, the query executes with no filters, returning all tickets.
 *
 * ðŸ”¸ Great for:
 * 1. Flexible search interfaces.
 * 2. API endpoints where all parameters are optional.
 * 3. Reusing a single query for both summary and filtered views.
 */
.arguments
   Status.eq:string
data.connect:support
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*/Status.eq
   data.read
      table:Tickets
      where
         and
   yield
      tickets:x:@data.read/*
