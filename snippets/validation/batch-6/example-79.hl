/*
 * Retrieves a paginated list of albums from the [Albums] table in the [music] database.
 *
 * Two input arguments are required:
 * - [limit:int]  â†’ Maximum number of albums returned.
 * - [offset:int] â†’ Number of rows to skip before fetching results.
 *
 * ğŸ”¹ Both arguments are **enforced** using [validators.mandatory] to prevent misuse.
 * ğŸ”¹ Argument values are logged at runtime for visibility using [log.info].
 * ğŸ”¹ [add] is used to inject the arguments directly into the [data.read] structure, maintaining flexibility.
 *
 * This ensures all calls are bounded and traceable, making it ideal for music libraries or catalog apps.
 */
.arguments
   limit:int
   offset:int

validators.mandatory:x:@.arguments/*/limit
validators.mandatory:x:@.arguments/*/offset

log.info:Arguments received
   limit:x:@.arguments/*/limit
   offset:x:@.arguments/*/offset

data.connect:music
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   data.read
      table:Albums
   yield
      albums:x:@data.read/*
