
/*
 * This Hyperlambda endpoint deletes a single record from the [Carriers] table in the [logistics] SQLite database.
 * Only users with [root] or [admin] roles can invoke this endpoint.
 *
 * 1. [.arguments]
 *    * Accepts one required argument:
 *      - [CarrierID]: The primary key used to identify the carrier record to be deleted.
 *
 * 2. [auth.ticket.verify:root,admin]
 *    * Restricts endpoint access to users with either the [root] or [admin] role.
 *
 * 3. [validators.mandatory]
 *    * Ensures [CarrierID] is provided before proceeding with deletion.
 *
 * 4. [data.connect:[generic|logistics]]
 *    * Connects to the [logistics] SQLite database.
 *
 * 5. [add:x:./*/data.delete/*/where/*/and]
 *    * Injects the [CarrierID] argument into the WHERE clause of the deletion SQL.
 *
 * 6. [data.delete]
 *    * Executes the deletion from the [Carriers] table where [CarrierID] matches.
 *
 * 7. [add:x:./*/sockets.signal/*/args]
 *    * Passes deletion details into a socket message.
 *
 * 8. [sockets.signal:logistics.Carriers.delete]
 *    * Notifies relevant roles ([enterprise] and [guest]) of the deletion using socket signals.
 *
 * 9. [unwrap:x:+/*]
 *    * Unwraps the evaluation stack so only [return] result is surfaced.
 *
 * 10. [return]
 *     * Returns a node named [affected] to the caller, indicating the number of deleted records.
 *
 * Result:
 * Authenticated endpoint with access control and real-time notification, deleting records by CarrierID.
 */
.arguments
   CarrierID:long
auth.ticket.verify:root,admin
validators.mandatory:x:@.arguments/*/CarrierID
data.connect:[generic|logistics]
   database-type:sqlite
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*
   data.delete
      database-type:sqlite
      table:Carriers
      where
         and
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:logistics.Carriers.delete
      args
      roles:enterprise,guest
   unwrap:x:+/*
   return
      affected:x:@data.delete
