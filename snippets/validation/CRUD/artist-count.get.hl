
/*
 * This Hyperlambda endpoint counts the number of rows in the [Artist] table in the [chinook] SQLite database.
 * It allows optional filtering on the [Name] column and does not require authentication or authorization.
 *
 * 1. [.arguments]
 *    * Accepts two optional filter arguments:
 *      - [Artist.Name.like]: Performs a SQL LIKE filter for partial matches on the artist name.
 *      - [Artist.Name.eq]: Filters artists by an exact name match.
 *
 * 2. [data.connect:[generic|chinook]]
 *    * Establishes a connection to the [chinook] database using the [generic] provider and sets the database type to [sqlite].
 *
 * 3. [add]
 *    * Dynamically inserts any filter arguments under the [where] clause to be applied as part of the query.
 *
 * 4. [data.read]
 *    * Executes a SELECT COUNT(*) on the [Artist] table:
 *      - [count(*)] as [count] returns the number of rows matching the filter.
 *      - [where -> and] ensures that all filters are applied using logical AND.
 *      - [limit:1] ensures that only one result row is returned.
 *
 * 5. [yield]
 *    * Returns the count value from the query as a node named [count].
 *
 * Result:
 * A public endpoint that returns the number of [Artist] records that match optional filtering on [Name].
 */
.arguments
   Artist.Name.like:string
   Artist.Name.eq:string
data.connect:[generic|chinook]
   database-type:sqlite
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Artist
      columns
         count(*)
            as:count
      where
         and
      limit:long:1
   yield
      count:x:@data.read/*/*/count
