/*
 * This Hyperlambda endpoint filters out all **odd** numbers from a dynamic list of input values.
 * The structure mirrors the original even-number example, but with inverted logic.
 *
 * [math.modulo] and [eq] are used to check for a remainder of 1, which indicates the number is odd.
 * As with the original example, [unwrap] is required before [add] to ensure expressions are resolved.
 */

.arguments:*
.odd_numbers
for-each:x:@.arguments/*
   if
      eq:x:@.dp/#
         math.modulo
            get-value:x:@.dp/#
            .:int:2
         .:int:1
      .lambda
         unwrap:x:+/*/*
         add:x:@.odd_numbers
            .
               .:x:@.dp/#
yield
   odds:x:@.odd_numbers
