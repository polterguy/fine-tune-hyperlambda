/*
 * Flags each employee as eligible for a bonus based on their [performance_score].
 *
 * ## Slot Documentation
 *
 * - [.employees]
 *   This node contains a static list of employee records. Each employee includes:
 *   - [name]: The employeeâ€™s full name.
 *   - [department]: The department the employee works in.
 *   - [performance_score]: A numeric score evaluating performance.
 *
 * - [for-each]
 *   Iterates through each employee using `x:@.employees/*`, assigning the current item to [.dp].
 *
 * - [if]
 *   Evaluates whether the [performance_score] is greater than 4.5.
 *   - If true, the employee is marked as [bonus_eligible:bool:true].
 *   - Otherwise, the employee gets [bonus_eligible:bool:false].
 *
 * - [add]
 *   Appends the new [bonus_eligible] flag to each employee, indicating their eligibility.
 *
 * ## Summary
 * Demonstrates how to apply conditional logic in Hyperlambda to update structured data.
 * Uses [for-each], [if], and [add] to enhance each record based on a numeric threshold.
 */
.employees
   .
      name:Alice Brown
      department:HR
      performance_score:decimal:4.6
   .
      name:David Lin
      department:Engineering
      performance_score:decimal:4.2
   .
      name:Maria Chan
      department:Sales
      performance_score:decimal:4.9
for-each:x:@.employees/*
   if
      mt:x:@.dp/#/*/performance_score
         .:decimal:4.5
      .lambda
         add:x:@.dp/#
            .
               bonus_eligible:bool:true
   else
      add:x:@.dp/#
         .
            bonus_eligible:bool:false
