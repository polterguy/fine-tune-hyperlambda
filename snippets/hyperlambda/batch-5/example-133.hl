/*
 * This endpoint adjusts a user's loyalty points based on [activity] type.
 * - If activity is 'purchase', it adds [points].
 * - If activity is 'refund', it subtracts [points].
 * The result is stored in the [loyalty_log] table of the 'customers' database.
 */

.arguments
   user_id:int
   points:int
   current:int
   activity:string
.new_total
data.connect:customers
   if
      eq:x:@.arguments/*/activity
         .:purchase
      .lambda
         set-value:x:@.new_total
            math.add
               get-value:x:@.arguments/*/current
               get-value:x:@.arguments/*/points
         data.create
            table:loyalty_log
            values
               user_id:x:@.arguments/*/user_id
               action:purchase
               points:x:@.arguments/*/points
   else-if
      eq:x:@.arguments/*/activity
         .:refund
      .lambda
         set-value:x:@.new_total
            math.subtract
               get-value:x:@.arguments/*/current
               get-value:x:@.arguments/*/points
         data.create
            table:loyalty_log
            values
               user_id:x:@.arguments/*/user_id
               action:refund
               points:x:@.arguments/*/points
yield
   total_points:x:@.new_total
