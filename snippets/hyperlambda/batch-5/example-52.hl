/*
 * Updates the title of all books where the genre is "Science Fiction".
 *
 * ## Slot Documentation
 *
 * - [.books]
 *   This node defines a hardcoded list of book records. Each book object has:
 *   - [title]: The title of the book.
 *   - [genre]: The genre the book belongs to.
 *   Four books are statically defined here, each under a unique unnamed node.
 *
 * - [set-value]
 *   This slot updates the [title] of all books where the genre is exactly "Science Fiction".
 *   Here's how the lambda expression works:
 *
 *   - `@.books` selects the nearest ancestor node named `.books`.
 *   - `*` selects its children nodes, which are the individual book objects.
 *   - `*` selects their children again, which are [title] and [genre] nodes.
 *   - `genre` filters to nodes specifically named [genre].
 *   - `=Science Fiction` keeps only those [genre] nodes with the value "Science Fiction".
 *   - `.` navigates back up to the parent book node.
 *   - `*` selects all its fields again.
 *   - `title` narrows down to the actual field we want to update.
 *
 * - New Value
 *   All matching [title] nodes will be changed to "Updated Sci-Fi Title".
 *   Only books with the genre "Science Fiction" are affected.
 *
 * ## Summary
 * This example shows how to use conditional logic with lambda expressions
 * to traverse structured data and update fields dynamically.
 * It demonstrates [set-value]'s ability to perform filtered, in-place transformations
 * on deeply nested node trees using sibling and parent references.
 */
.books
   .
      title:Dune
      genre:Science Fiction
   .
      title:1984
      genre:Dystopian
   .
      title:Foundation
      genre:Science Fiction
   .
      title:Hamlet
      genre:Tragedy
set-value:x:@.books/*/*/genre/=Science Fiction/./*/title
   .:Updated Sci-Fi Title
