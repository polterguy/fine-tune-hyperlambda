/*
 * Inserts a new node before the [title] field of the second book in the [.catalog] list using [insert-before].
 *
 * ## Slot Documentation
 *
 * - [.catalog]
 *   This node defines a static collection of book records. Each unnamed child node under [.catalog] represents a book,
 *   with the following properties:
 *   - [title]: The title of the book.
 *   - [author]: The author's name.
 *   - [year]: The year of publication.
 *   In this example, four books are included for demonstration.
 *
 * - [insert-before]
 *   This slot inserts a new node immediately **before** a specific child node, as determined by a lambda expression.
 *
 *   The selector breakdown:
 *   - `@.catalog` points to the parent [.catalog] node.
 *   - `/1` accesses the second book (using zero-based indexing).
 *   - `*` selects all child fields (like [title], [author], etc.) of the second book.
 *   - `/title` filters this list down to the [title] node only.
 *
 *   This means we're targeting the [title] field of the second book ("Clean Code"), and inserting a new node
 *   just before it. The inserted node is:
 *   ```hyperlambda
 *   status:SOLD OUT
 *   ```
 *   This will appear before [title] in the second book object.
 *
 * ## Summary
 * This snippet illustrates how to surgically **inject a new field** into a structured list by position,
 * specifically inserting content before a known node using [insert-before] and a precise lambda selector.
 * It's ideal for augmenting data trees with context-sensitive metadata or state flags such as availability,
 * status, or tags â€” without overwriting existing structure.
 */
.catalog
   .
      title:The Art of War
      author:Sun Tzu
      year:500 BC
   .
      title:Clean Code
      author:Robert C. Martin
      year:2008
   .
      title:1984
      author:George Orwell
      year:1949
   .
      title:The Pragmatic Programmer
      author:Andy Hunt
      year:1999
insert-before:x:@.catalog/1/*/title
   .
      status:SOLD OUT
