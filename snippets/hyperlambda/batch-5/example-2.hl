/*
 * This Hyperlambda file demonstrates how to perform a master-detail data retrieval pattern by using the [include] slot in combination with [data.read],
 * where a list of 'Department' records is fetched from the 'hrsystem' database, and each department record is enriched with its related 'Employee' records.
 *
 * [data.connect]
 * Connects to the 'hrsystem' database. This slot is mandatory before any data access operation via [data.read] can occur.
 *
 * [data.read]
 * Reads the first 50 records from the 'Department' table.
 * The [columns] node specifies which columns to retrieve — only 'DepartmentId' and 'DepartmentName' in this case — optimizing performance by omitting unneeded data.
 *
 * [include]
 * The [include] slot is used to dynamically join or embed related records from a secondary query into each of the primary records.
 * It iterates over the records returned by the parent [data.read] and injects additional data into each result.
 *
 * Inside [include]
 * Another [data.read] is executed to retrieve 'Employee' records, filtered by matching 'DepartmentId' from the parent department record (using expression evaluation).
 *
 * [columns] inside the nested [data.read]
 * Only the 'EmployeeId' and 'FullName' columns from the 'Employee' table are selected, again optimizing data retrieval.
 *
 * [where]
 * Filters 'Employee' records to only include employees that belong to the current department being processed by [include].
 * The value of 'DepartmentId.eq' is dynamically retrieved using an expression that resolves to the current department's 'DepartmentId'.
 *
 * [yield]
 * The inner [yield] inside [include] ensures that the employees retrieved for each department are attached under an 'employees' child node in the parent department object.
 */
data.connect:hrsystem
   data.read
      table:Department
      limit:50
      columns
         DepartmentId
         DepartmentName
   include:x:@data.read/*
      data.read
         table:Employee
         columns
            EmployeeId
            FullName
         where
            and
               DepartmentId.eq:x:@.dp/#/*/DepartmentId
      yield
         employees:x:@data.read/*
