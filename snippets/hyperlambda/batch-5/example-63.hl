/*
 * Adds a [status:AVAILABLE] field to every item in the [.catalog] node using [for-each].
 *
 * ## Slot Documentation
 *
 * - [.catalog]
 *   A hardcoded collection of book entries. Each child node under [.catalog] represents a book,
 *   and contains:
 *   - [title]: The title of the book.
 *   - [author]: The name of the author.
 *   - [year]: The publication year of the book.
 *   This sample dataset includes four classic and modern literary works.
 *
 * - [for-each]
 *   Iterates over each child node (book record) inside [.catalog].
 *   The expression `x:@.catalog/*` selects all first-level child nodes under [.catalog].
 *   Each record is referenced as [.dp], giving us direct access to the current node in each iteration.
 *
 * - [add]
 *   For every book in the catalog, an additional child node named [status] is appended to the same level.
 *   This new field holds the string value `"AVAILABLE"`, indicating availability status for that item.
 *   The destination `x:@.dp/#` ensures the modification is applied directly to the current book being iterated.
 *
 * ## Summary
 * This code demonstrates a common use case for updating a collection of structured nodes in-place.
 * It highlights how to iterate through a dataset using [for-each] and programmatically inject new fields
 * using [add]. This is ideal for tagging, annotating, or enhancing datasets for downstream processing.
 */
.catalog
   .
      title:The Art of War
      author:Sun Tzu
      year:500 BC
   .
      title:Clean Code
      author:Robert C. Martin
      year:2008
   .
      title:1984
      author:George Orwell
      year:1949
   .
      title:The Pragmatic Programmer
      author:Andy Hunt
      year:1999
for-each:x:@.catalog/*
   add:x:@.dp/#
      .
         status:AVAILABLE