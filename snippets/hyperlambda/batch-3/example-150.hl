
/*
 * This snippet defines an AI function using standard [arguments] structure.
 *
 * 1. [.arguments]
 *    * Declares all input parameters your AI function may accept.
 *    * Any declared parameter becomes a part of the invocation context during chatbot execution.
 *
 * 2. Special system-injected arguments (all optional):
 *    - [_session]: A unique ID identifying the userâ€™s session (if applicable).
 *    - [_user-id]: A unique user identifier such as an email or token.
 *    - [_extra]: Data passed via `&extra=xyz` query string in embed URLs, useful for context-aware behaviors.
 *    - [_type]: The machine learning type from which the request originated.
 *
 * 3. User-defined arguments:
 *    - [arg1], [arg2], etc., represent additional inputs provided manually by the prompt or chatbot configuration.
 *
 * These arguments allow the function to dynamically adapt based on session context, user identity, ML type, and other metadata.
 *
 * **Use cases:**
 * * Customize behavior based on logged-in user or session.
 * * Route logic conditionally based on chatbot type or embed context.
 * * Extend chatbot functionality with business logic and dynamic parameter handling.
 */
.arguments

   // Optional session ID for user's current session.
   _session:string

   // Optional user ID, uniquely identifying user, typically email address or a randomly generated unique ID
   _user-id:string

   // Optional additional information passed in to the AI chatbot through its embed script as a query parameter being '&extra=xyz'
   _extra:string

   // Optional argument being the name of machine learning type the current invocation originates from
   _type:string

   // Additional arguments here ...
   arg1:string
   arg2:string
