
/*
 * This HTTP endpoint delivers a student's transcript PDF file for download.
 *
 * # Arguments:
 * - [file]: Required. The name of the transcript PDF to retrieve. It must match a file within the '/data/students/transcripts/' directory.
 *
 * # Features:
 * - Validates the presence of the [file] argument.
 * - Constructs the full file path securely using the provided file name.
 * - Dynamically generates the [Content-Disposition] HTTP header to trigger file download in the browser with the original filename.
 * - Sets the proper [Content-Type] to 'application/pdf' to inform the client about the file type.
 * - Uses [io.stream.open-file] to open the PDF stream for returning without loading the entire file into memory.
 * - The [Access-Control-Expose-Headers] ensures frontend JavaScript can read the Content-Disposition header when needed.
 *
 * # Returns:
 * - A raw file stream of the requested transcript PDF.
 *
 * # Use Case:
 * - Used in academic portals where students can securely download their transcript documents.
 * - Downloading a file from server to the client without loading it into memory.
 */
.arguments
   file:string

validators.mandatory:x:@.arguments/*/file

// Building the full path to the transcript file
.filename-and-path
set-value:x:-
   strings.concat
      .:"/data/students/transcripts/"
      get-value:x:@.arguments/*/file

// Creating Content-Disposition header with filename
strings.concat
   .:"attachment; filename=\""
   get-value:x:@.arguments/*/file
   .:"\""
response.headers.set
   Content-Type:application/pdf
   Content-Disposition:x:@strings.concat
   Access-Control-Expose-Headers:Content-Disposition

// Open the file stream for returning the transcript
io.stream.open-file:x:@.filename-and-path

// Return the PDF file as a raw stream
return:x:-
