
/*
 * HTTP API endpoint for uploading and saving a report file into the '/www/user-uploads/' directory.
 *
 * Arguments:
 * - [report] : A multipart/form-data file object with child nodes [name] and [stream].
 *
 * Functionality:
 * - Accepts multipart/form-data input to handle file uploads.
 * - Validates that the [report] object is provided and includes both [name] and [stream].
 * - Constructs a full destination path by concatenating '/www/user-uploads/' with the uploaded file's name.
 * - Saves the uploaded file stream to the destination path using [io.stream.save-file].
 * - Responds with a static confirmation message indicating success.
 *
 * Note: The file is streamed directly to disk, making this endpoint suitable for large file uploads.
 */
.arguments
   report:*

// Allow incoming multipart data for report upload.
.accept:multipart/form-data

// Ensure report contains name and stream.
validators.mandatory:x:@.arguments/*/report
validators.mandatory:x:@.arguments/*/report/*/name
validators.mandatory:x:@.arguments/*/report/*/stream

// Assemble full destination path for uploaded report.
.report-path
set-value:x:@.report-path
   strings.concat
      .:"/www/user-uploads/"
      get-value:x:@.arguments/*/report/*/name

// Since the file was given as a stream, we can save the file by simply copying the input stream into our save file stream
io.stream.save-file:x:@.report-path
   get-value:x:@.arguments/*/report/*/stream

// Returning a static success message to caller.
return
   upload-status:done
