
// Check if the length of the [completion] node inside the currently iterated [.dp] node is more than the value of the [threshold] node inside [.arguments]. If this condition is true, add the [type] node from [.arguments] as a sibling after the current node, signal the [magic.ai.can-create-snippet] event, and concatenate the value of the [completion] node with two line breaks and a string indicating this information was taken from a URL. Perform a [data.read] query on the [ml_training_snippets] table, filtering by [type] equal to [.arguments] [type], and [completion] equal to or like the concatenated string. If no records are found, and [insert_url] in [.arguments] is true, append the [url] from [.arguments] to the [completion] value, then create a new record in [ml_training_snippets] with the provided data. If a record exists where the [prompt] is "Common", increment the [already-exists] counter. If there is no record with a [prompt] equal to the current [.dp] [prompt], increment the [similar] counter and update the existing record, setting its [prompt] to "Common" based on its [id].
if
   mt
      strings.length:x:@.dp/#/*/completion
      get-value:x:@.arguments/*/threshold
   .lambda
      add:x:+
         get-nodes:x:@.arguments/*/type
      try-signal:magic.ai.can-create-snippet
      strings.concat
         get-value:x:@.dp/#/*/completion
         .:@"
"
         .:@"
"
         .:This information was taken from [this URL](
         .:%
      data.read
         table:ml_training_snippets
         columns
            id
            prompt
            completion
            uri
         where
            and
               type.eq:x:@.arguments/*/type
               or
                  completion.eq:x:@.dp/#/*/completion
                  completion.like:x:@strings.concat
      if
         not-exists:x:@data.read/*
         .lambda
            if:x:@.arguments/*/insert_url
               set-value:x:@.dp/#/*/completion
                  strings.concat
                     get-value:x:@.dp/#/*/completion
                     .:@"
"
                     .:@"
"
                     .:This information was taken from [this URL](
                     get-value:x:@.arguments/*/url
                     .:)
            data.create
               table:ml_training_snippets
               values
                  type:x:@.arguments/*/type
                  uri:x:@.arguments/*/url
                  prompt:x:@.dp/#/*/prompt
                  completion:x:@.dp/#/*/completion
                  meta:AINIRO-Website-Crawler
      else-if
         eq:x:@data.read/0/*/prompt
            .:Common
         .lambda
            math.increment:x:@.already-exists
      else-if
         not
            eq:x:@data.read/*/*/prompt
               get-value:x:@.dp/#/*/prompt
         .lambda
            math.increment:x:@.similar
            data.update
               table:ml_training_snippets
               values
                  prompt:Common
               where
                  and
                     id.eq:x:@data.read/0/*/id
