
/*
 * Iterate through all [loc] nodes containing CDATA sections within the [urlset] node of the [xml2lambda] conversion result, and for each loc node:
 * - If the count of child nodes of [.urls] is less than 10,000, proceed.
 * - Create a [.url] node and set its value to the value of the current [loc] node.
 * - If the current URL does not start with "http://" or "https://", prepend the value of the [.domain] node to it.
 * - If the value of the constructed [.url] does not already exist in [.urls], unwrap the sibling nodes and add the [.url] value as a new child of [.urls].
 */
for-each:x:"@xml2lambda/*/urlset/*/url/*/loc/*/\\#cdata-section"
   if
      lt
         get-count:x:@.urls/*
         .:int:10000
      .lambda
         .url
         set-value:x:@.url
            get-value:x:@.dp/#
         if
            and
               not
                  strings.starts-with:x:@.dp/#
                     .:"http://"
               not
                  strings.starts-with:x:@.dp/#
                     .:"https://"
            .lambda
               set-value:x:@.url
                  strings.concat
                     get-value:x:@.domain
                     get-value:x:@.dp/#
         if
            not-exists:x:@.urls/*/={@.url}
            .lambda
               unwrap:x:+/*/*
               add:x:@.urls
                  .
                     .:x:@.url
