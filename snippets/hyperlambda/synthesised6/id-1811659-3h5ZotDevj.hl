
// Add logic that checks if the count of nodes in [.urls] is less than 10,000. If it is, add all nodes from [.arguments]/*/headers as [signal] to the siblings of the current node, then evaluate all nodes added after the current node. Next, invoke the [magic.ai.load-sitemap] signal with a maximum of 10,000 URLs, and pass along [feedback-channel] and [filter-on-url] from [.arguments], as well as [sitemap] containing the currently processed object from [.dp]. Add all URLs returned from the [signal] into [.urls]. Finally, if the [has-sitemap] value returned by [signal] is false and the count of [.urls] is zero, set [.has-sitemap] to false.
if
   lt
      get-count:x:@.urls/*
      .:int:10000
   .lambda
      add:x:./*/signal
         get-nodes:x:@.arguments/*/headers
      unwrap:x:+/**
      signal:magic.ai.load-sitemap
         max:int:10000
         feedback-channel:x:@.arguments/*/feedback-channel
         filter-on-url:x:@.arguments/*/filter-on-url
         sitemap
            .:x:@.dp/#
      add:x:@.urls
         get-nodes:x:@signal/*/urls/*
      if
         and
            eq:x:@signal/*/has-sitemap
               .:bool:false
            eq
               get-count:x:@.urls/*
               .:int:0
         .lambda
            set-value:x:@.has-sitemap
               .:bool:false
