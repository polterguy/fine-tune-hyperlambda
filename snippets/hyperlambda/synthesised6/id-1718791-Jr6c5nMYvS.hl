
// Create logic that checks if the number of child nodes under [.urls] is less than 10,000. If so, add a [signal] node as a sibling to the current node, containing the [headers] nodes from [.arguments]. Then, use [unwrap] to evaluate all child nodes of the next sibling nodes recursively. Send a [magic.ai.load-sitemap] signal with a maximum of 10,000 URLs, passing in the [feedback-channel] and [filter-on-url] from [.arguments], and a [sitemap] node referencing the current [.dp] node. Add all URLs returned from the [signal] node into [.urls]. Finally, if [has-sitemap] in the [signal] node is false and the [.urls] node has zero children, set [.has-sitemap] to false.
if
   lt
      get-count:x:@.urls/*
      .:int:10000
   .lambda
      add:x:./*/signal
         get-nodes:x:@.arguments/*/headers
      unwrap:x:+/**
      signal:magic.ai.load-sitemap
         max:int:10000
         feedback-channel:x:@.arguments/*/feedback-channel
         filter-on-url:x:@.arguments/*/filter-on-url
         sitemap
            .:x:@.dp/#
      add:x:@.urls
         get-nodes:x:@signal/*/urls/*
      if
         and
            eq:x:@signal/*/has-sitemap
               .:bool:false
            eq
               get-count:x:@.urls/*
               .:int:0
         .lambda
            set-value:x:@.has-sitemap
               .:bool:false
