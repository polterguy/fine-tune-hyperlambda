
// Iterate through all [.xml2lambda/*/urlset/*/url/*/loc/*/\#text] nodes, and for each node, if the count of [.urls] children is less than 10,000, create a [.url] node with the value of the current node. If the current value does not start with "http://" or "https://", prepend the value of [.domain] to it. If the url does not already exist as a child of [.urls], unwrap all grandchild nodes of the current node and add the url to [.urls].
for-each:x:"@xml2lambda/*/urlset/*/url/*/loc/*/\\#text"
   if
      lt
         get-count:x:@.urls/*
         .:int:10000
      .lambda
         .url
         set-value:x:@.url
            get-value:x:@.dp/#
         if
            and
               not
                  strings.starts-with:x:@.dp/#
                     .:"http://"
               not
                  strings.starts-with:x:@.dp/#
                     .:"https://"
            .lambda
               set-value:x:@.url
                  strings.concat
                     get-value:x:@.domain
                     get-value:x:@.dp/#
         if
            not-exists:x:@.urls/*/={@.url}
            .lambda
               unwrap:x:+/*/*
               add:x:@.urls
                  .
                     .:x:@.url
