
// Iterate through all [.loc] text nodes inside the [url] elements of the [urlset] node in [xml2lambda]. For each location, if the number of nodes in [.urls] is less than 10,000, create a [.url] node and set its value to the current location string. If the current value does not start with "http://" or "https://", prepend the value of [.domain] to it. Then, if this [.url] value does not already exist as a value of any child node in [.urls], unwrap all grandchildren of the current node, and add the [.url] value to [.urls].
for-each:x:"@xml2lambda/*/urlset/*/url/*/loc/*/\\#text"
   if
      lt
         get-count:x:@.urls/*
         .:int:10000
      .lambda
         .url
         set-value:x:@.url
            get-value:x:@.dp/#
         if
            and
               not
                  strings.starts-with:x:@.dp/#
                     .:"http://"
               not
                  strings.starts-with:x:@.dp/#
                     .:"https://"
            .lambda
               set-value:x:@.url
                  strings.concat
                     get-value:x:@.domain
                     get-value:x:@.dp/#
         if
            not-exists:x:@.urls/*/={@.url}
            .lambda
               unwrap:x:+/*/*
               add:x:@.urls
                  .
                     .:x:@.url
