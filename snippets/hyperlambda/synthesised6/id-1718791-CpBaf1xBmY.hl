
// Create a conditional block using [if] to check if the number of child nodes under [.urls] is less than 10,000. If this condition is true, then unwrap all descendant nodes of the next sibling, and signal the [magic.ai.load-sitemap] slot with arguments [max] (set to 10,000), [feedback-channel] (referencing [.arguments]/*/feedback-channel), and [filter-on-url] (referencing [.arguments]/*/filter-on-url). Additionally, include a [sitemap] argument referencing the value of the current [.dp] node by reference. After signaling, add all nodes from [urls] returned by the signal into [.urls]. Then, create a nested [if] block that checks if the [has-sitemap] value returned by the signal is false and if the count of [.urls] is zero, and if so, set [.has-sitemap] to false.
if
   lt
      get-count:x:@.urls/*
      .:int:10000
   .lambda
      unwrap:x:+/**
      signal:magic.ai.load-sitemap
         max:int:10000
         feedback-channel:x:@.arguments/*/feedback-channel
         filter-on-url:x:@.arguments/*/filter-on-url
         sitemap
            .:x:@.dp/#
      add:x:@.urls
         get-nodes:x:@signal/*/urls/*
      if
         and
            eq:x:@signal/*/has-sitemap
               .:bool:false
            eq
               get-count:x:@.urls/*
               .:int:0
         .lambda
            set-value:x:@.has-sitemap
               .:bool:false
