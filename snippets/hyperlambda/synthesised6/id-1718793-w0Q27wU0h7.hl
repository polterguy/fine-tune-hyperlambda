
// Create a conditional block that first checks if the current [.dp] node has a child node named [completion] and that its value is not null. If these conditions are met, then perform a nested check to see if the length of the [completion] node's value is greater than the value of the [threshold] argument from [.arguments]. If this is true, add the [type] argument to the next sibling node, trigger the [magic.ai.can-create-snippet] signal, and construct a string using the [completion] value, two line breaks, and a phrase referencing a URL with a placeholder for the URL value. Then, read from the [ml_training_snippets] table for records matching the given [type], and where [completion] is either exactly equal to or similar to the constructed string. If no matching data is found, and the [insert_url] argument is true, append the URL information to the [completion] node and create a new record in [ml_training_snippets] with the relevant values. If the first matching record's [prompt] value is "Common", increment the [.already-exists] counter. Otherwise, if none of the matching records have a [prompt] equal to the current [prompt], increment the [.similar] counter and update the found record's [prompt] to "Common". If the initial check fails (i.e., [completion] is missing, null, or its length is below the threshold), increment the [.below-threshold] counter.
if
   and
      exists:x:@.dp/#/*/completion
      not-null:x:@.dp/#/*/completion
   .lambda
      if
         mt
            strings.length:x:@.dp/#/*/completion
            get-value:x:@.arguments/*/threshold
         .lambda
            add:x:+
               get-nodes:x:@.arguments/*/type
            try-signal:magic.ai.can-create-snippet
            strings.concat
               get-value:x:@.dp/#/*/completion
               .:@"
"
               .:@"
"
               .:This information was taken from [this URL](
               .:%
            data.read
               table:ml_training_snippets
               columns
                  id
                  prompt
                  completion
                  uri
               where
                  and
                     type.eq:x:@.arguments/*/type
                     or
                        completion.eq:x:@.dp/#/*/completion
                        completion.like:x:@strings.concat
            if
               not-exists:x:@data.read/*
               .lambda
                  if:x:@.arguments/*/insert_url
                     set-value:x:@.dp/#/*/completion
                        strings.concat
                           get-value:x:@.dp/#/*/completion
                           .:@"
"
                           .:@"
"
                           .:This information was taken from [this URL](
                           get-value:x:@.arguments/*/url
                           .:)
                  data.create
                     table:ml_training_snippets
                     values
                        type:x:@.arguments/*/type
                        uri:x:@.arguments/*/url
                        prompt:x:@.dp/#/*/prompt
                        completion:x:@.dp/#/*/completion
                        meta:AINIRO-Website-Crawler
            else-if
               eq:x:@data.read/0/*/prompt
                  .:Common
               .lambda
                  math.increment:x:@.already-exists
            else-if
               not
                  eq:x:@data.read/*/*/prompt
                     get-value:x:@.dp/#/*/prompt
               .lambda
                  math.increment:x:@.similar
                  data.update
                     table:ml_training_snippets
                     values
                        prompt:Common
                     where
                        and
                           id.eq:x:@data.read/0/*/id
      else
         math.increment:x:@.below-threshold
