
// Create a conditional branch using [if] that checks if [.incoming] both exists and is not null or empty, using [and], [not-null], and [neq]. If the condition is true, create a [.exe] execution block where you set [.hook-url] to the first non-null value from either [.model/*/webhook_incoming_url] or the "magic:openai:integrations:incoming:url" config value, then unwrap the url for downstream use, and invoke [signal] using [.incoming] and the resolved [url]. Next, add a nested [if] statement that checks if [.arguments/*/to] and [.arguments/*/from] both exist, are not null, and both contain the ":" character using [strings.contains]. If this nested condition is true, split the "to" and "from" values by ":", extract the channel, to, and from values, and add these along with any [prompt] and [session] arguments to the [signal] node in [.exe]. If the nested condition is false, add the [to], [from], [prompt], and [session] nodes directly to the [signal] node in [.exe]. Finally, eval the [.exe] node to execute the constructed operation.
if
   and
      not-null:x:@.incoming
      neq:x:@.incoming
         .:
   .lambda
      .exe
         .hook-url
         set-value:x:@.hook-url
            get-first-value
               get-value:x:@.model/*/webhook_incoming_url
               config.get:"magic:openai:integrations:incoming:url"
         unwrap:x:./*/signal/*/url
         signal:x:@.incoming
            url:x:@.hook-url
      if
         and
            exists:x:@.arguments/*/to
            exists:x:@.arguments/*/from
            not-null:x:@.arguments/*/to
            not-null:x:@.arguments/*/from
            strings.contains:x:@.arguments/*/to
               .:":"
            strings.contains:x:@.arguments/*/from
               .:":"
         .lambda
            .channel
            .to
            .from
            strings.split:x:@.arguments/*/to
               .:":"
            set-value:x:@.channel
               get-value:x:@strings.split/0
            set-value:x:@.to
               get-value:x:@strings.split/1
            strings.split:x:@.arguments/*/from
               .:":"
            set-value:x:@.from
               get-value:x:@strings.split/1
            add:x:@.exe/*/signal
               get-nodes:x:@.arguments/*/prompt
               get-nodes:x:@.arguments/*/session
            unwrap:x:+/*/*
            add:x:@.exe/*/signal
               .
                  to:x:@.to
                  from:x:@.from
                  channel:x:@.channel
      else
         add:x:@.exe/*/signal
            get-nodes:x:@.arguments/*/to
            get-nodes:x:@.arguments/*/from
            get-nodes:x:@.arguments/*/prompt
            get-nodes:x:@.arguments/*/session
      eval:x:@.exe
