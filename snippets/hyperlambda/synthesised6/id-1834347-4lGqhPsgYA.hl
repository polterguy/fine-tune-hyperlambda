
/*
 * Given a node set where each node has a [verb] child, use a [switch] statement to check the value of the [verb] node for each item in [.dp/#/*]. If the verb is post, put, or patch, then for post and put do nothing, but for patch:
 * 
 * - Unwrap all great-grandchildren of the next sibling node after the current one.
 * - Then, insert after each [operationId] node under [.buffer/*/*/*] a new node containing [consumes] set to the value of [.dp/#/*/consumes], and [produces] set to "application/json".
 */
switch:x:@.dp/#/*/verb
   case:post
   case:put
   case:patch
      unwrap:x:+/*/*/*
      insert-after:x:@.buffer/*/*/*/operationId
         .
            consumes
               .:x:@.dp/#/*/consumes
            produces
               .:application/json
