
// If the previous condition does not match, execute the [magic.ai.functions.invoke] slot, passing in the [type], [session], [user-id], and the current invocation (from [.dp/#]), and then use [lambda2json] to convert the result nodes to JSON, formatting the output. Check if the number of OpenAI tokens in the JSON result exceeds the [max_context_tokens] argument, and if so, throw an error with status 400 and a public message. Otherwise, get the configured success message from [magic:chat:functions:success-message], unwrap the value, and signal via sockets to the session, including the function result, invocation JSON, and workflow file. Then, if there are result nodes from the function execution, append a formatted response summary to the [.new-prompt] node using [strings.concat], and set [.function-result] to the JSON result; otherwise, update [.new-prompt] with a message indicating the invocation was successful.
else
   execute:magic.ai.functions.invoke
      type:x:@.type
      session:x:@.session
      user-id:x:@.user-id
      invocation:x:@.dp/#
   lambda2json:x:@execute/*/result/*
      format:true
   if
      mt
         openai.tokenize:x:@lambda2json
         get-value:x:@.arguments/@.arguments/*/max_context_tokens
      .lambda
         throw:Result too large, try to limit your result
            status:int:400
            public:bool:true
   config.get:"magic:chat:functions:success-message"
      .:Success!
   unwrap:x:+/*/*
   sockets.signal:x:@.session
      args
         function_result:x:@config.get
         invocation:x:@execute/*/json
         file:x:@execute/*/workflow
   if
      exists:x:@execute/*/result/*
      .lambda
         set-value:x:@.new-prompt
            strings.concat
               get-value:x:@.new-prompt
               .:"Response from '"
               get-value:x:@execute/*/workflow
               .:@"' was:
```json
"
               get-value:x:@lambda2json
               .:@"
"
               .:```
               .:@"
"
               .:@"
"
         set-value:x:@.function-result
            get-value:x:@lambda2json
   else
      set-value:x:@.new-prompt
         strings.concat
            get-value:x:@.new-prompt
            .:"Invocation of '"
            get-value:x:@execute/*/workflow
            .:"' was a success."
            .:@"
"
            .:@"
"
