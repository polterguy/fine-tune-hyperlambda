
// Create a conditional block that checks if the number of child nodes in [.urls] is less than 10,000 using [lt] and [get-count]. If so, create a [.url] node and set its value to the dereferenced value of [.dp]. Then, if the value of [.dp] does not start with "http://" and does not start with "https://", concatenate the value of [.domain] and [.dp] and set this as the new value for [.url]. Next, if there is not already a child in [.urls] with a value equal to [.url], unwrap all child nodes of the next sibling, and add a new node to [.urls] with its value set to [.url].
if
   lt
      get-count:x:@.urls/*
      .:int:10000
   .lambda
      .url
      set-value:x:@.url
         get-value:x:@.dp/#
      if
         and
            not
               strings.starts-with:x:@.dp/#
                  .:"http://"
            not
               strings.starts-with:x:@.dp/#
                  .:"https://"
         .lambda
            set-value:x:@.url
               strings.concat
                  get-value:x:@.domain
                  get-value:x:@.dp/#
      if
         not-exists:x:@.urls/*/={@.url}
         .lambda
            unwrap:x:+/*/*
            add:x:@.urls
               .
                  .:x:@.url
