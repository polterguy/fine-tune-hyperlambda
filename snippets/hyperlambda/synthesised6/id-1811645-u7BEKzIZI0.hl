
// Check if the next sibling node of [.tail] is not null. If it exists, append its value to [.value] separated by a comma, then trim any leading or trailing commas from [.value]. Split [.value] by commas using [strings.split], and if the resulting number of elements is more than or equal to 20, remove nodes 16 through 35 from [strings.split], then join the remaining values back into [.value] using commas as separators.
if
   not-null:x:@.tail/+
   .lambda
      set-value:x:@.value
         strings.concat
            get-value:x:@.value
            .:,
            get-value:x:@.tail/+
      set-value:x:@.value
         strings.trim:x:@.value
            .:,
      strings.split:x:@.value
         .:,
      if
         mte
            get-count:x:@strings.split/*
            .:int:20
         .lambda
            remove-nodes:x:@strings.split/*/[15,20]
            set-value:x:@.value
               strings.join:x:@strings.split/*
                  .:,
