
/*
 * Process an uploaded file only if [.text] is true. If so, extract the file name from [.arguments/*/file/*/name] and store it in [.filename]. Then, construct the file path as "/etc/system/openai/pdf/" plus the file name, storing the result in [.filepath]. Save the file stream from [.arguments/*/file/*/stream] to the constructed file path using [io.stream.save-file]. Load the file content with [io.file.load] by referencing [.filepath]. Build a download URI using the HTTP request scheme and host, with the file name URL-encoded, and store it in [.uri]. Unwrap the next sibling nodes and emit a [magic.ai.massage] signal with the loaded content, file name as prompt, and the type from [.arguments/*/type]. Again, construct and store the download URI.
 * 
 * If [.arguments/*/massagePrompt] is not null and not empty, prepare a Bearer token from the OpenAI API key and, for each [signal] child, send an HTTP POST to OpenAI's chat completions API with the provided [massagePrompt] and the completion content from the current signal. If the HTTP result is not a 2xx status, convert the response to Hyperlambda format and log an error with the returned message, status, and error details. If successful, update the current prompt with the completion content from the OpenAI response.
 * 
 * Unwrap all subsequent nodes, then add an object with the current [.uri] and [.filepath] to the [signal] node. Finally, add all children of [signal] to [.file-data].
 */
if
   eq:x:@.text
      .:bool:true
   .lambda
      .filename
      set-value:x:@.filename
         get-value:x:@.arguments/*/file/*/name
      .filepath
      set-value:x:@.filepath
         strings.concat
            .:/etc/system/openai/pdf/
            get-value:x:@.filename
      io.stream.save-file:x:@.filepath
         get-value:x:@.arguments/*/file/*/stream
      io.file.load:x:@.filepath
      .uri
      set-value:x:@.uri
         strings.concat
            request.scheme
            .:"://"
            request.host
            .:/magic/system/openai/download-txt?file=
            strings.url-encode:x:@.filename
      unwrap:x:+/*
      signal:magic.ai.massage
         content:x:@io.file.load
         prompt:x:@.arguments/*/file/*/name
         type:x:@.arguments/*/type
      .uri
      set-value:x:@.uri
         strings.concat
            request.scheme
            .:"://"
            request.host
            .:/magic/system/openai/download-txt?file=
            strings.url-encode:x:@.filename
      if
         and
            not-null:x:@.arguments/*/massagePrompt
            neq:x:@.arguments/*/massagePrompt
               .:
         .lambda
            .token
            set-value:x:@.token
               strings.concat
                  .:"Bearer "
                  config.get:"magic:openai:key"
            for-each:x:@signal/*
               http.post:"https://api.openai.com/v1/chat/completions"
                  convert:bool:true
                  headers
                     Authorization:x:@.token
                     Content-Type:application/json
                     Accept:text/event-stream
                  payload
                     model:gpt-3.5-turbo
                     max_tokens:int:1000
                     temperature:decimal:0.3
                     messages
                        .
                           role:system
                           content:x:@.arguments/*/massagePrompt
                        .
                           role:user
                           content:x:@.dp/#/*/completion
               if
                  not
                     and
                        mte:x:@http.post
                           .:int:200
                        lt:x:@http.post
                           .:int:300
                  .lambda
                     lambda2hyper:x:@http.post
                     log.error:Something went wrong while invoking OpenAI
                        message:x:@http.post/*/content/*/error/*/message
                        status:x:@http.post
                        error:x:@lambda2hyper
               else
                  set-value:x:@.dp/#/*/prompt
                     get-value:x:@http.post/*/content/*/choices/0/*/message/*/content
      unwrap:x:+/*/*
      add:x:@signal/*
         .
            uri:x:@.uri
            filename:x:@.filepath
      add:x:@.file-data
         get-nodes:x:@signal/*
