
// Create an [if] statement that checks if either the value of [stream] inside [.arguments] is boolean false, or if the [stream] node does not exist inside [.arguments]. If either condition is true, execute a [.lambda] block that first unwraps all grandchildren of the next sibling node, and then adds a [result] and [finish_reason] node (using values from the [.result] and [.finish_reason] nodes inside the children of [invoke]) to the [return] node that is a sibling of the [if] node.
if
   or
      eq:x:@.arguments/*/stream
         .:bool:false
      not-exists:x:@.arguments/*/stream
   .lambda
      unwrap:x:+/*/*
      add:x:../*/return
         .
            result:x:@.invoke/*/.result
            finish_reason:x:@.invoke/*/.finish_reason
