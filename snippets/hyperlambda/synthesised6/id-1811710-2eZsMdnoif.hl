
// If the HTTP POST response status is not between 200 (inclusive) and 300 (exclusive), log an error using the [log.error] node with details extracted from [http.post], and then check if [.arguments] does not have a [stream] node or if [stream] is false; if so, throw an exception with the error message and status, otherwise signal an error to the session using [sockets.signal] and reset the [.iterations] node to 0.
if
   not
      and
         mte:x:@http.post
            .:int:200
         lt:x:@http.post
            .:int:300
   .lambda
      lambda2hyper:x:@http.post
      log.error:Something went wrong while invoking Ollama
         message:x:@http.post/*/content/*/error/*/message
         status:x:@http.post
         error:x:@lambda2hyper
      if
         or
            not-exists:x:@.arguments/*/stream
            eq:x:@.arguments/*/stream
               .:bool:false
         .lambda
            throw:x:@http.post/*/content/*/error/*/message
               public:bool:true
               status:x:@http.post
      else
         unwrap:x:+/*/*
         sockets.signal:x:@.arguments/*/session
            args
               error:bool:true
               status:x:@http.post
               message:x:@http.post/*/content/*/error/*/message
         set-value:x:@.iterations
            .:int:0
