
// Add an [else-if] block to process files where the value of [.dp] ends with ".md" and contains "/static-snippets/". Inside this block, split the first child node of [.dp] on "---", throw an exception if the split result does not have exactly 2 elements, then convert the second split part using [hyper2lambda]. Initialize a [.validation] node to 0, and update it to 1 if either [randomize] argument is true and [.no] modulo 8 equals 0, or if [.dp] contains "/validation/". Then, trim and store the first and second split parts into [.prompt] and [.completion] nodes, respectively. Finally, insert a record into the "hyperlambda" table using [data.connect:fine-tune], with the prompt, code, is_static set to 1, and validation value, and increment the value of [.no].
else-if
   and
      strings.ends-with:x:@.dp/#
         .:.md
      strings.contains:x:@.dp/#
         .:/static-snippets/
   .lambda
      strings.split:x:@.dp/#/0
         .:---
      if
         not
            eq
               get-count:x:@strings.split/*
               .:int:2
         .lambda
            throw:x:@.dp/#
      hyper2lambda:x:@strings.split/1
      .validation:int:0
      if
         and
            eq:x:@.arguments/*/randomize
               .:bool:true
            eq
               math.modulo:x:@.no
                  .:int:8
               .:int:0
         .lambda
            set-value:x:@.validation
               .:int:1
      else-if
         strings.contains:x:@.dp/#
            .:/validation/
         .lambda
            set-value:x:@.validation
               .:int:1
      .prompt
      set-value:x:@.prompt
         strings.trim:x:@strings.split/0
      .completion
      set-value:x:@.completion
         strings.trim:x:@strings.split/1
      data.connect:fine-tune
         data.create
            table:hyperlambda
            values
               prompt:x:@.prompt
               code:x:@.completion
               is_static:int:1
               validation:x:@.validation
         math.increment:x:@.no
