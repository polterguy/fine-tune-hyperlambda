
/*
 * Deletes a single record from the "activities" table in your CRM database,
 * based on the provided [activity_id] primary key argument.
 *
 * The endpoint ensures the user is authorized with "root" access before proceeding,
 * and verifies that the required [activity_id] argument is supplied.
 *
 * - Uses [data.connect] to establish a connection to the SQLite CRM database.
 * - Dynamically injects the deletion condition using the supplied [activity_id].
 * - Executes a [data.delete] operation to remove the matching row from the database.
 * - Publishes a socket message [crm.activities.delete] to notify connected clients of the deletion,
 *   passing along relevant details and restricting the message to "admin" and "root" roles.
 * - Returns the number of affected rows (i.e., whether a record was successfully deleted).
 */
.arguments

   // Primary key of record to delete, mandatory argument
   activity_id:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root
validators.mandatory:x:@.arguments/*/activity_id

// Opening up our database connection.
data.connect:[generic|crm]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:activities
      where
         and

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:crm.activities.delete
      args
      roles:admin,root

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
