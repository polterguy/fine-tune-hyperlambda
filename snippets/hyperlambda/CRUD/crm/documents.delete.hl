
/*
 * Deletes a single record from the "documents" table in your CRM database,
 * based on the provided [document_id] primary key.
 *
 * This endpoint is restricted to users with the "root" role and is used for
 * permanent deletion of a document. Upon successful deletion, it also notifies
 * other systems or clients via a socket signal.
 *
 * Features:
 * - Validates that [document_id] is provided using [validators.mandatory].
 * - Authorizes only "root" users via [auth.ticket.verify].
 * - Connects to the SQLite-backed CRM database using [data.connect].
 * - Constructs the WHERE clause using [get-nodes] and [add] to match the target document.
 * - Executes the deletion using [data.delete].
 * - Publishes a [crm.documents.delete] socket signal to "admin" and "root" roles,
 *   passing along the deleted [document_id].
 * - Returns the number of affected rows under the [affected] node, indicating deletion success.
 */
.arguments

   // Mandatory primary key of record to delete, mandatory argument
   document_id:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root
validators.mandatory:x:@.arguments/*/document_id

// Opening up our database connection.
data.connect:[generic|crm]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:documents
      where
         and

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:crm.documents.delete
      args
      roles:admin,root

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
