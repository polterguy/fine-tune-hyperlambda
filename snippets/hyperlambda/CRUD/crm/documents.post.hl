
/*
 * Creates a new record in the "documents" table of your CRM database using any combination
 * of the optional fields: [client_id], [title], [file_path], and [uploaded_date].
 *
 * Only users with "admin" or "root" roles are allowed to perform this operation.
 * Upon successful insertion, the new document ID is returned and a socket message is broadcasted
 * to notify connected systems of the change.
 *
 * Features:
 * - Authorizes the request using [auth.ticket.verify] for roles "root" and "admin".
 * - Connects to a SQLite-backed CRM database using [data.connect].
 * - Dynamically injects only the provided arguments into the [data.create] slot.
 * - Responds with a 201 (Created) status code using [response.status.set].
 * - Broadcasts a [crm.documents.post] socket signal to notify subscribed "admin" and "root" roles,
 *   including all values passed in through the arguments.
 * - Returns the ID of the newly created document using [yield].
 */
.arguments

   // Optional client_id column value
   client_id:long

   // Optional title column value
   title:string

   // Optional file_path column value
   file_path:string

   // Optional uploaded_date column value
   uploaded_date:date

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up database connection.
data.connect:[generic|crm]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:documents
      values

   // Returning the correct status code.
   response.status.set:201

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:crm.documents.post
      args
      roles:admin,root

   // Returning result of above invocation to caller.
   yield
      id:x:@data.create
