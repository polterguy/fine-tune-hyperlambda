
/*
 * Returns the total number of records in the "clients" table of your CRM database,
 * with optional filtering on client fields such as ID, name, email, phone, and address.
 *
 * This endpoint supports flexible search criteria using common comparison operators
 * and returns a single numeric result under the [count] node.
 *
 * - Accepts optional filtering parameters with `.eq`, `.lt`, `.mt`, `.like`, etc.,
 *   applicable to all standard client fields.
 * - Uses [data.connect] to establish a connection to the SQLite CRM database.
 * - Applies filters dynamically to the WHERE clause using [add] and [get-nodes].
 * - Executes a [data.read] query using SQL's `count(*)` to return the number of
 *   records matching the criteria.
 * - Adds an HTTP `Cache-Control` header to allow for 5-minute public caching of results.
 * - Ensures the requester is authenticated as a guest using [auth.ticket.verify].
 * - Returns the resulting count to the caller under a [count] node.
 */
.arguments

   /*
    * Optional filtering arguments.
    */
   clients.client_id.mt:long
   clients.client_id.lt:long
   clients.client_id.mteq:long
   clients.client_id.lteq:long
   clients.client_id.neq:long
   clients.client_id.eq:long
   clients.name.like:string
   clients.name.mt:string
   clients.name.lt:string
   clients.name.mteq:string
   clients.name.lteq:string
   clients.name.neq:string
   clients.name.eq:string
   clients.email.like:string
   clients.email.mt:string
   clients.email.lt:string
   clients.email.mteq:string
   clients.email.lteq:string
   clients.email.neq:string
   clients.email.eq:string
   clients.phone.like:string
   clients.phone.mt:string
   clients.phone.lt:string
   clients.phone.mteq:string
   clients.phone.lteq:string
   clients.phone.neq:string
   clients.phone.eq:string
   clients.address.like:string
   clients.address.mt:string
   clients.address.lt:string
   clients.address.mteq:string
   clients.address.lteq:string
   clients.address.neq:string
   clients.address.eq:string

// Adding Cache-Control HTTP header.
response.headers.set
   Cache-Control:public, max-age=300

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest

// Opening up our database connection.
data.connect:[generic|crm]
   database-type:sqlite

   // Adding filtering arguments.
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      database-type:sqlite
      table:clients
      columns
         count(*)
            as:count
      where
         and
      limit:long:1

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*/*
