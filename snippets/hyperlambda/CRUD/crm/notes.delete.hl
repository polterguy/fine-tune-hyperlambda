
/*
 * Delete a single record from the [notes] table in the CRM database by its primary key.
 *
 * Required Argument:
 * - [note_id]: The unique identifier of the note to delete. Must be provided.
 *
 * Implementation Details:
 * - Ensures the user is authenticated with the "root" role.
 * - Validates that [note_id] is provided to avoid unintended deletes.
 * - Connects to the [crm] database using SQLite.
 * - Constructs a parameterized [data.delete] invocation using the input [note_id] to build the WHERE clause.
 * - Executes the deletion against the [notes] table.
 * - Broadcasts a [sockets.signal] named "crm.notes.delete" to notify subscribed roles (admin, root).
 * - Returns the result indicating how many records were affected by the delete.
 */
.arguments

   // Mandatory primary key of record to delete, mandatory argument
   note_id:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root
validators.mandatory:x:@.arguments/*/note_id

// Opening up our database connection.
data.connect:[generic|crm]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:notes
      where
         and

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:crm.notes.delete
      args
      roles:admin,root

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
