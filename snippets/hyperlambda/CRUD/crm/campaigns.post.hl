
/*
 * Creates a new record in the "campaigns" table of your CRM database using the provided input fields.
 *
 * The endpoint accepts optional values for [name], [start_date], [end_date], [budget], and [status],
 * and inserts them into the database. It ensures only authorized users can perform this action and
 * broadcasts the creation event through sockets.
 *
 * - Uses [auth.ticket.verify] to restrict access to users with "root" or "admin" roles.
 * - Connects to the SQLite-based CRM database using [data.connect].
 * - Dynamically injects any provided arguments into the [data.create] operation.
 * - Automatically sets the HTTP response status to 201 (Created) upon success.
 * - Publishes a [crm.campaigns.post] socket signal to notify connected clients about the new campaign,
 *   limited to "admin" and "root" roles.
 * - Returns the ID of the newly created campaign using [yield].
 */
.arguments

   // Optional name column value
   name:string

   // Optional start_date column value
   start_date:date

   // Optional end_date column value
   end_date:date

   // Optional budget column value
   budget:double

   // Optional status column value
   status:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up database connection.
data.connect:[generic|crm]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:campaigns
      values

   // Returning the correct status code.
   response.status.set:201

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:crm.campaigns.post
      args
      roles:admin,root

   // Returning result of above invocation to caller.
   yield
      id:x:@data.create
