/*
 * Creates a new record in the [Appointments] table of the [hospital] database.
 *
 * Required Arguments:
 * - [PatientID], [DoctorID], [AppointmentDate], and [Reason]: All fields required to create a new appointment.
 *
 * Security:
 * - Accessible to users with [admin], [guest], or [root] roles.
 *
 * Intentional:
 * - Logs the creation event using [log.info], capturing both the user identity and input arguments.
 * - Retrieves the invoking user's auth ticket via [auth.ticket.get] and formats inputs with [lambda2hyper].
 * - Dynamically builds the [data.create] values using [get-nodes] for flexible insertion.
 * - Inserts the appointment and returns the new record's ID in the response.
 * - Responds with HTTP 201 (Created) status code.
 * - Publishes a real-time WebSocket event [hospital.Appointments.post] with the input data, notifying [admin] and [root] roles.
 *
 * Ideal for frontend forms or automated systems that create appointment bookings and expect audit logging + live event notification.
 */
.arguments

   // PatientID column value
   PatientID:long

   // DoctorID column value
   DoctorID:long

   // AppointmentDate column value
   AppointmentDate:date

   // Reason column value
   Reason:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin,guest,root

// Logging invocation.
auth.ticket.get
lambda2hyper:x:@.arguments/*
log.info:hospital.Appointments entry created
   username:x:@auth.ticket.get
   arguments:x:@lambda2hyper

// Opening up database connection.
data.connect:[generic|hospital]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:Appointments
      return-id:bool:true
      values

   // Returning the correct status code.
   response.status.set:201

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:hospital.Appointments.post
      args
      roles:admin,root

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      id:x:@data.create
