
/*
 * Updates a record in the Customers table of the Northwind database.
 *
 * The following steps describe the update flow:
 *
 * 1. **Input arguments**:
 *    - Receives all possible fields of a customer including the mandatory primary key `CustomerID`.
 *    - Fields like `CompanyName`, `City`, `Phone`, etc., are optional and contain the new values to apply.
 *
 * 2. **Validation**:
 *    - Ensures the `CustomerID` is provided using `[validators.mandatory]`, as it is necessary to locate the record.
 *
 * 3. **Authorization check**:
 *    - Restricts access to users with the `admin` role using `[auth.ticket.verify]`.
 *
 * 4. **Database connection**:
 *    - Opens a connection to the `northwind` database with SQLite as the database type using `[data.connect]`.
 *
 * 5. **Preparation for update**:
 *    - Adds update values from all fields (excluding the primary key) using slicing `[1,1000]`.
 *    - Injects the `CustomerID` as a filtering condition under the `where` clause to identify the correct record.
 *
 * 6. **Update invocation**:
 *    - Executes `[data.update]` to modify the specified customer row in the `Customers` table.
 *
 * 7. **Existence check**:
 *    - Checks whether any row was actually updated. If not, returns HTTP `404` with message `"Record not found"`.
 *
 * 8. **Success response setup**:
 *    - If update was successful, responds with HTTP `202 Accepted`.
 *
 * 9. **Broadcasting changes**:
 *    - Emits a socket message (`northwind.Customers.put`) with the update arguments and user roles to notify listeners.
 *
 * 10. **Final result**:
 *    - Returns the number of affected rows under the key `affected`.
 */
.arguments

   // CustomerID column value being primary key of record to update, mandatory argument
   CustomerID:string

   // CompanyName column's new value
   CompanyName:string

   // ContactName column's new value
   ContactName:string

   // ContactTitle column's new value
   ContactTitle:string

   // Address column's new value
   Address:string

   // City column's new value
   City:string

   // Region column's new value
   Region:string

   // PostalCode column's new value
   PostalCode:string

   // Country column's new value
   Country:string

   // Phone column's new value
   Phone:string

   // Fax column's new value
   Fax:string

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/CustomerID

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin

// Opening up our database connection.
data.connect:[generic|northwind]
   database-type:sqlite

   // Parametrising our invocation.
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]

   // Invoking our update slot.
   data.update
      database-type:sqlite
      table:Customers
      values
      where
         and

   // Verifying record exists.
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found

   // Returning the correct status code.
   response.status.set:202

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   add:x:./*/sockets.signal
      get-nodes:x:@auth.ticket.verify
   set-name:x:./*/sockets.signal/*/auth.ticket.verify
      .:roles
   sockets.signal:northwind.Customers.put
      args

   // Returning success to caller.
   unwrap:x:+/*
   return
      affected:x:@data.update
