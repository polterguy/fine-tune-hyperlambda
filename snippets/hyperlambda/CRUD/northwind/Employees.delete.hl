/*
 * This file defines a secure and parameterized delete operation for removing records from the `Employees` table
 * in the Northwind SQLite database.
 *
 * Purpose:
 * - Provides a controlled and auditable mechanism for deleting employee records.
 * - Enforces strict validation and access control to prevent unauthorized or accidental deletions.
 *
 * Functional Overview:
 *
 * - Requires a single mandatory argument: `EmployeeID`, which serves as the primary key identifying the record to delete.
 * - Uses `auth.ticket.verify` to ensure only users with the `admin` role can access the endpoint.
 * - Validates the presence of the `EmployeeID` using `validators.mandatory`.
 * - Establishes a connection to the SQLite-backed `northwind` database.
 * - Dynamically constructs a `WHERE` clause for the `data.delete` operation based on the `EmployeeID` argument.
 * - Executes the `DELETE` query via `data.delete`, removing the targeted employee record.
 *
 * Event Signaling:
 * - After a successful deletion, the system emits a real-time socket message `northwind.Employees.delete`.
 * - The message includes both the deleted recordâ€™s ID and the roles of the authenticated user who initiated the request.
 * - This allows connected clients or systems to reactively update their views or caches.
 *
 * Output:
 * - Returns a result object containing the number of affected rows (typically 1 if the deletion was successful, 0 otherwise).
 *
 * This endpoint is ideal for administrative tools that require strict access control, transparency, and real-time feedback
 * when modifying critical data such as personnel records.
 */
.arguments

   // Primary key of record to delete, mandatory argument
   EmployeeID:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin
validators.mandatory:x:@.arguments/*/EmployeeID

// Opening up our database connection.
data.connect:[generic|northwind]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:Employees
      where
         and

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   add:x:./*/sockets.signal
      get-nodes:x:@auth.ticket.verify
   set-name:x:./*/sockets.signal/*/auth.ticket.verify
      .:roles
   sockets.signal:northwind.Employees.delete
      args

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
