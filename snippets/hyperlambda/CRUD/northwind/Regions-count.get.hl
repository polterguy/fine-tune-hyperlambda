
// Counts items from your Regions table in your northwind database
.arguments

   /*
    * Optional filtering arguments, allowing you to filter what rows to consider.
    *
    * - .mt implies 'more than'
    * - .lt implies 'less than'
    * - .eq implies 'equal to'
    * - .neq implies 'not equal to'
    * - .mteq implies 'more than or equal to'
    * - .lteq implies 'less than or equal to'
    * - .like becomes a LIKE SQL condition
    */
   Regions.RegionID.mt:long
   Regions.RegionID.lt:long
   Regions.RegionID.mteq:long
   Regions.RegionID.lteq:long
   Regions.RegionID.neq:long
   Regions.RegionID.eq:long
   Regions.RegionDescription.like:string
   Regions.RegionDescription.mt:string
   Regions.RegionDescription.lt:string
   Regions.RegionDescription.mteq:string
   Regions.RegionDescription.lteq:string
   Regions.RegionDescription.neq:string
   Regions.RegionDescription.eq:string

// Opening up our database connection.
data.connect:[generic|northwind]
   database-type:sqlite

   // Adding filtering arguments.
   add:x:+/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      database-type:sqlite
      table:Regions
      columns
         count(*)
            as:count
      where
         and
      limit:long:1

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*/*
