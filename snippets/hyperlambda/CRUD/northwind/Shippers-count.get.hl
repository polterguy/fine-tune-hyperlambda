
/*
 * HTTP API endpoint that returns the **total number of records** in the `Shippers` table
 * of the Northwind database, with support for optional filtering conditions.
 *
 * This endpoint is useful for pagination, statistics, or dashboards where clients need
 * a count of matching rows without retrieving full dataset contents.
 *
 * Here's a breakdown of the logic and features:
 *
 * 1. **Input Parameters (Optional Filters)**:
 *    - Allows the caller to filter records based on various fields in the `Shippers` table:
 *      - `ShipperID`: Numeric filters using `.mt`, `.lt`, `.mteq`, `.lteq`, `.eq`, and `.neq`.
 *      - `CompanyName` and `Phone`: String filters supporting `.eq`, `.neq`, `.like`, and comparative operators.
 *    - These filters dynamically construct the `WHERE` clause of the SQL query, determining which rows are included in the count.
 *
 * 2. **Database Connection**:
 *    - Establishes a connection to the Northwind database using the `[generic|northwind]` data source.
 *    - SQLite is used as the underlying database engine.
 *
 * 3. **Query Construction and Execution**:
 *    - All filtering arguments are injected into the `WHERE` clause using logical `AND`.
 *    - A `SELECT count(*)` operation is performed on the `Shippers` table to count how many rows match the conditions.
 *    - The result is aliased as `count` and limited to a single row, as only a single numeric value is expected.
 *
 * 4. **Response Construction**:
 *    - Returns the computed count to the caller in a simple JSON format, using the `count` key.
 *
 * This endpoint provides a **lightweight, efficient, and configurable** way to determine the number of records in a table,
 * making it ideal for client applications that require summary or pagination metadata.
 */
.arguments

   /*
    * Optional filtering arguments.
    */
   Shippers.ShipperID.mt:long
   Shippers.ShipperID.lt:long
   Shippers.ShipperID.mteq:long
   Shippers.ShipperID.lteq:long
   Shippers.ShipperID.neq:long
   Shippers.ShipperID.eq:long
   Shippers.CompanyName.like:string
   Shippers.CompanyName.mt:string
   Shippers.CompanyName.lt:string
   Shippers.CompanyName.mteq:string
   Shippers.CompanyName.lteq:string
   Shippers.CompanyName.neq:string
   Shippers.CompanyName.eq:string
   Shippers.Phone.like:string
   Shippers.Phone.mt:string
   Shippers.Phone.lt:string
   Shippers.Phone.mteq:string
   Shippers.Phone.lteq:string
   Shippers.Phone.neq:string
   Shippers.Phone.eq:string

// Opening up our database connection.
data.connect:[generic|northwind]
   database-type:sqlite

   // Adding filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      database-type:sqlite
      table:Shippers
      columns
         count(*)
            as:count
      where
         and
      limit:long:1

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*/*
