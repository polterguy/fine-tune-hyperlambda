
// Create one record in your Orders table in your northwind database
.arguments

   // CustomerID column value
   CustomerID:string

   // EmployeeID column value
   EmployeeID:long

   // OrderDate column value
   OrderDate:date

   // RequiredDate column value
   RequiredDate:date

   // ShippedDate column value
   ShippedDate:date

   // ShipVia column value
   ShipVia:long

   // Freight column value
   Freight:decimal

   // ShipName column value
   ShipName:string

   // ShipAddress column value
   ShipAddress:string

   // ShipCity column value
   ShipCity:string

   // ShipRegion column value
   ShipRegion:string

   // ShipPostalCode column value
   ShipPostalCode:string

   // ShipCountry column value
   ShipCountry:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:partner,professional

// Logging invocation.
auth.ticket.get
lambda2hyper:x:@.arguments/*
log.info:northwind.Orders entry created
   username:x:@auth.ticket.get
   arguments:x:@lambda2hyper

// Opening up database connection.
data.connect:[generic|northwind]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:Orders
      return-id:bool:true
      values

   // Returning the correct status code.
   response.status.set:201

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   add:x:./*/sockets.signal
      get-nodes:x:@auth.ticket.verify
   set-name:x:./*/sockets.signal/*/auth.ticket.verify
      .:roles
   sockets.signal:northwind.Orders.post
      args

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      id:x:@data.create
