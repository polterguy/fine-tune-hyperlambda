
/*
 * HTTP API endpoint for **deleting a single record** from the `Shippers` table
 * in the Northwind database. This endpoint is secured, requiring administrative access,
 * and ensures that only authorized users can perform the deletion operation.
 *
 * The endpoint begins by verifying the presence of the mandatory argument `ShipperID`, which identifies the
 * record to be deleted. It also validates that the invoking user holds an administrative role via `auth.ticket.verify:admin`.
 *
 * After successful validation, a connection to the Northwind SQLite database is established.
 * The `ShipperID` value is injected into the `WHERE` clause of a `data.delete` operation, ensuring that
 * only the targeted record is removed from the `Shippers` table.
 *
 * Once the deletion is executed, the endpoint constructs a real-time socket event (`northwind.Shippers.delete`),
 * which broadcasts the deletion activity to any subscribed clients or systems. The event payload includes the deleted recordâ€™s
 * primary key and the roles of the user who triggered the operation, enabling reactive updates or audit logging in external systems.
 *
 * Finally, the endpoint returns the number of rows affected (typically `1`) to confirm that the deletion was successful.
 * This count is unwrapped and sent to the caller under the `affected` key.
 *
 * This endpoint is a **secure and real-time-enabled API** for record deletion, supporting tight access control and
 * system-wide awareness of destructive data changes.
 */
.arguments

   // Primary key of record to delete, mandatory argument
   ShipperID:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin
validators.mandatory:x:@.arguments/*/ShipperID

// Opening up our database connection.
data.connect:[generic|northwind]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:Shippers
      where
         and

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   add:x:./*/sockets.signal
      get-nodes:x:@auth.ticket.verify
   set-name:x:./*/sockets.signal/*/auth.ticket.verify
      .:roles
   sockets.signal:northwind.Shippers.delete
      args

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
