
/*
 * This is an HTTP API endpoint that deletes a single record from the "Order Details" table in the Northwind
 * SQLite database. The client must provide both components of the composite primary key: [OrderID] and [ProductID],
 * which are mandatory for identifying the record to delete.
 *
 * Before proceeding, the endpoint verifies that the caller has admin privileges. If not authenticated
 * or lacking appropriate roles, the operation will be denied.
 *
 * The primary key arguments are validated to ensure they are present. A database connection is established,
 * and the record matching both primary key fields is deleted using a parameterized query.
 *
 * After deletion, a socket signal is broadcast to any connected clients or systems subscribed to the
 * "northwind.Order Details.delete" topic, allowing real-time updates or synchronization.
 * The signal includes the arguments used and the user's roles.
 *
 * Finally, the endpoint returns the number of rows affected by the delete operation to the caller.
 */
.arguments

   // Primary key of record to delete, mandatory argument
   OrderID:long

   // Primary key of record to delete, mandatory argument
   ProductID:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin
validators.mandatory:x:@.arguments/*/OrderID
validators.mandatory:x:@.arguments/*/ProductID

// Opening up our database connection.
data.connect:[generic|northwind]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:Order Details
      where
         and

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   add:x:./*/sockets.signal
      get-nodes:x:@auth.ticket.verify
   set-name:x:./*/sockets.signal/*/auth.ticket.verify
      .:roles
   sockets.signal:northwind.Order Details.delete
      args

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
