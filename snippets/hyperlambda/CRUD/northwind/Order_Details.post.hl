
/*
 * This is an API endpoint that creates a new record in the "Order Details" table
 * within the Northwind SQLite database. It requires several fields as input, such as:
 * [OrderID], [ProductID], [UnitPrice], [Quantity], and [Discount].
 *
 * The endpoint begins by verifying the user's authorization, allowing only users with
 * "partner" or "professional" roles to proceed. After authorization, it opens a connection
 * to the database and dynamically maps the input arguments into a structured format
 * used for record insertion.
 *
 * Once the values are prepared, the endpoint executes the insertion operation into the
 * "Order Details" table and sets the HTTP response status code to 201, indicating that
 * the resource was successfully created.
 *
 * A WebSocket message is also published to notify subscribed clients about the new record,
 * including the original input arguments and the user's roles.
 *
 * Finally, the endpoint returns a success result to the client, signaling the completion
 * of the operation.
 */
.arguments

   // OrderID column value
   OrderID:long

   // ProductID column value
   ProductID:long

   // UnitPrice column value
   UnitPrice:decimal

   // Quantity column value
   Quantity:long

   // Discount column value
   Discount:double

// Verifying user is authorized to access endpoint.
auth.ticket.verify:partner,professional

// Opening up database connection.
data.connect:[generic|northwind]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:Order Details
      values

   // Returning the correct status code.
   response.status.set:201

   // Publishing socket message.
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   add:x:./*/sockets.signal
      get-nodes:x:@auth.ticket.verify
   set-name:x:./*/sockets.signal/*/auth.ticket.verify
      .:roles
   sockets.signal:northwind.Order Details.post
      args

   // Returning result of above invocation to caller.
   return
      result:success
