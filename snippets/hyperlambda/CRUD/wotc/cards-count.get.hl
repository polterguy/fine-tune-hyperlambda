
/*
 * Counts the total number of items in the Cards table within the wotc database.
 *
 * Supports optional filtering on the following fields:
 * - CardID
 * - Name (with exact or partial match)
 * - SetID
 * - Rarity (with exact or partial match)
 *
 * Ensures the caller is authorized before accessing the data, and applies private cache control
 * to improve efficiency for repeated requests.
 * Returns the total count as [count].
 */
.arguments
   Cards.CardID.eq:long
   Cards.Name.like:string
   Cards.Name.eq:string
   Cards.SetID.eq:long
   Cards.Rarity.like:string
   Cards.Rarity.eq:string

// Meta data description for endpoint
.description:Counts items from your Cards table in your wotc database

// Type of endpoint
.type:crud-count

// Adding Cache-Control HTTP header.
response.headers.set
   Cache-Control:private, max-age=300

// Verifying user is authorized to access endpoint.
auth.ticket.verify:account_manager,admin,guest,root

// Opening up our database connection.
data.connect:[generic|wotc]
   database-type:sqlite
   add:x:+/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      database-type:sqlite
      table:Cards
      columns
         count(*)
            as:count
      where
         and
      limit:long:1

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*/*
