
/*
 * Retrieves a list of records from the Sales table in the wotc database, with support for filtering, sorting, and pagination.
 *
 * Optional arguments:
 * - [limit]: Maximum number of records to return (defaults to 25; pass -1 to return all).
 * - [offset]: Number of records to skip before returning results (for pagination).
 * - [order]: Fully qualified column to sort by (e.g., Sales.SaleDate or CardID.Name).
 * - [direction]: Sort direction, either 'asc' or 'desc'.
 *
 * Filtering is supported on:
 * - Sales fields: SaleID, CardID, SaleDate, SalePrice
 * - Joined Card fields: CardID.Name (supports both exact and pattern matching)
 *
 * If reCAPTCHA is enabled in the backend, the [recaptcha] token becomes mandatory and is validated to verify human access.
 *
 * The query includes a LEFT JOIN with the Cards table (aliased as CardID) to enrich sales data with card name metadata.
 * Access is restricted to users with roles such as account_manager, admin, guest, or root.
 * Results are publicly cached for 10 minutes to enhance performance for repeated queries.
 *
 * Returns a paginated list of sales records along with related card names.
 */
.arguments

   // Number of records to return, defaults to 25 if not specified. Pass in -1 to return all records.
   limit:long

   // Offset into the dataset of where to start retrieving records
   offset:long

   // Fully qualified name of column to order by, must be in TABLE_NAME.COLUMN_NAME format
   order:string

   // What direction to order, can be 'asc' or 'desc' implying ascending and descending
   direction:string
   recaptcha:string
   Sales.SaleID.eq:long
   Sales.CardID.eq:long
   Sales.SaleDate.eq:date
   Sales.SalePrice.eq:double
   CardID.Name.eq:string
   CardID.Name.like:string

// Meta data description for endpoint
.description:Read or list records from your Sales table in your wotc database

// Type of endpoint
.type:crud-read

// Adding Cache-Control HTTP header.
response.headers.set
   Cache-Control:public, max-age=600

// Checking reCAPTCHA value if backend is configured with reCAPTCHA configuration settings.
config.get:"magic:auth:recaptcha:key"
config.get:"magic:auth:recaptcha:secret"
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
      neq:x:@config.get/@config.get
         .
      neq:x:@config.get/@config.get
         .:
   .lambda

      // reCAPTCHA configuration settings found.
      validators.mandatory:x:@.arguments/*/recaptcha
      validators.recaptcha:x:@.arguments/*/recaptcha/[0,1]
         site-key:x:@config.get/@config.get
         secret:x:@config.get
         min:decimal:0.5

// To remove reCAPTCHA value preventing it from being used as an argument further down in file.
remove-nodes:x:@.arguments/*/recaptcha/[0,1]

// Verifying user is authorized to access endpoint.
auth.ticket.verify:account_manager,admin,guest,root

// Opening up our database connection.
data.connect:[generic|wotc]
   database-type:sqlite

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      database-type:sqlite
      table:Sales
         join:Cards
            as:CardID
            type:left
            on
               and
                  Sales.CardID:CardID.CardID
      columns
         Sales.SaleID
         Sales.CardID
         Sales.SaleDate
         Sales.SalePrice
         CardID.Name
            as:CardID.Name
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
