
/*
 * Creates a new record in the Sales table of the wotc database.
 *
 * Required arguments:
 * - [SaleID], [CardID], [SaleDate], and [SalePrice]: Values to insert into the corresponding columns of the Sales table.
 *
 * The [CardID] field includes foreign key metadata, linking to the Cards table to allow validation and frontend binding (e.g., showing CardID.Name).
 *
 * If reCAPTCHA is configured in the backend, the [recaptcha] token is mandatory and validated to ensure the request is human-initiated.
 *
 * Access is restricted to users with 'admin' or 'root' roles.
 * The record is safely inserted using a parameterized query within a secure and authenticated database connection.
 *
 * On success, the endpoint responds with HTTP status 201 (Created) and returns a success message as [result].
 */
.arguments
   recaptcha:string

   // SaleID column value
   SaleID:long

   // CardID column value
   CardID:long

   // SaleDate column value
   SaleDate:date

   // SalePrice column value
   SalePrice:double

// Meta data description for endpoint
.description:Create one record in your Sales table in your wotc database

// Type of endpoint
.type:crud-create

// Checking reCAPTCHA value if backend is configured with reCAPTCHA configuration settings.
config.get:"magic:auth:recaptcha:key"
config.get:"magic:auth:recaptcha:secret"
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
      neq:x:@config.get/@config.get
         .
      neq:x:@config.get/@config.get
         .:
   .lambda

      // reCAPTCHA configuration settings found.
      validators.mandatory:x:@.arguments/*/recaptcha
      validators.recaptcha:x:@.arguments/*/recaptcha/[0,1]
         site-key:x:@config.get/@config.get
         secret:x:@config.get
         min:decimal:0.5

// To remove reCAPTCHA value preventing it from being used as an argument further down in file.
remove-nodes:x:@.arguments/*/recaptcha/[0,1]

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin
.foreign-keys
   .
      column:CardID
      table:Cards
      foreign_column:CardID
      foreign_name:Name
      long:bool:true

// Opening up database connection.
data.connect:[generic|wotc]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:Sales
      return-id:bool:false
      values

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      result:success
