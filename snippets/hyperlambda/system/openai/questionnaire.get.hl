
/*
 * Returns the initial questionnaire for the specified type.
 */
.arguments
   type:string

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/type

// Opening up database connection.
data.connect:[generic|magic]

   // Retrieving all questions from database.
   data.select:@"
select q.question, q.type, q.context, q.name
	from questions q
		inner join questionnaires qu on qu.name = q.questionnaire
        inner join ml_types t on t.initial_questionnaire = qu.name
	where t.type = @type
   order by q.question_id"
      type:x:@.arguments/*/type

   // Retrieving main questionnaire from database.
   data.select:@"
select q.name, q.type, q.action
   from questionnaires q
      inner join ml_types t on t.initial_questionnaire = q.name
   where t.type = @type"
      type:x:@.arguments/*/type

   // Returning result to caller.
   insert-before:x:./*/return/0
      get-nodes:x:@data.connect/*/data.select/[1,2]/*/*
   add:x:./*/return/*/questions
      get-nodes:x:@data.connect/*/data.select/[0,1]/*
   if
      not-exists:x:@data.connect/*/return/*/questions/*
      .lambda
         remove-nodes:x:@data.connect/*/return/*/questions
   return
      questions
