/*
 * This Hyperlambda snippet demonstrates how to execute multiple computational tasks concurrently.
 * By using the [join] and [fork] slots, we can run different mathematical operations in parallel.
 * Each [fork] invocation represents a separate thread of execution, allowing the tasks to be processed simultaneously.
 * The [join] slot ensures that the main thread waits for all forked tasks to complete before proceeding.
 */
join
   fork
      math.multiply
         .:int:7
         .:int:8
   fork
      math.add
         .:int:15
         .:int:25
   fork
      math.subtract
         .:int:90
         .:int:50