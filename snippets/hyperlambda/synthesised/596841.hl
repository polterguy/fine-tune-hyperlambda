/*
 * This Hyperlambda code demonstrates the use of conditional branching with [if], [else-if], and [else].
 * It checks the value of the [.source] node and sets the [.outcome] node accordingly.
 * If [.source] equals 1, it sets [.outcome] to "SUCCESS".
 * If [.source] equals 2, it sets [.outcome] to "FAILURE".
 * If neither condition is met, it defaults [.outcome] to "FALLBACK" using [else].
 */
.outcome
.source:int:3
if
   eq
      get-value:x:@.source
      .:int:1
   .lambda
      set-value:x:../*/.outcome
         .:SUCCESS
else-if
   eq
      get-value:x:@.source
      .:int:2
   .lambda
      set-value:x:../*/.outcome
         .:FAILURE
else
   set-value:x:../*/.outcome
      .:FALLBACK
