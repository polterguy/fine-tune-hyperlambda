
/*
 * Lists all files in a specified folder, optionally including system files.
 *
 * This Hyperlambda endpoint allows a root user to recursively list all files under a given folder path.
 * It can optionally include system files by setting the [sys] argument to true.
 * This is useful for administrative file browsing, debugging, log access, or building custom UIs for managing server-side files.
 *
 * ### Access Control:
 * - Only users with the `root` role may invoke this endpoint.
 *   Enforced using [auth.ticket.verify:root].
 *
 * ### Arguments:
 * - `folder` (string): Required. The full path to the folder you want to scan.
 * - `sys` (bool): Optional. If true, system files will also be included in the results.
 *   Defaults to false.
 *
 * ### Behavior:
 * 1. Verifies that the user is authorized to access server file information.
 * 2. Uses [io.file.list-recursively] to scan the specified folder.
 *    - Includes hidden files by default.
 *    - Includes system files only if [sys] is true.
 * 3. Returns the list of file paths as a flat structure.
 *
 * ### Returns:
 * - A list of all file paths (relative or absolute, depending on server config) found under the specified folder.
 *
 * ### Example Response:
 * ```
 * /modules/users/user.hl
 * /modules/users/uninstall.hl
 * /logs/errors.log
 * ```
 *
 * ### Notes:
 * - This endpoint does not expose file contents, only metadata (paths).
 *   For content retrieval, pair with an endpoint like `io.stream.open-file`.
 * - Use caution when exposing this endpoint through frontend UIs. Consider filtering allowed directories.
 */
.arguments
   folder:string
   sys:bool

// Ensures user is authorized to access endpoint.
auth.ticket.verify:root

// Listing all file in specified folder.
io.file.list-recursively:x:@.arguments/*/folder
   display-hidden:bool:true
   display-system:x:@.arguments/*/sys

// Returning results of above invocation to caller.
return-nodes:x:@io.file.list-recursively/*
