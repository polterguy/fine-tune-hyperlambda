/*
 * Create an HTTP endpoint that returns all connection strings defined in the system for a specific database type.
 *
 * ### Arguments:
 * - **[databaseType]** *(required)*: The type of database to list connection strings for.
 *   Must be one of: `mysql`, `pgsql`, `mssql`, or `sqlite`.
 *
 * ### Behavior:
 * 1. **Authentication**: Verifies the user has root privileges using `auth.ticket.verify:root`.
 * 2. **Validation**:
 *    - Ensures that `[databaseType]` is provided.
 *    - Validates that the value of `[databaseType]` is one of the supported options.
 * 3. **Configuration Access**:
 *    - Constructs a dynamic key using the format `magic:databases:{databaseType}`.
 *    - Retrieves all connection strings under this section using `config.section`.
 * 4. **Return**:
 *    - Returns a map of all connection string names and values associated with the specified `databaseType`.
 *
 * ### Use Case:
 * - This endpoint is useful for administration dashboards or scripts to inspect the systemâ€™s configured databases.
 * - Ensures visibility into configured connection strings without allowing edits.
 */

.arguments
   databaseType:string

// Ensures user is authorized to access endpoint.
auth.ticket.verify:root

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/databaseType
validators.enum:x:@.arguments/*/databaseType
   .:mysql
   .:pgsql
   .:mssql
   .:sqlite

// Retrieves all connection strings according to database type specified.
strings.concat
   .:"magic:databases:"
   get-value:x:@.arguments/*/databaseType
config.section:x:-
add:x:+
   get-nodes:x:@config.section/*
return
