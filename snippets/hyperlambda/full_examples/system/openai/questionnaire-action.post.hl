/*
 * Dynamically invokes a slot under the `magic.questionnaires.action.` namespace,
 * using the provided [action] and [values] arguments.
 *
 * This endpoint is designed to allow flexible execution of predefined questionnaire-related logic
 * by mapping action names to slot invocations at runtime.
 *
 * INPUT PARAMETERS:
 * - [action:string]: The action to perform, used to construct the slot name. For example,
 *   if [action] is `"store-response"`, the slot `magic.questionnaires.action.store-response` will be invoked.
 * - [values:*]: A wildcard object containing named arguments to be passed to the target slot.
 *
 * EXECUTION FLOW:
 *
 * 1. **Validation**:
 *    - Ensures that the [action] argument is provided using [validators.mandatory].
 *
 * 2. **Slot Construction**:
 *    - Concatenates the static namespace prefix `magic.questionnaires.action.` with the dynamic [action] value
 *      to build the fully-qualified slot name to be invoked.
 *
 * 3. **Argument Injection**:
 *    - Unpacks the [values] object and inserts its key-value pairs as arguments into the upcoming [signal] call.
 *
 * 4. **Slot Invocation**:
 *    - Signals the dynamically resolved slot using [signal:x:@.slot], passing along the unpacked [values] arguments.
 *
 * 5. **Final Response**:
 *    - Returns `{ result: success }` to the caller once the slot has been successfully invoked.
 *
 * This endpoint is ideal for implementing a modular and extensible questionnaire engine,
 * where different actions (e.g., saving answers, triggering workflows, performing validations) can be mapped
 * to specific reusable logic blocks without hardcoding each endpoint individually.
 */


.arguments
   action:string
   values:*

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/action

// Figuring out what slot to invoke.
.slot
set-value:x:@.slot
   strings.concat
      .:magic.questionnaires.action.
      get-value:x:@.arguments/*/action

// Parametrising slot.
add:x:./*/signal
   get-nodes:x:@.arguments/*/values/*

// Invoking slot.
signal:x:@.slot

// Returning success to caller.
return
   result:success
