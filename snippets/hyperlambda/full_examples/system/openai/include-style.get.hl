
/*
 * Create an endpoint that returns a CSS file used for styling an embedded ChatGPT UI.
 *
 * The endpoint accepts the following parameters:
 * - [file]      - Required. The base name of the CSS file to load (without extension).
 * - [position]  - Optional. Passed through to support conditional styling based on widget location.
 * - [color]     - Optional. Used as a CSS variable to dynamically set the primary theme color.
 * - [link]      - Optional. Used to style hyperlinks inside the widget.
 * - [start]     - Optional. Used to define the start of a background gradient.
 * - [end]       - Optional. Used to define the end of a background gradient.
 * - [v]         - Optional. Version token to allow cache busting by modifying request URL.
 *
 * The logic passes all provided arguments into a reusable CSS generator Hyperlambda file located
 * at [/system/openai/include-style.css.get.hl], which handles resolving the correct file, injecting
 * CSS variables, and applying fallback logic for minified and default files.
 *
 * The resulting CSS is returned to the caller with appropriate HTTP headers.
 */
.arguments
   file:string
   position:string
   color:string
   link:string
   start:string
   end:string
   v:string

add:x:./*/execute-file
   get-nodes:x:@.arguments/*
execute-file:/system/openai/include-style.css.get.hl
return:x:-
