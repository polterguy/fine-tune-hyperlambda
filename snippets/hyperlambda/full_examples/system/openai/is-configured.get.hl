
/*
 * Checks whether OpenAI integration is enabled in the system.
 *
 * This is determined by verifying if an API key is configured under [magic:openai:key]
 * in the system's configuration. If no key exists or the key is empty/null,
 * the system is considered not to have OpenAI enabled.
 *
 * Access to this endpoint is restricted to root users only.
 *
 * INPUT PARAMETERS:
 * - None
 *
 * EXECUTION FLOW:
 *
 * 1. **Authorization**:
 *    - Requires root-level access using [auth.ticket.verify:root].
 *
 * 2. **Key Presence Check**:
 *    - Attempts to retrieve the OpenAI API key using [config.get:"magic:openai:key"].
 *    - If the key is missing or empty (`null` or `""`), the endpoint returns `{ result: false }`.
 *    - If the key exists and contains a value, the endpoint returns `{ result: true }`.
 *
 * This endpoint can be used by administrative UIs or setup wizards to determine
 * whether OpenAI functionality has been configured on the backend.
 */


.arguments

// Making sure user has access to invoked endpoint.
auth.ticket.verify:root

// Checking if configuration setting for OpenAI API key exists.
config.get:"magic:openai:key"
if
   eq:x:@config.get
      .
   .lambda

      // No API key found for OpenAI
      return
         result:bool:false

// OpenAI API key exists.
return
   result:bool:true
