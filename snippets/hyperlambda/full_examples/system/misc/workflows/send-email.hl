
/*
 * Sends an email to a specified recipient with optional reply-to information and Markdown-to-HTML formatting.
 *
 * This endpoint allows sending emails from the backend, taking in required details such as the recipientâ€™s
 * name, email, subject, and body. It transforms the email body from Markdown to HTML and ensures safe transmission
 * by HTML-encoding the content. The `reply-to` fields define the sender information for email replies. The endpoint
 * uses configuration-based sender defaults unless explicitly overridden.
 *
 * ### Arguments:
 * - `name` (string, required): The name of the person receiving the email.
 * - `email` (string, required): The email address to send the message to.
 * - `reply-to` (string, required): The display name for reply-to.
 * - `reply-to-email` (string, required): The email address for reply-to.
 * - `subject` (string, required): The subject line of the email. Will be HTML-encoded before sending.
 * - `body` (string, required): The body content in Markdown format. This is transformed into HTML before sending.
 *
 * ### Behavior:
 * 1. **HTML Encoding**:
 *    - HTML-encodes both the subject and the body using reusable workflow actions to prevent injection issues.
 *
 * 2. **Markdown Conversion**:
 *    - Converts the `body` argument from Markdown to HTML using a reusable `markdown2html.hl` action.
 *
 * 3. **Sender Configuration**:
 *    - Fetches the default sender name (`magic:smtp:from:name`) and sender email (`magic:smtp:from:address`)
 *      from the configuration system using the `config.hl` workflow action.
 *
 * 4. **Email Sending**:
 *    - Executes the final email sending using `email.hl`, passing in:
 *      - Recipient name and email
 *      - HTML-formatted body
 *      - HTML-encoded subject
 *      - Reply-to fields (`reply-to`, `reply-to-email`)
 *      - Marks the email body as `html: true` to send the transformed HTML properly.
 *
 * 5. **Returns**:
 * ```json
 * {
 *   "result": "success"
 * }
 * ```
 *
 * ### Example Usage:
 * ```json
 * {
 *   "name": "Jane Doe",
 *   "email": "jane@example.com",
 *   "reply-to": "Support Team",
 *   "reply-to-email": "support@company.com",
 *   "subject": "Welcome to Our Platform",
 *   "body": "Hi **Jane**, we're glad you're here!"
 * }
 * ```
 *
 * ### Notes:
 * - The user should confirm the email before it is sent to ensure correctness and prevent accidental sends.
 * - Always preview the resulting HTML to ensure Markdown renders as expected.
 * - Errors in any step (e.g., missing config values, bad input) will cause the action to fail.
 */
.arguments

   // Mandatory argument being the name of person to send the email to.
   name:string

   // Mandatory argument being the email address to send the email to.
   email:string

   // Mandatory argument being reply to name if the recipient of the email choses to reply.
   reply-to:string

   // Mandatory argument being email address to reply to if the recipient of the email choses to reply.
   reply-to-email:string

   // Mandatory argument being the subject line of the email to send.
   subject:string

   // Mandatory argument being the body of the email. This can be Markdown at which point it will be automatically transformed to HTML before the email is sent.
   body:string

// HTML encodes the specified [html] and returns to caller.
execute:magic.workflows.actions.execute
   name:html-encode-body
   filename:/misc/workflows/actions/misc/html-encode.hl
   arguments
      html:x:@.arguments/*/body

// HTML encodes the specified [html] and returns to caller.
execute:magic.workflows.actions.execute
   name:html-encode-subject
   filename:/misc/workflows/actions/misc/html-encode.hl
   arguments
      html:x:@.arguments/*/subject

// Transforms the specified [markdown] to HTML and returns to caller.
execute:magic.workflows.actions.execute
   name:markdown2html
   filename:/misc/workflows/actions/misc/markdown2html.hl
   arguments
      markdown:x:--/execute/=html-encode-body/*/content

/*
 * Returns the specified [key] configuration setting.
 *
 * Notice, to traverse into for instance magic.foo.bar, you'll have to colon separate
 * your path as follows "magic:foo:bar".
 */
execute:magic.workflows.actions.execute
   name:config-name
   filename:/misc/workflows/actions/misc/config.hl
   arguments
      key:"magic:smtp:from:name"

/*
 * Returns the specified [key] configuration setting.
 *
 * Notice, to traverse into for instance magic.foo.bar, you'll have to colon separate
 * your path as follows "magic:foo:bar".
 */
execute:magic.workflows.actions.execute
   name:config-email
   filename:/misc/workflows/actions/misc/config.hl
   arguments
      key:"magic:smtp:from:address"

/*
 * Sends an email to the specified [name]/[email] recipient, with the specified [subject] and [body].
 *
 * Optionally supply [from] and [from-email] as name/email sender, and/or [reply-to] and [reply-to-email]
 * as the email to reply to. If you don't supply [from] or [from-email] then this action will use the
 * default sender settings from your configuration.
 */
execute:magic.workflows.actions.execute
   name:email
   filename:/misc/workflows/actions/misc/email.hl
   arguments
      reply-to:x:@.arguments/*/reply-to
      subject:x:--/execute/=html-encode-subject/*/content
      body:x:--/execute/=markdown2html/*/html
      html:bool:true
      name:x:@.arguments/*/name
      email:x:@.arguments/*/email
      reply-to-email:x:@.arguments/*/reply-to-email

return
   result:success
