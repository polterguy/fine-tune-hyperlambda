
/*
 * Sends an email to the cloudlet owner using default configuration and a custom reply-to address.
 *
 * This HTTP endpoint allows sending a Markdown-based message to the cloudlet owner. It uses the sender's
 * display name and email for reply purposes (`reply-to` and `reply-to-email`) while automatically retrieving
 * the recipient's name and email from the backend configuration (typically defined in `magic:smtp:from:name`
 * and `magic:smtp:from:address`).
 *
 * ### Arguments:
 * - `reply-to` (string, required): The name to display as the reply-to sender.
 * - `reply-to-email` (string, required): The email address to use as reply-to.
 * - `subject` (string, required): The subject of the email. This will be HTML-encoded before sending.
 * - `body` (string, required): The body content of the email, written in Markdown. It will be transformed into HTML.
 *
 * ### Behavior:
 * 1. **HTML Encoding**:
 *    - HTML-encodes the `subject` and `body` to sanitize input.
 *
 * 2. **Markdown Conversion**:
 *    - Converts the sanitized body from Markdown to HTML for formatting consistency in the email client.
 *
 * 3. **Configuration Lookup**:
 *    - Retrieves the owner's name and email address from configuration keys:
 *      - `magic:smtp:from:name`
 *      - `magic:smtp:from:address`
 *    - These values define the actual recipient of the email.
 *
 * 4. **Email Sending**:
 *    - Uses the generic email workflow to send the final message:
 *      - Sends the encoded subject and Markdown-rendered HTML body.
 *      - Sets reply-to headers to the senderâ€™s provided details.
 *      - Marks the body as `html: true` to ensure correct formatting.
 *
 * ### Returns:
 * ```json
 * {
 *   "result": "success"
 * }
 * ```
 *
 * ### Example Usage:
 * ```json
 * {
 *   "reply-to": "John Doe",
 *   "reply-to-email": "john@example.com",
 *   "subject": "Feedback on the platform",
 *   "body": "Hi there,\n\nI just wanted to say thanks for the amazing product!"
 * }
 * ```
 *
 * ### Notes:
 * - This function **does not expose or require the recipient's email address** explicitly; it is pulled securely from config.
 * - The system should always prompt the user to confirm the email before executing this endpoint.
 * - All content is sanitized and transformed to ensure it renders cleanly and safely in HTML-capable email clients.
 */
.arguments

   // Mandatory argument being the reply to name of the person sending the email.
   reply-to:string

   // Mandatory argument being the email address of the person sending the email.
   reply-to-email:string

   // Mandatory argument being the subject line of the email.
   subject:string

   // Mandatory argument being the body of the email to send. This argument can be Markdown at which point it will be automatically transformed into HTML.
   body:string

// HTML encodes the specified [html] and returns to caller.
execute:magic.workflows.actions.execute
   name:html-encode-body
   filename:/misc/workflows/actions/misc/html-encode.hl
   arguments
      html:x:@.arguments/*/body

// HTML encodes the specified [html] and returns to caller.
execute:magic.workflows.actions.execute
   name:html-encode-subject
   filename:/misc/workflows/actions/misc/html-encode.hl
   arguments
      html:x:@.arguments/*/subject

// Transforms the specified [markdown] to HTML and returns to caller.
execute:magic.workflows.actions.execute
   name:markdown2html
   filename:/misc/workflows/actions/misc/markdown2html.hl
   arguments
      markdown:x:--/execute/=html-encode-body/*/content

/*
 * Returns the specified [key] configuration setting.
 *
 * Notice, to traverse into for instance magic.foo.bar, you'll have to colon separate
 * your path as follows "magic:foo:bar".
 */
execute:magic.workflows.actions.execute
   name:config-name
   filename:/misc/workflows/actions/misc/config.hl
   arguments
      key:"magic:smtp:from:name"

/*
 * Returns the specified [key] configuration setting.
 *
 * Notice, to traverse into for instance magic.foo.bar, you'll have to colon separate
 * your path as follows "magic:foo:bar".
 */
execute:magic.workflows.actions.execute
   name:config-email
   filename:/misc/workflows/actions/misc/config.hl
   arguments
      key:"magic:smtp:from:address"

/*
 * Send an email to the specified [name]/[email] recipient, with the specified [subject] and [body].
 *
 * Optionally supply [from] and [from-email] as name/email sender, and/or [reply-to] and [reply-to-email]
 * as the email to reply to. If you don't supply [from] or [from-email] then this action will use the
 * default sender settings from your configuration.
 */
execute:magic.workflows.actions.execute
   name:email
   filename:/misc/workflows/actions/misc/email.hl
   arguments
      reply-to:x:@.arguments/*/reply-to
      subject:x:--/execute/=html-encode-subject/*/content
      body:x:--/execute/=markdown2html/*/html
      html:bool:true
      name:x:--/execute/=config-name/*/value
      email:x:--/execute/=config-email/*/value
      reply-to-email:x:@.arguments/*/reply-to-email

return
   result:success
