
/*
 * Generates a BlowFish (bcrypt) hash of a given input value and modifies it in-place via reference.
 *
 * This slot is named [transformers.hash-password] and is designed to hash a password-like string
 * securely using the BlowFish algorithm (bcrypt), applying an individual, randomized salt automatically.
 * The hashed result replaces the original value inside the node passed to the slot using lambda reference notation.
 *
 * ### Behavior:
 * - Accepts a single argument, passed **by reference**, that points to the node whose value should be hashed.
 * - Retrieves the original value using [get-value:x:@.arguments/0/#], which dereferences the input node.
 * - Hashes the value using [crypto.password.hash].
 * - If the returned hash differs from the original (safety check), the value of the referenced node is updated in-place.
 *
 * This structure ensures that the caller's original node is transformed directly, allowing seamless hashing
 * during workflows such as user creation or password updates without returning new values separately.
 *
 * ### Arguments:
 * - `[0]` (reference): A reference to the node whose value should be replaced with its hashed version.
 *   The input must contain the plaintext password as its value.
 *
 * ### Returns:
 * - No explicit return value. The referenced nodeâ€™s value is modified in-place to contain the hashed password.
 *
 * ### Example Usage:
 * ```hyperlambda
 * .password
 *    .:"my-plain-text-password"
 * execute:transformers.hash-password
 *    .:ref:@.password
 * ```
 * After execution, the `.password` node now contains the bcrypt hash of the original password.
 *
 * This slot is particularly useful when composing dynamic pipelines for secure user creation
 * or transforming sensitive data before storage.
 */
slots.create:transformers.hash-password
   get-value:x:@.arguments/0/#
   crypto.password.hash:x:-
   if
      not
         eq
            get-value:x:@crypto.password.hash
            .
      .lambda
         set-value:x:@.arguments/0/#
            get-value:x:@crypto.password.hash
