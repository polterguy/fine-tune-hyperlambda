
/*
 * HTTP endpoint that returns all available workflows to the caller.
 *
 * ## Overview
 * This endpoint aggregates all Hyperlambda-based workflows defined across the system.
 * It includes:
 * - Core system workflows under `/misc/workflows/workflows/`
 * - Custom user-defined workflows under `/etc/workflows/workflows/`
 * - Module-specific workflows under `/modules/*/workflows/workflows/`
 *
 * ## Access Control
 * - Restricted to users with `root` privileges via `[auth.ticket.verify:root]`.
 *
 * ## Functionality
 * 1. Initializes an internal list to store discovered workflow file paths.
 * 2. Scans the system recursively to find `.hl` (Hyperlambda) files from:
 *    - System workflows (`/misc/workflows/workflows/`)
 *    - Custom workflows (`/etc/workflows/workflows/`), if it exists
 *    - Installed modules (`/modules/*/workflows/workflows/`), if applicable
 * 3. Filters out any non-Hyperlambda files by ensuring the filename ends with `.hl`.
 * 4. For each valid file:
 *    - Adds the full file path to the output collection.
 *
 * ## Output
 * - Returns a list of all workflow file paths as strings.
 * - Each item represents the fully qualified file system path to an executable workflow file.
 *
 * ## Use Case
 * - Typically used by administrative tools or workflow editors to list all available workflows in the system.
 */

.arguments

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Buffer for all workflows in the system.
.result

// Retrieving all system workflows.
add:x:@.result
   io.file.list-recursively:/misc/workflows/workflows/

// Retrieving all custom workflows.
if
   io.folder.exists:/etc/workflows/workflows/
   .lambda
      add:x:@.result
         io.file.list-recursively:/etc/workflows/workflows/

// Then iterating through each installed module, and retrieving all module workflows.
io.folder.list:/modules/
for-each:x:@io.folder.list/*
   strings.concat
      get-value:x:@.dp/#
      .:workflows/workflows/
   if
      io.folder.exists:x:@strings.concat
      .lambda

         // Module has custom actions.
         add:x:@.result
            io.file.list-recursively:x:@strings.concat

// Filtering out everything not ending with '.hl'.
for-each:x:@.result/*
   if
      strings.ends-with:x:@.dp/#
         .:.hl
      .lambda

         // Returning workflows file to caller.
         unwrap:x:+/*/*
         add:x:../*/return
            .
               .:x:@.dp/#

// Returning result to caller.
return
