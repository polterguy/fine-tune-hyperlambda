
// CRUD create endpoint inserting one record into your questions table in your magic database taking question, questionnaire with authentication and authorisation for root,admin roles/*
 * Creates a new record in the [questions] table in the "magic" SQLite database.
 *
 * This secured endpoint allows users with root or admin privileges to add a new question
 * to a specified questionnaire. It supports structured data input and responds with the
 * unique ID of the newly created question.
 *
 * INPUT PARAMETERS:
 * - [question:string]: The actual question to be asked (e.g., "What is your name?").
 * - [questionnaire:string]: The identifier of the questionnaire this question belongs to.
 * - [type:string] (optional): The expected input type (e.g., text, email, number).
 * - [name:string] (optional): An internal or frontend-facing field name for mapping answers.
 *
 * EXECUTION FLOW:
 *
 * 1. **Authorization**:
 *    - Uses [auth.ticket.verify:root] to ensure only authorized users (root/admin) can invoke this endpoint.
 *      *(Note: To allow both roles, this could be expanded to `auth.ticket.verify:root,admin` if needed.)*
 *
 * 2. **Database Connection**:
 *    - Connects to the SQLite-based "magic" database using [data.connect] with `database-type:sqlite`.
 *
 * 3. **Data Preparation**:
 *    - Extracts and adds all input arguments to the [values] node for insertion.
 *
 * 4. **Record Creation**:
 *    - Inserts a new row into the [questions] table using [data.create].
 *
 * 5. **Response**:
 *    - Returns HTTP status 201 (Created).
 *    - Returns the [id] of the newly created record as part of the response payload.
 *
 * This endpoint is useful in admin dashboards or dynamic form builders where users need to define
 * custom questionnaires for onboarding, surveys, lead qualification, or customer support flows.
 */
 
.arguments
   question:string
   questionnaire:string
   type:string
   name:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up database connection.
data.connect:[generic|magic]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:questions
      values

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   yield
      id:x:@data.create
