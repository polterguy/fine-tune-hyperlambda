/*
 * Creates a new training snippet in the [ml_training_snippets] table of the "magic" database.
 *
 * This authenticated and root-protected endpoint supports insertion of a single training record
 * with structured fields used in OpenAI fine-tuning and vector-based learning workflows.
 *
 * INPUT PARAMETERS:
 * - [type:string]: Logical model category to associate the snippet with.
 * - [pushed:long]: Flag indicating whether the snippet has been uploaded to OpenAI (typically 0 or 1).
 * - [uri:string]: Optional reference URI (e.g., source document or origin).
 * - [prompt:string]: The input text used to train the model.
 * - [completion:string]: The expected output text that completes the prompt.
 * - [meta:string]: Optional metadata about the snippet, such as filename or origin.
 * - [cached:int]: Optional flag indicating caching status or usage.
 *
 * EXECUTION FLOW:
 *
 * 1. **Authorization**:
 *    - Ensures only root users can call this endpoint using [auth.ticket.verify:root].
 *
 * 2. **Database Connection**:
 *    - Connects to the "magic" database using [data.connect:[generic|magic]].
 *
 * 3. **Business Rule Enforcement**:
 *    - Uses [try-signal:magic.ai.can-create-snippet] to verify that snippet creation is allowed for the given [type].
 *    - This can enforce limits, quotas, or other backend policies.
 *
 * 4. **Data Insertion**:
 *    - Assembles the provided arguments and inserts them into the [ml_training_snippets] table.
 *    - Uses [data.create] to persist the record in the database.
 *
 * 5. **Response Handling**:
 *    - Sets HTTP status code to 201 (Created) on success.
 *    - Returns the ID of the newly created record for downstream reference.
 *
 * This endpoint is essential for any UI or backend process that collects new prompt-completion examples
 * for fine-tuning LLMs, creating contextual embeddings, or storing human feedback data.
 */

.arguments
   pushed:long
   uri:string
   prompt:string
   completion:string
   meta:string
   type:string
   cached:int

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up database connection.
data.connect:[generic|magic]

   // Verifying user can create more snippets.
   add:x:+
      get-nodes:x:@.arguments/*/type
   try-signal:magic.ai.can-create-snippet

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      table:ml_training_snippets
      values

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   yield
      id:x:@data.create
