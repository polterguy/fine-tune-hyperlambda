/*
 * Deletes a single record from the [questions] table in the "magic" database using [question_id] as the primary key.
 *
 * This endpoint is protected and can only be invoked by users with [root] or [admin] roles. It is used to remove
 * individual questionnaire questions, typically as part of an administrative interface for managing dynamic forms.
 *
 * INPUT PARAMETERS:
 * - [question_id:long]: Required. The unique ID of the question to be deleted.
 *
 * EXECUTION FLOW:
 *
 * 1. **Authorization**:
 *    - Ensures the user has either `root` or `admin` role using [auth.ticket.verify:root].
 *      (Note: To allow both roles, adjust to `auth.ticket.verify:root,admin` if needed.)
 *
 * 2. **Validation**:
 *    - Verifies that the required [question_id] argument is provided using [validators.mandatory].
 *
 * 3. **Database Connection**:
 *    - Connects to the SQLite-based "magic" database using [data.connect] with `database-type:sqlite`.
 *
 * 4. **Delete Operation**:
 *    - Adds the [question_id] filter to the [where] clause.
 *    - Executes a [data.delete] on the [questions] table to remove the matching record.
 *
 * 5. **Response**:
 *    - Unwraps the result and returns the number of affected rows via [affected:x:@data.delete],
 *      confirming whether the deletion was successful.
 *
 * This endpoint is ideal for managing questionnaire content in dashboards or admin panels,
 * allowing safe and controlled removal of individual questions.
 */

.arguments
   question_id:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/question_id

// Opening up our database connection.
data.connect:[generic|magic]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:questions
      where
         and

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
