
/*
 * This Hyperlambda endpoint cancels all active subscriptions for the currently authenticated user.
 *
 * 1. [.arguments]
 *    * Empty to prevent arguments from being passed in by the caller.
 *
 * 2. [.extra]
 *    * Buffer to hold metadata from the [users_extra] table, such as the user's [email] and [name].

 * 3. [auth.ticket.get]
 *    * Retrieves the username from the currently authenticated JWT token.

 * 4. [execute:magic.workflows.actions.execute]
 *    * Executes a workflow file that searches for all Stripe subscriptions associated with the current user.
 *    * The [username] argument filters results to only the subscriptions belonging to the invoking user.

 * 5. [for-each:x:@execute/*]
 *    * Iterates over each active subscription returned by the previous step.

 * 6. [execute:magic.workflows.actions.execute]
 *    * Executes a workflow that deletes the Stripe subscription identified by the [subscription_id].

 * 7. [try/.catch]
 *    * Wraps each subscription deletion in error handling logic to log failures without interrupting the flow.

 * 8. [data.connect:magic]
 *    * Opens a connection to the "magic" database.

 * 9. [data.delete]
 *    * Deletes all user roles except for [guest] and [root], effectively removing paid-tier roles.

 * 10. [data.read]
 *     * Reads extra information such as [name] and [email] from [users_extra] table for the current user.

 * 11. [for-each:x:@data.read/*]
 *     * Loops through the result set, extracting [type] and [value] as key-value pairs, then adds them to [.extra].

 * 12. [execute:magic.auth.authenticate]
 *     * Re-authenticates the user to reflect updated roles and generates a new JWT token.

 * 13. [yield]
 *     * Returns the new authentication [ticket] and the user's extra data in [extra] to the caller.
 *
 *
 * **Use cases:**
 * * Enables end-users to cancel their own subscriptions.
 * * Useful in customer self-service portals or account termination workflows.
 * * Ensures clean revocation of privileges and data removal for compliant account offboarding.
 */
.arguments

// Buffer for user's extra information.
.extra

// Retrieving username.
auth.ticket.get

/*
 * Searches for subscriptions belonging to user.
 *
 * Returns all subscriptions belonging to the specified user.
 */
execute:magic.workflows.actions.execute
   name:stripe-subscription-search
   filename:/modules/stripe/workflows/actions/stripe-subscription-search.hl
   arguments
      username:x:@auth.ticket.get

// Looping through all subscriptions belonging to user and canceling these.
for-each:x:@execute/*

   /*
    * Deletes the existing Stripe subscription for the given [subscription_id].
    *
    * Will use your Stripe API token found from your settings as it's interacting
    * with the Stripe API.
    */
   try
      execute:magic.workflows.actions.execute
         name:stripe-subscription-delete
         filename:/modules/stripe/workflows/actions/stripe-subscription-delete.hl
         arguments
            subscription_id:x:@.dp/#/*/id
   .catch
      log.error:x:@.arguments/*/message

// Opening up database connection.
data.connect:magic

   // Deleting all roles user belongs to except root and guest.
   data.delete
      table:users_roles
      where
         and
            user.eq:x:@auth.ticket.get
            role.neq:guest
            role.neq:root

   // Retrieving extra information.
   data.connect:magic
      data.read
         table:users_extra
         where
            and
               user.eq:x:@auth.ticket.get
               or
                  type.eq:name
                  type.eq:email
      for-each:x:@data.read/*
         set-name:x:./*/add/*/*
            get-value:x:@.dp/#/*/type
         set-value:x:./*/add/*/*
            get-value:x:@.dp/#/*/value
         add:x:@.extra
            .
               .

// Authenticating user again creating a new JWT token since roles have been updated.
execute:magic.auth.authenticate
   username:x:@auth.ticket.get
   password-check:bool:false

// Returning token and extra information to caller.
yield
   ticket:x:@execute/*/ticket
   extra:x:@.extra/*
