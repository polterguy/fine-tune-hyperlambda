
/*
 * Returns a cryptographic challenge to the client, which if client
 * can successfully cryptographically sign, a JWT token will be returned,
 * authenticating the user with whatever username is associated with the key pair's
 * public key.
 */
.arguments

// Creating a cryptographically secured bunch of gibberish.
crypto.random
   min:50
   max:100

// Storing challenge in memory cache for 300 seconds (5 minutes).
cache.set:x:@crypto.random
   expiration:300
   value:VALID

// Returning challenge to caller.
unwrap:x:+/*
return
   result:x:@crypto.random
