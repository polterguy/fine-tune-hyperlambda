
/*
 * This endpoint returns the public RSA key of the server along with proper headers.
 *
 * 1. [io.file.exists]
 *    * Verifies that the file `/etc/system/crypto/keys/public.key` exists.
 *    * If it does not exist, the endpoint returns an early [FAILURE] response.
 *
 * 2. [response.headers.set]
 *    * Sets the HTTP response content type to `text/plain` to ensure correct MIME type for RSA key output.
 *
 * 3. [io.file.load]
 *    * Loads the raw contents of the public key file.
 *    * If successful, returns the key contents directly to the caller using [return].
 *
 * 4. [return]
 *    * Either returns the actual key or a failure message depending on existence of the key file.
 *
 * Use Cases:
 * * Exposes the public key to external systems for signature verification.
 * * Enables secure communication setup using the server's public key.
 */
.arguments

/*
 * Loads the file containing the public key, if existing,
 * and returns its content to caller.
 */
if
   io.file.exists:/etc/system/crypto/keys/public.key
   .lambda
else
   return
      result:FAILURE

// Key exists, returning it to caller, in addition to its fingerprint.
response.headers.set
   Content-Type:text/plain
io.file.load:/etc/system/crypto/keys/public.key
return:x:@io.file.load
