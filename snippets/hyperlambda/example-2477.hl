
// Read or list records from your media table in your cms database
.arguments

   // ID field 'equals' filtering.
   media.id.eq:long

   // post_id field 'equals' filtering.
   media.post_id.eq:long

   // file_path field SQL 'like' filtering, allowing for using 5 characters.
   media.file_path.like:string

   // file_path field 'equals' filtering.
   media.file_path.eq:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:enterprise,root

// Opening up our database connection.
data.connect:[generic|cms]
   database-type:sqlite

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      database-type:sqlite
      table:media
         join:posts
            as:post_id
            type:left
            on
               and
                  media.post_id:post_id.id
      columns
         media.id
         media.post_id
         media.file_path
         media.file_type
         media.created_at
         post_id.title
            as:post_id.title
      where
         and

   // Returning result of above read invocation to caller.
   add:x:./*/return
      get-nodes:x:@data.read/*
   return
