
/*
 * 1. The [convert] slot attempts to convert the value of [.src] to a new type, which is specified by the child node [type]. In this case, the requested type is "non-existing-type".
 * 2. The [type] node under [convert] defines the target type for the conversion, but since "non-existing-type" is not a valid or supported type in Hyperlambda, this will trigger an exception.
 * 
 * Use cases:
 * - To demonstrate error handling when converting a value to an invalid or unsupported type.
 * - To illustrate what happens if a developer mistypes the type name in a conversion operation.
 * - Can be used in test scenarios to ensure the system responds correctly to invalid type conversion requests.
 * - Useful for showcasing how Hyperlambda enforces type safety and validation during data transformations.
 */
.src:int:5
convert:x:@.src
   type:non-existing-type
