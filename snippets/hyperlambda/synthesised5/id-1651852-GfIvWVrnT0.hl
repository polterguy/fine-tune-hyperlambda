
/*
 * 1. [if] checks a condition and executes its child lambda if the condition is true.
 * 2. [not-exists] checks if the specified expression does not yield any results. Here, it verifies that there are no child nodes of [.result] whose name matches the value of the first node from [strings.split].
 * 3. [.lambda] contains the code to execute if the [not-exists] condition is true.
 * 4. [unwrap] forward-evaluates all expressions in its sibling nodes, ensuring that any expressions are resolved before proceeding.
 * 5. [add] adds a new child node to [.result], where the new node's name is set to the value of the first node from [strings.split].
 * 
 * Use cases:
 * - Ensuring that a value from a split string is only added to [.result] if it does not already exist as a child node.
 * - Preventing duplicate entries in [.result] when processing a list of values.
 * - Dynamically building a unique set of nodes from a list of input strings.
 */
if
   not-exists:x:"@.result/*/\"={@strings.split/0}\""
   .lambda
      unwrap:x:+/*/*
      add:x:@.result
         .
            .:x:@strings.split/0
