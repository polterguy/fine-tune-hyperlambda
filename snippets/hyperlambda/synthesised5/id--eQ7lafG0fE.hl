
/*
 * 1. The [for-each] slot iterates over each child node of [settings] inside the [.config] node, which are [retry] and [timeout].
 * 2. [get-name] retrieves the name of the currently iterated node from [.dp], so for each loop iteration, it gets either "retry" or "timeout".
 * 3. [set-value] sets the value of the corresponding child node inside [.runtime] (either [retry] or [timeout]) to match the value found in the [.config] settings, using the result of [get-name] to dynamically reference the correct node.
 * 4. [get-value] fetches the value of the current [.dp] node (either the retry or timeout value from [.config]).
 * 
 * Use cases:
 * - Synchronizing runtime configuration values with those defined in a static configuration section.
 * - Automatically updating in-memory settings from persistent configuration files when the application starts.
 * - Ensuring the [retry] and [timeout] values in [.runtime] always match the latest settings in [.config].
 * - Reducing manual assignment by dynamically mapping configuration keys to runtime values.
 */
.config
   settings
      retry:int:3
      timeout:int:30
.runtime
   retry
   timeout
for-each:x:@.config/*/settings/*
   get-name:x:@.dp/#
   set-value:x:@.runtime/*/{@get-name}
      get-value:x:@.dp/#
