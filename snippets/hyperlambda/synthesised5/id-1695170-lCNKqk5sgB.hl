
/*
 * 1. [data.connect] - Establishes a database connection using the "fine-tune" connection string.
 * 2. [data.select] - Executes an SQL query to retrieve rows from the [hyperlambda] table where [is_static] and [synthesised] are 0, ordering by the combined length of the [code] and [prompt] columns in descending order, and paginating using [@limit] and [@offset] from the [.arguments] node.
 * 3. [for-each] - Iterates through each result from the [data.select], processing one row at a time.
 * 4. [hyper2lambda] - Parses the [code] field from the current row into a lambda object for further traversal.
 * 5. Nested [for-each] - Walks through every descendant node in the lambda object to analyze each node.
 * 6. [if] with [and] and [not-null]/[eq]/[type] - Checks if the current node is not null and its type is "x".
 * 7. [set-value] - Constructs a new Hyperlambda string expression based on the node's value and stores it in [.tmp].
 * 8. [data.read] - Checks the database for existing records with code matching [.tmp].
 * 9. [if not-exists] - If no matching record exists, logs info, generates a synthetic snippet using OpenAI via [execute], extracts the answer, converts it back to Hyperlambda, appends it to the snippet, and constructs a unique filename.
 * 10. [io.file.save] - Saves the newly constructed Hyperlambda snippet to disk with the generated filename.
 * 11. [else] - If the snippet already exists, logs this information.
 * 
 * Use cases:
 * - Automatically augmenting a Hyperlambda snippet dataset by generating synthetic code completions using OpenAI when no matching record exists, supporting fine-tuning workflows.
 * - Dynamically traversing and analyzing Hyperlambda code to identify and act on specific node types (e.g., type "x") for dataset enrichment or code analysis.
 * - Persisting new synthetic Hyperlambda snippets to a structured file system location, ensuring uniqueness and traceability via generated filenames.
 * - Ensuring no duplicate synthetic snippets are generated by checking for existing records before invoking costly operations or storage.
 * - Logging each significant action, such as snippet creation or skipping existing entries, to aid in monitoring and debugging of the fine-tuning data preparation process.
 */
data.connect:fine-tune
   data.select:select * from hyperlambda where is_static = 0 and synthesised = 0 order by length(code) + length(prompt) desc limit @limit offset @offset
      @limit:x:@.arguments/*/limit
      @offset:x:@.arguments/*/offset
   for-each:x:@data.select/*
      hyper2lambda:x:@.dp/#/*/code
      for-each:x:@hyper2lambda/**/*
         if
            and
               not-null:x:@.dp/#
               eq
                  type:x:@.dp/#
                  .:x
            .lambda
               .tmp
               set-value:x:@.tmp
                  strings.concat
                     .:".:x:"
                     convert:x:@.dp/#
                        type:string
               data.read
                  table:hyperlambda
                  where
                     and
                        code.eq:x:@.tmp
               if
                  not-exists:x:@data.read/*
                  .lambda
                     log.info:Creating synthetic snippet
                        expression:x:@.tmp
                     execute:magic.workflows.actions.execute
                        name:openai-query
                        filename:/modules/openai/workflows/actions/openai-query.hl
                        arguments
                           model:gpt-4o
                           max_tokens:int:1500
                           instruction:x:@.system-message
                           query:x:@.tmp
                     .foo
                     unwrap:x:+/*/*
                     add:x:@.foo
                        .
                           ..:x:@execute/*/answer
                     lambda2hyper:x:@.foo/*
                        comments:true
                     set-value:x:@.tmp
                        strings.concat
                           get-value:x:@lambda2hyper
                           .:@"
"
                           get-value:x:@.tmp
                     .filename
                     set-value:x:@.filename
                        strings.concat
                           .:/modules/fine-tune-hyperlambda/snippets/hyperlambda/synthesised4/
                           .:id-
                           get-value:x:@for-each/@.dp/#/*/hyperlambda_id
                           .:-
                           crypto.random
                              min:10
                              max:10
                           .:.hl
                     io.file.save:x:@.filename
                        get-value:x:@.tmp
               else
                  log.info:Snippet already exists.
