
/*
 * 1. The [if] slot checks a compound condition using the [and] slot, ensuring both sub-conditions must be true for the inner block to execute.
 * 2. The [mte] slot verifies that the value of [http.post] is more than or equal to 200.
 * 3. The [lt] slot checks that the value of [http.post] is less than 300.
 * 4. If both conditions are satisfied (i.e., [http.post] status is in the 200â€“299 range), the [.lambda] block executes.
 * 5. Inside [.lambda], a [.name] node is created, and its value is set to the value of the [name] node inside the [content] node of [http.post].
 * 6. Similarly, a [.user-id] node is created, and its value is set to the value of the [user-id] node inside the [content] node of [http.post].
 * 
 * Use cases:
 * - Extracting specific fields from a successful HTTP POST response and storing them for further processing.
 * - Validating that an HTTP request was successful before acting on its returned data.
 * - Mapping response data from an API call to local variables for use in subsequent workflow steps.
 */
if
   and
      mte:x:@http.post
         .:int:200
      lt:x:@http.post
         .:int:300
   .lambda
      .name
      set-value:x:@.name
         get-value:x:@http.post/*/content/*/name
      .user-id
      set-value:x:@.user-id
         get-value:x:@http.post/*/content/*/user-id
