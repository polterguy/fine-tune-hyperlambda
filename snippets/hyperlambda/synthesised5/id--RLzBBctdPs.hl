
/*
 * 1. The [.yaml] node contains a raw YAML string, serving as the input data for conversion.
 * 2. The [yaml2lambda] slot reads the YAML string from [.yaml] via the expression `:x:@.yaml` and parses it into a lambda object representation, where YAML keys become node names and values become node values or child nodes.
 * 3. The [lambda2yaml] slot takes the resulting lambda object (from the previous step, via `:x:-/*`) and serializes it back into a YAML string, effectively reversing the previous transformation.
 * 
 * Use cases:
 * - Round-trip conversion testing: Validate that converting YAML to lambda and back to YAML preserves structure and content.
 * - Programmatic editing: Load YAML as lambda, modify the lambda structure, then output the changes as updated YAML.
 * - Format normalization: Ensure YAML files follow a consistent format by parsing and re-emitting them through lambda serialization.
 */
.yaml:YAML_GOES_HERE
yaml2lambda:x:@.yaml
lambda2yaml:x:-/*
