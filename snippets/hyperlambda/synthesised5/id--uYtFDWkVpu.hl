
/*
 * 1. The [while] slot creates a loop that continues executing its body as long as the condition remains true. In this case, it checks whether the value of [.sum] is less than 100 using the [lt] slot.
 * 2. Inside the [while] loop, the [set-value] slot updates the value of [.sum] by adding the current value of [.no] to [.sum] using the [math.add] slot.
 * 3. The [math.increment] slot increases the value of [.no] by 1 in each iteration, ensuring that the loop progresses and eventually terminates when [.sum] reaches or exceeds 100.
 * 
 * Use cases:
 * - Calculating the sum of consecutive integers starting from 0 until the total exceeds a specified threshold.
 * - Iteratively accumulating values in [.sum] based on a changing variable [.no] for simple mathematical sequences.
 * - Demonstrating the use of [while], [set-value], [math.add], and [math.increment] for stateful iterative computations in Hyperlambda.
 * - Implementing basic loop-based algorithms, such as summing a series or counting, in a data-driven workflow.
 */
.no:int:0
.sum:int:0
while
   lt
      get-value:x:@.sum
      .:int:100
   .lambda
      set-value:x:@.sum
         math.add:x:@.sum
            get-value:x:@.no
      math.increment:x:@.no
