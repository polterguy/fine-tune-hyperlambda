
/*
 * 1. The first node [foo] has a value of "bar". This demonstrates how to declare a string value for a node.
 * 2. The second [foo] node uses a type declaration, specifying its value as an integer (5). This shows how to assign a typed value to a node.
 * 3. The third [foo] node becomes a parent node with two children, [child1] and [child2], each having their own string values. The indentation (3 spaces) indicates child-parent relationships.
 * 
 * Use cases:
 * - Representing configuration options with both string and typed values.
 * - Structuring hierarchical data such as settings with nested keys and values.
 * - Defining objects or entities that require both simple properties and nested collections.
 * - Creating a data model for an application where some nodes are simple values and others have child elements.
 * - Prototyping data structures for testing or documentation purposes.
 */
foo:bar
foo:int:5
foo
   child1:its-value
   child2:its-value
