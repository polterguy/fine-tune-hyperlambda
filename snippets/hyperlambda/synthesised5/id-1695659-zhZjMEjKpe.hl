
/*
 * 1. [signal] is invoked with an expression `:x:@strings.concat`, referencing the result of a previous [strings.concat] operation.
 * 2. The [connection-string] node retrieves its value from [.connection-string], likely referencing a database connection string.
 * 3. The [database] node uses a nested expression to extract the [name] value from the third [for-each] ancestor's [.dp] node, drilling into its children to find a [name] node.
 * 4. The [table] node accesses the [table] value from the current [.dp] node, specifically targeting its [table] child.
 * 
 * Use cases:
 * - Passing dynamic database, table, and connection details to a signal or workflow step, possibly for data operations.
 * - Integrating database metadata extraction into a signal payload for later use in automation or logging.
 * - Dynamically constructing and signaling an event that is aware of nested [for-each] loop context, such as during a batch migration or synchronization process.
 */
signal:x:@strings.concat
   connection-string:x:@.connection-string
   database:x:@for-each/@for-each/@for-each/@.dp/#/*/name
   table:x:@.dp/#/*/table
