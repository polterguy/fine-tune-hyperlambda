
/*
 * 1. The [add] slot is used to add new child nodes under the [data.read] node for each sibling of the current node (`:x:./*/data.read`). 
 * 2. The [get-nodes] slot is invoked twice to retrieve the set of nodes referenced by the [order] and [direction] child nodes under [.arguments]. Each call fetches the respective nodes, which are then added as children to the targeted [data.read] nodes.
 * 3. This structure allows dynamic addition of multiple [order] and [direction] nodes from the request's arguments, supporting flexible query construction.
 * 
 * Use cases:
 * - Dynamically append sorting or ordering criteria to a data query pipeline by passing order and direction as arguments.
 * - Augment [data.read] nodes in a template with user-supplied sorting preferences for database queries.
 * - Support multi-field sorting in an endpoint by collecting all [order] and [direction] nodes from input arguments and injecting them into the query node structure.
 * - Enable flexible REST API endpoints where clients can specify how results should be ordered.
 */
add:x:./*/data.read
   get-nodes:x:@.arguments/*/order
   get-nodes:x:@.arguments/*/direction
