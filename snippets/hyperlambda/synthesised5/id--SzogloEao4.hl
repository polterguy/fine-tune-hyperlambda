
/*
 * 1. [validators.mandatory]: Ensures that both [.arguments] nodes [url] and [size] are provided; if not, execution is halted with an exception.
 * 2. [image.generate-qr]: Generates a QR code using the value from [.arguments] [url], and sets its size using the value from [.arguments] [size].
 * 3. [yield]: Returns a response containing a [message] indicating successful QR code generation, and [content] holding the output stream from [image.generate-qr].
 * 
 * Use cases:
 * - Creating an API endpoint that receives a URL and a size to dynamically produce a QR code for that URL, enforcing required input validation.
 * - Building a backend function for a web app where users submit a link and desired QR code size, and the function returns the generated QR code image.
 * - Automating QR code generation for event tickets, by passing event URLs and sizes to this logic for each ticket.
 * - Integrating QR code creation into workflows that require strict input validation and clear success messaging in the response.
 */
.arguments
   url:string
   size:int
validators.mandatory:x:@.arguments/*/url
validators.mandatory:x:@.arguments/*/size
image.generate-qr:x:@.arguments/*/url
   size:x:@.arguments/*/size
yield
   message:QR code generated successfully
   content:x:@image.generate-qr
