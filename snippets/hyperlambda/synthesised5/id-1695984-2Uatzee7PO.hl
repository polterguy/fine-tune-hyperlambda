
/*
 * 1. The [join] slot is used to join another table, specifically [Employees], to the main table in the query.
 * 2. The [as] node creates an alias for the [Employees] table, using [EmployeeID] as the alias, allowing you to reference the [Employees] table as [EmployeeID] in the rest of the expression.
 * 3. The [type] node sets the join type to a left join, which means all rows from the main table and the matched rows from [Employees] (aliased as [EmployeeID]) will be returned, with NULL for non-matching right-side rows.
 * 4. The [on] node specifies the join condition, using an [and] to combine conditions (even though only one is present), matching [EmployeeTerritories.EmployeeID] to [EmployeeID.EmployeeID].
 * 
 * Use cases:
 * - To retrieve all records from [EmployeeTerritories], including those without a corresponding employee in [Employees], while still accessing employee data when available.
 * - To join tables with similar column names and prevent ambiguity by aliasing the joined table.
 * - To facilitate reporting scenarios where you want to list all territories and optionally show employee information if it exists, even when some employees are missing from the [Employees] table.
 * - To prepare a dataset for further filtering or aggregation where missing [Employees] records should not exclude [EmployeeTerritories] rows.
 */
join:Employees
   as:EmployeeID
   type:left
   on
      and
         EmployeeTerritories.EmployeeID:EmployeeID.EmployeeID
