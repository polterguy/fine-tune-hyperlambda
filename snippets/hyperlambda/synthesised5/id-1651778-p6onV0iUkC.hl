
/*
 * 1. [data.connect] establishes a database connection using the generic or Magic data adapter, specifying the database type as SQLite.
 * 2. [add] dynamically appends all nodes from [.arguments] as children to the [and] node inside the [where] clause of [data.delete], effectively building the WHERE conditions for the delete operation based on the provided arguments.
 * 3. [data.delete] performs a delete operation on the [questions] table in the SQLite database, using the dynamically constructed WHERE clause.
 * 4. [unwrap] evaluates all sibling nodes that follow the current node, ensuring that any expressions or slots are executed and their results are available.
 * 5. [return] returns the number of affected rows from the [data.delete] operation by referencing the [affected] node inside [data.delete].
 * 
 * Use cases:
 * - Deleting one or more records from the [questions] table based on dynamic conditions provided as arguments.
 * - Implementing an HTTP endpoint to allow clients to delete questions by supplying filter criteria.
 * - Creating a reusable delete operation for the [questions] table that can adapt to different WHERE conditions without hardcoding them.
 */
data.connect:[generic|magic]
   database-type:sqlite
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*
   data.delete
      database-type:sqlite
      table:questions
      where
         and
   unwrap:x:+/*
   return
      affected:x:@data.delete
