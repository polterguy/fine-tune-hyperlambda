
/*
 * 1. The [switch] slot evaluates the value of the [.user_role] node and selects the corresponding [case] branch for execution.
 * 2. Each [case] node checks for a specific role: "admin", "editor", or "user", and if matched, updates the [.result] node with a message indicating the user's privileges.
 * 3. If none of the [case] values match [.user_role], the [default] branch is executed, setting [.result] to "Unknown role".
 * 4. [set-value] is used within each branch to update the [.result] node with the respective privilege message.
 * 
 * Use cases:
 * - Displaying different dashboard options depending on user roles.
 * - Implementing role-based access logic in an endpoint to tailor responses.
 * - Providing clear feedback to the client or user interface about the user's authorization level.
 * - Handling unexpected or undefined roles gracefully by setting a default message.
 */
.user_role:admin
.result
switch:x:@.user_role
   case:admin
      set-value:x:@.result
         .:Has admin privileges
   case:editor
      set-value:x:@.result
         .:Has editor privileges
   case:user
      set-value:x:@.result
         .:Has user privileges
   default
      set-value:x:@.result
         .:Unknown role
