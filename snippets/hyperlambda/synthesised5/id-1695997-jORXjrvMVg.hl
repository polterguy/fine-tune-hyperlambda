
/*
 * 1. The [validators.enum] slot is used to ensure that the value(s) of the [aggregate_column] argument inside the [.arguments] node matches one of a defined set of allowed options.
 * 2. The expression `:x:@.arguments/*/aggregate_column` evaluates to all [aggregate_column] nodes present as children of any child under [.arguments], supporting validation of multiple instances at once.
 * 3. If any of the [aggregate_column] values do not match one of the explicitly listed values (like "Orders.OrderID", "Orders.CustomerID", etc.), the validator will throw an exception, preventing further execution.
 * 
 * Use cases:
 * - Input validation for an API endpoint accepting column names for aggregation, ensuring only safe, recognized columns are processed.
 * - Dynamically validating user-selected columns in a reporting interface to restrict access to specific fields.
 * - Protecting database queries from injection or malformed column references by limiting aggregate operations strictly to whitelisted columns.
 * - Enforcing business logic that only certain columns are permitted for grouping or aggregation in analytical queries.
 */
validators.enum:x:@.arguments/*/aggregate_column
   .:Orders.OrderID
   .:Orders.CustomerID
   .:Orders.EmployeeID
   .:Orders.OrderDate
   .:Orders.RequiredDate
   .:Orders.ShippedDate
   .:Orders.ShipVia
   .:Orders.Freight
   .:Orders.ShipName
   .:Orders.ShipAddress
   .:Orders.ShipCity
   .:Orders.ShipRegion
   .:Orders.ShipPostalCode
   .:Orders.ShipCountry
   .:EmployeeID.LastName
   .:ShipVia.CompanyName
