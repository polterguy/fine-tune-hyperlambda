
/*
 * 1. The [.arguments] node defines three input parameters: [limit] (integer), [offset] (integer), and [filter] (string), specifying the page size, result offset, and a search filter, respectively.
 * 2. The [data.connect] slot establishes a connection to the "crm" database using a generic provider.
 * 3. The [data.read] slot fetches records from the [contacts] table, applying the supplied [limit] and [offset] values to control paging.
 * 4. The [where] clause uses an [or] logical operator to filter records where either the [first_name] or [last_name] columns match the [filter] value via a SQL LIKE comparison.
 * 5. The [return-nodes] slot outputs all child nodes generated by the [data.read] operation, effectively returning the selected contact records.
 * 
 * Use cases:
 * - Searching CRM contacts by first or last name while supporting pagination.
 * - Building a dynamic API endpoint for contact lookup with customizable page size and offset.
 * - Creating a filtered export of contact data based on user input.
 * - Implementing a UI-backed search feature that displays partial matches in contact names.
 */
.arguments
   limit:int
   offset:int
   filter:string
data.connect:[generic|crm]
   data.read
      table:contacts
      limit:x:@.arguments/*/limit
      offset:x:@.arguments/*/offset
      where
         or
            first_name.like:x:@.arguments/*/filter
            last_name.like:x:@.arguments/*/filter
   return-nodes:x:@data.read/*
