
/*
 * 1. The [data.connect] node establishes a connection to the "sakila" database, making subsequent database operations possible within that session.
 * 2. The [data.select] node executes two separate SQL queries in one call: `SELECT * FROM actor LIMIT 2;` and `SELECT * FROM film LIMIT 2;`. The [multiple-result-sets] child node, set to true, instructs [data.select] to return both result sets as an array of arrays, where each inner array contains the rows from one query.
 * 3. The [yield] node returns the combined results from both queries through the [results] node, using the expression `:x:@data.select/*` to gather all direct children (result sets) of the [data.select] node.
 * 
 * Use cases:
 * - Retrieving a sample set of records from multiple tables (e.g., for initial data exploration or reporting).
 * - Demonstrating how to process and return multiple SQL result sets from a single Hyperlambda operation.
 * - Enabling API endpoints that need to aggregate and return data from several queries in one HTTP response.
 * - Building admin dashboards that display previews from different tables simultaneously.
 */
data.connect:sakila
   data.select:SELECT * FROM actor LIMIT 2; SELECT * FROM film LIMIT 2;
      multiple-result-sets:bool:true
   yield
      results:x:@data.select/*
