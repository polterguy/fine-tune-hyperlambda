
/*
 * 1. The [if] slot checks if the value of [.role] is "admin" by using [eq] and [get-value]. If true, it assigns "Full access" to [.accessLevel] using [set-value].
 * 2. The [else-if] slot checks if [.role] is "user" and, if so, sets [.accessLevel] to "Limited access".
 * 3. The [else] slot acts as a fallback, setting [.accessLevel] to "No access" if none of the previous conditions are met.
 * 
 * Use cases:
 * - Assigning different access permissions based on a user's role within an application.
 * - Returning distinct responses for administrators, regular users, and guests.
 * - Building role-based authorization logic for API endpoints.
 * - Setting configuration or state values dynamically depending on user status.
 */
.role:admin
.accessLevel
if
   eq
      get-value:x:@.role
      .:admin
   .lambda
      set-value:x:@.accessLevel
         .:Full access
else-if
   eq
      get-value:x:@.role
      .:user
   .lambda
      set-value:x:@.accessLevel
         .:Limited access
else
   set-value:x:@.accessLevel
      .:No access
