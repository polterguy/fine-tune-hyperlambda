
/*
 * 1. The [add] slot is used here to add nodes as children to the sibling [data.read] node at the same scope as the currently executing node. The expression `:x:./*/data.read` locates all sibling nodes named [data.read].
 * 2. The [get-nodes] slot retrieves nodes referenced by the expressions `:x:@.arguments/*/order` and `:x:@.arguments/*/direction`, which means it fetches all [order] and [direction] nodes that are direct children of [arguments] in the current context.
 * 3. As a result, all [order] and [direction] nodes under [arguments] are appended as children to each [data.read] sibling node found at the same level.
 * 
 * Use cases:
 * - Dynamically attach sorting or ordering criteria to a [data.read] node before executing a database or data retrieval operation.
 * - Pass user-specified parameters (like order and direction) into a data query node for further processing in a workflow.
 * - Prepare a request graph for a downstream component that expects [order] and [direction] nodes as part of its input structure.
 */
add:x:./*/data.read
   get-nodes:x:@.arguments/*/order
   get-nodes:x:@.arguments/*/direction
