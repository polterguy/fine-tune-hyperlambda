
/*
 * 1. The [switch] slot evaluates the value of the [.value] node and compares it against each [case] child.
 * 2. Each [case] node specifies a value to match; if a match is found, its child nodes are executed. In this example, [case:hello] matches the value "hello".
 * 3. The [set-value] slot is used within each [case] to update the value of the [.result] node to a message reflecting the matched case.
 * 4. The [default] node is executed only if none of the [case] nodes match the [.value] node's value, updating [.result] to indicate no match.
 * 
 * Use cases:
 * - Routing logic where different actions are taken based on user input or status codes.
 * - Handling command responses where the workflow depends on a specific string or numeric value.
 * - Processing form submissions and displaying different messages depending on selected options.
 * - Implementing state machines where transitions depend on the current state value.
 */
.value:hello
.result
switch:x:@.value
   case:hello
      set-value:x:@.result
         .:Matched Hello!
   case:world
      set-value:x:@.result
         .:Matched World!
   default
      set-value:x:@.result
         .:No match found.
