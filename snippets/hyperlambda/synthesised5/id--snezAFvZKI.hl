
/*
 * 1. The [.arguments] node defines all possible input parameters for the operation, including pagination ([limit], [offset]), sorting ([order], [direction]), and filtering options for the [Categories] table fields, using both exact match (.eq) and pattern match (.like) operators.
 * 2. [data.connect] establishes a connection to the [northwind] SQLite database, enabling subsequent database operations within its scope.
 * 3. The first [add] slot injects [order] and [direction] nodes from [.arguments] into the [data.read] query, allowing for dynamic sorting based on input parameters.
 * 4. [remove-nodes] is used to delete [order] and [direction] from [.arguments] after they are added to the query, preventing duplication or conflicts.
 * 5. A similar [add] and [remove-nodes] pattern is used for [limit] and [offset], facilitating pagination in the resulting dataset.
 * 6. Another [add] slot appends all provided filter arguments from [.arguments] into the [and] condition under [where] in [data.read], constructing a dynamic filter for the SQL query.
 * 7. [data.read] defines the actual SELECT query on the [Categories] table, specifying the columns to retrieve and initializing the [where]/[and] clause to be populated dynamically.
 * 8. [return-nodes] returns all nodes generated by [data.read], outputting the result set of the query.
 * 
 * Use cases:
 * - Creating a paginated and filterable API endpoint to list categories, supporting advanced search and sorting.
 * - Dynamically constructing SQL queries from user-provided parameters for data grid views.
 * - Building an admin interface where users can browse, search, and sort categories in the Northwind database.
 * - Supporting complex filtering scenarios (e.g., searching by name or description, or both) without hardcoding query logic.
 * - Enabling flexible front-end queries to fetch only the required subset of categories with specified sorting and pagination.
 */
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   Categories.CategoryID.eq:long
   Categories.CategoryName.like:string
   Categories.CategoryName.eq:string
   Categories.Description.like:string
   Categories.Description.eq:string
   Categories.Picture.like:string
   Categories.Picture.eq:string
data.connect:[generic|northwind]
   database-type:sqlite
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Categories
      columns
         Categories.CategoryID
         Categories.CategoryName
         Categories.Description
         Categories.Picture
      where
         and
   return-nodes:x:@data.read/*
