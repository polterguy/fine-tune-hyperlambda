
/*
 * 1. The [for-each] slot loops over each child node of [.data], assigning each one by reference to the [.dp] node during each iteration.
 * 2. Inside the loop, [get-nodes] retrieves all direct children of the currently iterated parent node (using `:x:@.dp/#/*`).
 * 3. The [add] slot appends the retrieved child nodes to the [.result] node, effectively merging all children from both [parent1] and [parent2] under [.result].
 * 
 * Use cases:
 * - Flattening a hierarchy by collecting all child nodes from multiple parents into a single node for easier access or processing.
 * - Consolidating data from several sources into one destination node for reporting or transformation.
 * - Extracting and grouping specific levels of nodes from complex trees to prepare for further manipulation, such as filtering or sorting.
 * - Copying all leaf nodes from multiple parents into a single node to simplify downstream logic.
 */
.data
   parent1
      child1:val1
      child2:val2
   parent2
      child3:val3
.result
for-each:x:@.data/*
   add:x:@.result
      get-nodes:x:@.dp/#/*
