
/*
 * 1. [for-each] iterates over each child node under [.car-parts], passing each node by reference as [.dp].
 * 2. [if] checks if the value of the current [.dp] node is "available" using [eq].
 * 3. If the value is "available," [set-value] updates the current node's value to "checked."
 * 4. [else] executes if the value is not "available," updating the current node's value to "needs restocking."
 * 
 * Use Cases:
 * - Automatically update inventory status for car parts, marking available parts as checked and others as needing restocking.
 * - Batch process product availability for a vehicle maintenance system.
 * - Standardize stock status values before generating a parts report.
 * - Quickly identify which car parts require restocking in a supply management workflow.
 */
.car-parts
   engine:available
   wheel:out-of-stock
   door:available
for-each:x:@.car-parts/*
   if
      eq:x:@.dp/#
         .:available
      .lambda
         set-value:x:@.dp/#
            .:checked
   else
      set-value:x:@.dp/#
         .:needs restocking
