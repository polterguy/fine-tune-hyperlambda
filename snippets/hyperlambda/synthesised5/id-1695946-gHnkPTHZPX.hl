
/*
 * 1. The [set-value] slot updates the value of the [.sql] node with the result of a [strings.concat] operation.
 * 2. The [strings.concat] slot combines multiple string fragments into a single string, constructing a SQL fragment.
 * 3. [get-value:x:@.sql] retrieves the current value of the [.sql] node, so the new string builds upon its existing value.
 * 4. The static string nodes (.:” from “, .:CustomerCustomerDemo, .:” where keyword_count > 0”) are concatenated in order to form the final SQL clause.
 * 
 * Use cases:
 * - Appending a FROM and WHERE clause to a dynamically constructed SQL query stored in [.sql].
 * - Building SQL statements in multiple steps, allowing for flexible query manipulation.
 * - Ensuring that additional conditions or table names can be programmatically added to a query string before execution.
 * - Useful in scenarios where parts of the SQL query are determined at runtime, such as dynamic search filters or report generators.
 */
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" from "
      .:CustomerCustomerDemo
      .:" where keyword_count > 0"
