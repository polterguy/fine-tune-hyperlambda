
/*
 * 1. The [image.chart] slot is used twice in this code, both times creating a stacked bar chart visualization.
 * 2. The [filename] node specifies the output file path ([/chart.png]) for the generated chart image.
 * 3. The [width] and [height] nodes set the dimensions of the chart to 600x300 pixels.
 * 4. The [bars] node contains three categories (Spring, Summer, Autumn), each with three integer values representing the quantities for each legend entry.
 * 5. The [ticks] node labels the x-axis with the season names.
 * 6. The [legend] node defines the series names ("Phones", "Computers", "Tablets") for each bar segment.
 * 7. The parameters are repeated to create the same stacked bar chart image twice, potentially overwriting the previous output.
 * 
 * Use cases:
 * - Automatically generate a seasonal sales comparison chart for multiple device categories and save it as an image.
 * - Create visual reports for business analytics, showing grouped data for different time periods.
 * - Integrate dynamic chart creation into a web API, returning the generated image to users.
 * - Update a dashboardâ€™s chart image whenever the underlying data changes, by regenerating and overwriting the chart file.
 */
image.chart:stacked
   filename:/chart.png
   width:600
   height:300
   bars
      Spring
         .:int:2
         .:int:5
         .:int:10
      Summer
         .:int:4
         .:int:7
         .:int:10
      Autumn
         .:int:2
         .:int:5
         .:int:4
   ticks
      .:Spring
      .:Summer
      .:Autumn
   legend
      .:Phones
      .:Computers
      .:Tablets
image.chart:stacked
   filename:/chart.png
   width:600
   height:300
   bars
      Spring
         .:int:2
         .:int:5
         .:int:10
      Summer
         .:int:4
         .:int:7
         .:int:10
      Autumn
         .:int:2
         .:int:5
         .:int:4
   ticks
      .:Spring
      .:Summer
      .:Autumn
   legend
      .:Phones
      .:Computers
      .:Tablets
