
/*
 * 1. The [.arguments] node declares that the endpoint accepts two string arguments: [name] and [description].
 * 2. The [auth.ticket.verify] slot ensures the user must have either "root" or "admin" roles to proceed, enforcing authorization.
 * 3. The [data.connect] slot establishes a connection to the "cms" database using the "generic" connection string, specifying the database type as SQLite with [database-type].
 * 4. The [add] slot populates the [values] node under [data.create] by copying all argument nodes provided by the caller.
 * 5. The [data.create] slot performs an insert operation on the [categories] table using the [values] node, again specifying the SQLite database type.
 * 6. The [response.status.set] node sets the HTTP response status to 201, indicating successful creation.
 * 7. The [yield] slot returns the newly created record's ID from the [data.create] operation.
 * 
 * Use cases:
 * - Creating a new category in a CMS where both the name and description are provided by an authenticated administrator.
 * - Enforcing role-based access control so only users with administrative privileges can add new categories.
 * - Returning the ID of the newly inserted category to the client after a successful POST request.
 */
.arguments
   name:string
   description:string
auth.ticket.verify:root,admin
data.connect:[generic|cms]
   database-type:sqlite
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*
   data.create
      database-type:sqlite
      table:categories
      values
   response.status.set:201
   yield
      id:x:@data.create
