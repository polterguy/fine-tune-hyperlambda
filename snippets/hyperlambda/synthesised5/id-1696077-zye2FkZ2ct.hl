
/*
 * 1. The [join] node specifies a join operation with the [clients] table.
 * 2. The [as] node sets an alias for the [clients] table, naming it [client_id] for reference in the query.
 * 3. The [type] node defines the join as a left join, meaning all records from the main table and matched records from [clients].
 * 4. The [on] node contains the join condition, which is an [and] node (allowing for multiple conditions if needed).
 * 5. The join condition [documents.client_id:client_id.client_id] specifies that the [client_id] column from the [documents] table must match the [client_id] column from the [clients] table (referenced by its alias).
 * 
 * Use cases:
 * - Retrieve all documents along with the corresponding client information, even if some documents do not have a matching client (due to the left join).
 * - Generate reports that list documents and include client data where available, showing nulls for unmatched clients.
 * - Merge document and client data for analytics, ensuring no documents are omitted due to missing client associations.
 * - Build an API endpoint that returns all documents, enriched with related client details when present.
 */
join:clients
   as:client_id
   type:left
   on
      and
         documents.client_id:client_id.client_id
