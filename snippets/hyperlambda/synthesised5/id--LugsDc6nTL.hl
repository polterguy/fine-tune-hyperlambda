
/*
 * 1. [pgsql.connect] establishes a connection to the PostgreSQL database named "sales", setting the context for all subsequent operations to this database.
 * 2. [pgsql.delete] constructs and executes a SQL DELETE statement on the [orders] table, removing records that satisfy the [where] condition.
 * 3. The [where] node contains an [and] clause, specifying two conditions: the [customer_id] field must equal `42` (as an integer), and the [status] field must equal "canceled".
 * 4. [yield] returns a message indicating that canceled orders have been deleted for the customer, serving as a confirmation of the operation.
 * 
 * Use cases:
 * - Automatically removing all canceled orders for a specific customer when they close their account.
 * - Cleaning up unnecessary or obsolete order records periodically for customers with a certain status.
 * - Integrating into an administrative dashboard to allow staff to bulk-delete canceled orders for selected customers.
 * - As part of a workflow that processes refunds and then deletes related canceled orders for data hygiene.
 */
pgsql.connect:sales
   pgsql.delete
      table:orders
      where
         and
            customer_id.eq:int:42
            status.eq:canceled
yield
   message:Canceled orders deleted for customer
