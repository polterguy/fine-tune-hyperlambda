
/*
 * 1. [sqlite.connect] establishes a connection to a SQLite database identified as "ocean".
 * 2. [sqlite.read] issues a SQL SELECT query against the "creatures" table.
 * 3. [columns] specifies that only the [species] and [habitat] fields should be returned in the results.
 * 4. [where] with an [and] clause filters the records so that only those with [habitat] equal to "Coral Reef" are included.
 * 5. [order] sets the sorting of the resulting records by the [species] column.
 * 6. [direction] arranges the ordering in ascending (Aâ€“Z) order.
 * 7. [limit] restricts the query to return a maximum of 10 records.
 * 
 * Use Cases:
 * - Retrieving a paged, alphabetized list of marine species found specifically in coral reef habitats from an oceanic creatures database.
 * - Displaying the first 10 coral reef species to a user browsing marine biodiversity by habitat.
 * - Producing a filtered dataset for visualization or export, focusing on coral reef inhabitants, sorted for readability.
 * - Supporting a search feature in an educational app that allows students to explore species by habitat and sort results.
 */
sqlite.connect:ocean
   sqlite.read
      table:creatures
      columns
         species
         habitat
      where
         and
            habitat:Coral Reef
      order:species
      direction:asc
      limit:int:10
