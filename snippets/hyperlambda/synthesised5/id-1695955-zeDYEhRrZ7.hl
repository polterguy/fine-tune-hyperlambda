
/*
 * 1. The [set-value] slot updates the value of the [.sql] node using the result of the following string concatenation.
 * 2. The [strings.concat] slot combines several string fragments and values to construct a complex SQL expression, leveraging dynamic node values in the process.
 * 3. Multiple [get-value] slots are used to extract the current values from the [.sql], [.fields], and [.no] nodes to include them at specific points in the concatenated string.
 * 4. The static string segments represent parts of a SQL calculation that measures the number of occurrences of a substring in a field by comparing the length before and after a replace operation.
 * 5. The end result is that [.sql] will contain a SQL segment counting the number of times a given substring (parameterized by [.no]) appears in the field specified by [.fields].
 * 
 * Use cases:
 * - Dynamically generating SQL code to count substring occurrences in a database query.
 * - Modifying a SQL string to include a calculated column for analytics or reporting.
 * - Building advanced search or text analysis queries based on user-supplied fields and patterns.
 * - Automating the construction of database queries for a dashboard or reporting tool.
 */
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" (length("
      get-value:x:@.fields
      .:) - length(replace(lower(
      get-value:x:@.fields
      .:), @p
      get-value:x:@.no
      .:", ''))) / length(@p"
      get-value:x:@.no
      .:)
