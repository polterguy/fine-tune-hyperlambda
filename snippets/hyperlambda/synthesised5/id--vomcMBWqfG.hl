
/*
 * 1. The [.yaml] node contains a YAML string representing a hierarchical structure of a company, with nested departments and employees.
 * 2. The [yaml2json] slot is invoked with the expression `:x:@.yaml`, which retrieves the YAML string from the [.yaml] node and converts it into its JSON representation.
 * 3. The output will be a compact JSON string that mirrors the hierarchy and values defined in the input YAML, making it suitable for downstream JSON-based processing or APIs.
 * 
 * Use cases:
 * - Converting structured YAML data (such as configuration files or exported records) into JSON for use in web applications.
 * - Migrating organizational charts or HR data from a human-readable YAML format to a machine-friendly JSON format for integration with other systems.
 * - Facilitating the transformation of YAML-based documentation or data sources into JSON for storage in document databases.
 */
.yaml:@"
company:
  name: ""TechCorp""
  departments:
    - name: ""Engineering""
      employees:
        - name: ""Alice""
          role: ""Developer""
        - name: ""Bob""
          role: ""Tester""
    - name: ""HR""
      employees:
        - name: ""Charlie""
          role: ""Recruiter""
"
yaml2json:x:@.yaml
