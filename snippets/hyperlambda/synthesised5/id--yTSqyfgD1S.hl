
/*
 * 1. [if] evaluates a logical condition using [or] to determine which branch of code to execute.
 * 2. [or] checks if either [lt] (less than) comparing [.metricX] with 6, or [mt] (more than) comparing [.metricY] with 14, is true.
 * 3. [lt] checks if the value in [.metricX] is less than 6.
 * 4. [mt] checks if the value in [.metricY] is greater than 14.
 * 5. [set-value] assigns the boolean value true or false to [.status] based on the result of the condition.
 * 6. [else] provides a fallback, setting [.status] to false if none of the [or] conditions are met.
 * 
 * Use cases:
 * - Flagging [.status] as true if a metric falls below or rises above certain thresholds.
 * - Implementing conditional checks for monitoring system health or alerting.
 * - Deciding status based on combined logical conditions involving multiple metrics.
 * - Automating workflows where actions depend on threshold comparisons of input data.
 */
.status
.metricX:int:5
.metricY:int:15
if
   or
      lt:x:@.metricX
         .:int:6
      mt:x:@.metricY
         .:int:14
   .lambda
      set-value:x:@.status
         .:bool:true
else
   set-value:x:@.status
      .:bool:false
