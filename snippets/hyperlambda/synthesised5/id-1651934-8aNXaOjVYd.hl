
// Checks if the "to" and "from" arguments exist, are not null, and each contain a colon. If so, it splits both values by ":", extracts the channel, to, and from parts, and then adds a signal to the execution context with these extracted values, swapping "to" and "from" in the process.
if
   and
      exists:x:@.arguments/*/to
      exists:x:@.arguments/*/from
      not-null:x:@.arguments/*/to
      not-null:x:@.arguments/*/from
      strings.contains:x:@.arguments/*/to
         .:":"
      strings.contains:x:@.arguments/*/from
         .:":"
   .lambda
      .channel
      .to
      .from
      strings.split:x:@.arguments/*/to
         .:":"
      set-value:x:@.channel
         get-value:x:@strings.split/0
      set-value:x:@.to
         get-value:x:@strings.split/1
      strings.split:x:@.arguments/*/from
         .:":"
      set-value:x:@.from
         get-value:x:@strings.split/1
      unwrap:x:+/*/*
      add:x:@.exe/*/signal
         .
            to:x:@.from
            from:x:@.to
            channel:x:@.channel
