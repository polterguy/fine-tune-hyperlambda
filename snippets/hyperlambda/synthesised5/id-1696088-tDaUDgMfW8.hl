
/*
 * 1. [strings.concat] is used to concatenate a sequence of string fragments and dynamic values, producing a single SQL expression as output.
 * 2. [get-value] retrieves the current values from the [.sql], [.fields], and [.no] nodes and injects them at specific positions within the concatenated string.
 * 3. The assembled string constructs a SQL fragment that likely calculates occurrences of a substring (@p) within a field, using SQL length and replace functions.
 * 
 * Use cases:
 * - Dynamically generate SQL expressions for searching or counting substrings in a database column.
 * - Create advanced SQL queries based on user input, combining static and dynamic string segments.
 * - Automate the assembly of SQL statements that require repeated references to existing node values.
 * - Prepare complex SQL calculations in reporting tools or ETL pipelines using Hyperlambda nodes as building blocks.
 */
strings.concat:x:@.sql
   get-value:x:@.sql
   .:" (length("
   get-value:x:@.fields
   .:) - length(replace(lower(
   get-value:x:@.fields
   .:), @p
   get-value:x:@.no
   .:", ''))) / length(@p"
   get-value:x:@.no
   .:)
