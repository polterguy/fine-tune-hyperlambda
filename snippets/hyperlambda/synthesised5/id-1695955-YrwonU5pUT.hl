
/*
 * 1. The [set-value] slot updates the value of the [.sql] node by setting it to the concatenation result produced by [strings.concat].
 * 2. [strings.concat] combines three elements: the current value of [.sql], a static SQL snippet `" order by keyword_count desc, keyword_density desc limit "`, and a limit value pulled from [.arguments] via the expression `:x:@.arguments/*/limit`.
 * 3. [get-value] retrieves the existing value of [.sql] and the user-supplied limit for use in the concatenation.
 * 
 * Use cases:
 * - Dynamically building or extending a SQL query string to include ordering by keyword count and density, and setting a custom row limit.
 * - Modifying an existing SQL command with additional clauses based on user input or runtime conditions.
 * - Creating paginated or sorted query statements in a backend service where the order and row count are determined at runtime.
 * - Generating complex SQL queries for reporting or analytics where ordering and row limits are variable.
 */
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" order by keyword_count desc, keyword_density desc limit "
      get-value:x:@.arguments/*/limit
