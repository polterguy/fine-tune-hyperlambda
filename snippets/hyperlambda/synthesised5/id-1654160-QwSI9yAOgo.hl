
/*
 * 1. The [if] slot checks a condition and executes its child lambda if the condition is true.
 * 2. The [not-exists] slot is used to determine if there are no nodes matching the expression `@.result/*/"={@strings.split/0}"`. This checks if a child node of [.result] with a name equal to the value of the first element in [strings.split] does not exist.
 * 3. If the condition is true (i.e., the node does not exist), the [.lambda] block is executed.
 * 4. [unwrap] with the expression `:+/*/*` forward-evaluates all expressions in the next sibling's children, ensuring any dynamic expressions are resolved before execution.
 * 5. [add] with the expression `:@.result` adds a new child node to [.result]. The new node's name is set dynamically to the value of the first node in [strings.split] using the expression `:x:@strings.split/0`.
 * 
 * Use cases:
 * - Ensuring that a specific node does not already exist under [.result] before adding a new one with a dynamically determined name.
 * - Preventing duplicate entries in a result set when processing input strings.
 * - Dynamically building a collection of unique nodes based on split string values.
 */
if
   not-exists:x:"@.result/*/\"={@strings.split/0}\""
   .lambda
      unwrap:x:+/*/*
      add:x:@.result
         .
            .:x:@strings.split/0
