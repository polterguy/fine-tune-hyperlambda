
/*
 * 1. The [switch] slot checks the value of the [.source] node and compares it against each [case] child node.
 * 2. If the value of [.source] matches the value of a [case] node, the children of that [case] are executed; for example, [set-value] updates [.result] with "Is foo" or "Is bar" depending on which case matches.
 * 3. If none of the [case] nodes match the value of [.source], the [default] node is executed, assigning "None of the above" to the [.result] node.
 * 
 * Use cases:
 * - Implementing value-based conditional logic, such as mapping user input to specific responses.
 * - Categorizing data or user choices and handling each category differently.
 * - Providing fallback behavior when none of the expected values are matched.
 * - Simplifying multi-branch decision trees in workflow automation.
 * - Replacing complex nested [if]/[else-if]/[else] chains with more readable code.
 */
.source:foo
.result
switch:x:@.source
   case:foo
      set-value:x:@.result
         .:Is foo
   case:bar
      set-value:x:@.result
         .:Is bar
   default
      set-value:x:@.result
         .:None of the above
