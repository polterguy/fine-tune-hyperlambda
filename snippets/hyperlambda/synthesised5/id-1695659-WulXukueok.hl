
/*
 * 1. The [remove-nodes] slot is used multiple times in this code to delete specific nodes from the tree structure.
 * 2. Each [remove-nodes] invocation targets nodes under the [@signal] node, specifically those that are grandchildren (second-level children) with a [db] child whose value matches one of the system schemas: "information_schema", "mysql", "performance_schema", or "sys".
 * 3. The effect is to clean or filter out these MySQL system schemas from the node hierarchy, likely to focus subsequent logic only on user-defined databases.
 * 
 * Use cases:
 * - Excluding internal MySQL system schemas when presenting a list of available databases to an end user.
 * - Preparing a data structure for migration or export where system databases should not be included.
 * - Cleaning up a parsed schema tree before generating documentation or performing automated tasks on user databases.
 * - Ensuring that only application-relevant databases are available for further processing in a workflow.
 * - Preventing accidental operations (such as backup, restore, or deletion) on critical system schemas.
 */
case:mysql
   remove-nodes:x:@signal/*/*/db/=information_schema
   remove-nodes:x:@signal/*/*/db/=mysql
   remove-nodes:x:@signal/*/*/db/=performance_schema
   remove-nodes:x:@signal/*/*/db/=sys
