
/*
 * 1. [if] checks a condition and only executes its [.lambda] child if the condition is true.
 * 2. [not] inverts the boolean value returned by its child, so true becomes false and vice versa.
 * 3. [get-value] retrieves the value of [.flag], which is expected to be a boolean.
 * 4. [set-value] assigns a new value to [.outcome] if the condition is met.
 * 
 * Use cases:
 * - Setting a human-readable message if a boolean flag is false.
 * - Triggering an alternative action when a configuration or status flag is not set.
 * - Logging or tracking cases where a specific condition does not hold.
 * - Providing user feedback if a prerequisite is not satisfied.
 */
.flag:bool:false
.outcome
if
   not
      get-value:x:@.flag
   .lambda
      set-value:x:@.outcome
         .:Flag was false
