
/*
 * 1. The [.variableOne] node is assigned the value "data" without quotes, making it a simple string.
 * 2. The [.variableTwo] node is assigned the string value "key:value", using double quotes to allow the colon character inside the value without confusing it for a type/value separator.
 * 3. The [.variableThree] node is assigned the value "alpha\nbeta", where the `\n` is an escaped newline character, demonstrating how Hyperlambda supports escape sequences within string literals.
 * 4. The [.variableFour] node is assigned the value "Hyperlambda" as a plain string.
 * 5. The [.variableFive] node is assigned the value "code\nsnippet", showing another example of a newline escape inside a quoted string.
 * 
 * Use cases:
 * - Storing configuration or state values in nodes where values may contain special characters, such as colons or newlines.
 * - Demonstrating how to represent both simple and complex strings, including those requiring escape sequences, in Hyperlambda.
 * - Building up data structures with mixed content types for further processing, such as code snippets, keys, or descriptive text.
 * - Ensuring that string values with special formatting or multi-line content are handled safely and unambiguously in Hyperlambda code.
 */
.variableOne:data
.variableTwo:"key:value"
.variableThree:"alpha\nbeta"
.variableFour:Hyperlambda
.variableFive:"code\nsnippet"
