
/*
 * 1. The [if] slot checks a condition, and if the condition is true, executes the child nodes under its [.lambda] node.
 * 2. The [or] slot is used to combine two conditions; it evaluates to true if at least one of its children evaluates to true.
 * 3. The [eq] slot is used twice, each time comparing the value of the [.foo1] node to either "OK" or "ERROR".
 * 4. The [get-value] slot fetches the value of the [.foo1] node from its siblings.
 * 5. The [set-value] slot sets the value of the [.result] node to "MATCH" if any of the [eq] comparisons is true.
 * 
 * Use Cases:
 * - Used to check if a status node [.foo1] matches either a success or error state and mark a result accordingly.
 * - Useful for handling multiple acceptable input values and performing a common action if any match.
 * - Can be part of validation logic where several alternative states should trigger the same outcome.
 * - Suitable for conditional flows where alternative paths should be handled identically.
 */
.foo1:OK
if
   or
      eq
         get-value:x:../*/.foo1
         .:OK
      eq
         get-value:x:../*/.foo1
         .:ERROR
   .lambda
      set-value:x:../*/.result
         .:MATCH
