
/*
 * 1. The [compose] slot is used to dynamically build a lambda expression by concatenating the sequence of iterators provided as its children. Each child node represents a segment of the expression.
 * 2. In this example, [compose] takes three iterators: `@.data`, `*`, and `value`. When combined, this results in the expression `@.data*/value`, which can be used elsewhere to reference all [value] nodes that are children of any node found by the [@.data] iterator.
 * 3. This dynamic composition allows you to construct expressions based on changing input or logic, making your Hyperlambda scripts more flexible and adaptable to varying data structures.
 * 
 * Use cases:
 * - Dynamically referencing all [value] nodes under a particular [data] node when the node path might change at runtime.
 * - Building expressions for use in [get-value], [set-value], or other slots that require a lambda expression, without hardcoding the expression string.
 * - Generating complex node selection logic in reusable scripts where the expression parts can be determined by function parameters or configuration.
 */
compose
   .:@.data
   .:*
   .:value
