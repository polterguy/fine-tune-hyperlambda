
/*
 * 1. The [for-each] slot iterates over each child node of [signal], passing each node as the [.dp] reference node to its children.
 * 2. The first [add] slot inserts all children of the currently iterated node (dereferenced from [.dp]) into the children collection of the next sibling node at the same level as the [for-each] node.
 * 3. The second [add] slot targets a deeply nested [indexes] node within a [tables] collection for the currently iterated node, and adds an empty node structure as its content.
 * 
 * Use cases:
 * - Merging all children of each [signal] node into another location in the graph defined by sibling nodes.
 * - Dynamically extending the [indexes] section of every table found in the data structure under each [signal] node.
 * - Useful in scenarios where you need to transform a set of signals by distributing their children to multiple target places in a tree.
 * - Can be leveraged to initialize or reset [indexes] collections for a table structure in bulk operations.
 */
for-each:x:@signal/*
   add:x:+/*/*
      get-nodes:x:@.dp/#/*
   add:x:@for-each/@for-each/@for-each/@for-each/@.dp/#/*/tables/0/-/*/indexes
      .
         .
