
/*
 * 1. The [.arguments] node defines input arguments [min] and [max], both of type long, which are intended to be used as parameters for the random value generation.
 * 2. The [add] slot, with the expression `:x:./*/crypto.random`, adds the result of [crypto.random] to all children of the current node, iterating over the nodes returned by `@.arguments/*` through [get-nodes].
 * 3. The [crypto.random] slot is called to generate a cryptographically secure random string or byte array, using the [min] and [max] arguments from [.arguments] to control the output length.
 * 4. The [yield] slot returns a [result] node containing the value produced by [crypto.random].
 * 
 * Use cases:
 * - Securely generate a random password or token with user-defined minimum and maximum length.
 * - Produce cryptographically strong random values for API keys, session identifiers, or secret codes, based on input parameters.
 * - Support endpoints where the length of a generated random string or bytes must be controlled by external input, such as in automated provisioning or registration workflows.
 */
.arguments
   min:long
   max:long
.type:public
add:x:./*/crypto.random
   get-nodes:x:@.arguments/*
crypto.random
yield
   result:x:@crypto.random
