
/*
 * 1. The [set-value] slot updates the value of all nodes referenced by the `@.sql` expression, assigning the result of the concatenation as their new value.
 * 2. The [strings.concat] slot combines the value of [@.sql], the static string `) * 1.0 / length(`, the value from [@.fields], and another static string `) as keyword_density, (`, creating a single concatenated SQL fragment.
 * 3. [get-value:x:@.sql] and [get-value:x:@.fields] extract the current values from the [.sql] and [.fields] nodes, ensuring dynamic content is included in the concatenation.
 * 
 * Use cases:
 * - Dynamically building or extending a SQL query string for calculating keyword density within a SELECT statement.
 * - Updating the [.sql] node to append calculated columns or expressions for use in SQL queries.
 * - Automating the assembly of complex SQL statements from multiple variables and static fragments.
 * - Preparing computed fields for reporting or analytics by updating the SQL string in a reusable node.
 */
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:) * 1.0 / length(
      get-value:x:@.fields
      .:) as keyword_density, (
