
/*
 * 1. [auth.ticket.verify]: This slot checks if the current authenticated user is authorized, and optionally if they belong to at least one of the required roles. If the user is not authenticated or lacks the required role, it will throw an exception, preventing further code execution.
 * 2. [auth.ticket.refresh]: This slot generates a new JWT token for the current user based on their existing valid token, effectively extending the session expiration time without requiring re-authentication.
 * 3. [yield]: This slot returns the new refreshed token as a [ticket] node, taking its value from the result of [auth.ticket.refresh].
 * 
 * Use cases:
 * - Implementing an endpoint for clients to refresh their JWT token before expiration, ensuring uninterrupted user sessions.
 * - Protecting sensitive endpoints by requiring token verification before allowing token refresh operations.
 * - Providing a seamless authentication experience by allowing users to renew their tokens in the background without manual re-login.
 * - Building mobile or SPA applications that need to silently refresh authentication tokens to keep users logged in.
 */
auth.ticket.verify
auth.ticket.refresh
yield
   ticket:x:@auth.ticket.refresh
