
/*
 * 1. The [.arguments] node defines that this code expects two input parameters, [arg1] and [arg2], both of type integer.
 * 2. [validators.mandatory] is invoked twice to ensure that both [arg1] and [arg2] are present in the input; if either is missing, an error will be thrown.
 * 3. [math.multiply] multiplies the values of [arg1] and [arg2], extracting them using [get-value] with the expressions `:x:@.arguments/*/arg1` and `:x:@.arguments/*/arg2`.
 * 4. [yield] returns a [result] node containing the product of [arg1] and [arg2] for the endpoint response.
 * 
 * Use cases:
 * - Building an HTTP endpoint that multiplies two numbers supplied by the client and returns the result.
 * - Creating a utility function within a larger Hyperlambda project to perform multiplication of dynamic values.
 * - Validating required inputs before performing arithmetic to ensure reliable operations.
 * - Serving as a backend for a simple calculator application that requires multiplication capabilities.
 */
.arguments
   arg1:int
   arg2:int
validators.mandatory:x:@.arguments/*/arg1
validators.mandatory:x:@.arguments/*/arg2
math.multiply
   get-value:x:@.arguments/*/arg1
   get-value:x:@.arguments/*/arg2
yield
   result:x:@math.multiply
