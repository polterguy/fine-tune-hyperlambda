
/*
 * 1. The [target-user] node uses a lambda expression to select a specific user node from the [.users] collection. The expression `@.users/*/{get-value:x:@.target/*/key}` dynamically finds the child of [.users] whose value matches the result of [get-value:x:@.target/*/key].
 * 2. [get-value] is invoked on the [.target] node’s child [key], extracting its value to be used as the matching criterion within the lambda expression.
 * 3. The use of `{}` in the expression enables dynamic evaluation, allowing the selection to be based on the actual value stored under [.target]’s [key] node at runtime.
 * 
 * Use cases:
 * - Select a user node from [.users] whose key matches a value provided in another part of the node graph (e.g., for authentication or profile lookup).
 * - Dynamically reference a user record based on user input or another workflow step.
 * - Build workflows where operations are performed on a user node determined at runtime, such as updating profile details or permissions.
 */
.target-user:@.users/*/{get-value
:x:@.target/*/key}
