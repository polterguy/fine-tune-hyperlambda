
/*
 * 1. The [slots.create] slot dynamically defines a new slot named [is.admin], which checks the value of a [role] argument to determine if it matches "admin".
 * 2. The [if] slot evaluates whether the [role] argument is equal to "admin" using [eq:x:@.arguments/*/role] and, if so, executes its [.lambda] child.
 * 3. Inside the [.lambda], the [return] slot immediately returns a node [isAdmin] set to boolean true if the condition is met.
 * 4. If the [if] condition is false (i.e., the [role] is not "admin"), execution proceeds to the next [return], which returns [isAdmin] as boolean false.
 * 5. The [execute] slot is used twice: first with [role:admin] (resulting in [isAdmin:bool:true]), and then with [role:guest] (resulting in [isAdmin:bool:false]).
 * 
 * Use cases:
 * - Quickly check if a user has the "admin" role and return a boolean result for access control flows.
 * - Integrate this logic into endpoints to show or hide admin-only UI elements based on user role.
 * - Support testing or debugging authentication flows by simulating different role values.
 */
slots.create:is.admin
   if
      eq:x:@.arguments/*/role
         .:admin
      .lambda
         return
            isAdmin:bool:true
   return
      isAdmin:bool:false
execute:is.admin
   role:admin
execute:is.admin
   role:guest
