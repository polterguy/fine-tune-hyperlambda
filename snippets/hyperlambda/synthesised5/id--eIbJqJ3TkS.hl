
/*
 * 1. The [.arguments] node is used to declare that this code expects a [file] argument of type string, likely as part of an HTTP endpoint or similar interface.
 * 2. The [if] slot checks if the file specified by the [file] argument does not exist, using [io.file.exists] and [not]. If the file is missing, a [throw] is executed with a "File not found" message, HTTP status 404, and is marked as public.
 * 3. If the file exists, [io.file.load] loads the file content, using the value from the [file] argument.
 * 4. [response.headers.set] sets the response's [Content-Type] header to "text/plain", ensuring the client interprets the response as plain text.
 * 5. [return-value] is used to return the loaded file content to the caller.
 * 
 * Use cases:
 * - Serving raw text files from a server via an HTTP endpoint, with error handling for missing files.
 * - Creating a file download API that strictly returns plain text and gives a 404 error if the file is unavailable.
 * - Reading and sending the contents of logs, configuration files, or other text resources to authenticated users.
 * - Enforcing argument validation and response headers in a consistent way for file-serving endpoints.
 */
.arguments
   file:string
if
   not
      io.file.exists:x:@.arguments/*/file
   .lambda
      throw:File not found
         status:int:404
         public:bool:true
io.file.load:x:@.arguments/*/file
response.headers.set
   Content-Type:text/plain
return-value:x:@io.file.load
