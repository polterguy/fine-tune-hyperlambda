
/*
 * 1. The [if] slot checks a condition (`:bool:false`) and, if true, would execute its [.lambda] child to set the value of all sibling [.result] nodes to "failure".
 * 2. The [else-if] slot follows the [if] and only evaluates its own condition (`:bool:true`) if the [if] condition is false. If the [else-if] condition is true, it executes its [.lambda] child, setting all sibling [.result] nodes to "OK".
 * 3. The [set-value] slot updates all [.result] nodes at the same level as the currently executing node to the specified value, depending on which branch is triggered.
 * 
 * Use cases:
 * - Serves as a template for multi-branch decision-making, updating a status indicator like [.result] based on conditional logic.
 * - Can be adapted for form validation, where [.result] reflects validation success or failure depending on various checks.
 * - Useful in workflow automation to set an outcome node based on several conditions, enabling clear branching logic without deeply nested code.
 */
.result
if
   .:bool:false
   .lambda
      set-value:x:../*/.result
         .:failure
else-if
   .:bool:true
   .lambda
      set-value:x:../*/.result
         .:OK
