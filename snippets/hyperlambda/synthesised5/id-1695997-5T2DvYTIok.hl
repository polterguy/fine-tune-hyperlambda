
/*
 * 1. The [join] node specifies that a join operation should be performed with the [Employees] table.
 * 2. The [as] node assigns an alias ("EmployeeID") to the [Employees] table for easier column referencing in the query.
 * 3. The [type] node defines the join as a left join, meaning all records from the left table (likely [Orders]) will be included, along with matching records from [Employees].
 * 4. The [on] node sets the join condition, using [and] to allow for multiple conditions (here, only one is given).
 * 5. Inside [and], the join matches [Orders.EmployeeID] (from the [Orders] table) with [EmployeeID.EmployeeID] (the aliased [Employees] table's EmployeeID column).
 * 
 * Use cases:
 * - Retrieve all orders with associated employee details, even if some orders do not have a matching employee.
 * - Generate reports showing all orders and their assigned employees, including orders without an employee assignment.
 * - Perform data analysis on orders and employee relationships, ensuring that all orders are included regardless of employee association.
 * - Support dashboard displays where all orders are listed, with employee information shown where available.
 */
join:Employees
   as:EmployeeID
   type:left
   on
      and
         Orders.EmployeeID:EmployeeID.EmployeeID
