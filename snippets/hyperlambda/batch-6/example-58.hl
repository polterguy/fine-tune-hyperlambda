/*
 * This Hyperlambda file defines a static dataset of contacts and demonstrates how to 
 * dynamically enrich each entry using the [include] slot.
 *
 * The [.contacts] node acts as the root of a static structure, containing a [list] node 
 * with two unnamed children (denoted by [.]) — one for each contact. Each contact object 
 * contains two properties:
 * - [name]: The character’s name (e.g., "Aragorn", "Gimli").
 * - [phone]: A placeholder phone number.
 *
 * The [include] slot is used to loop over each individual contact object in the list:
 * - The expression selects all children nodes inside the [list] node 
 *   under [.contacts]. These nodes represent the individual contact entries.
 * - [include] executes once per selected node and sets up a new context where that node 
 *   becomes the "current item" — allowing us to add or modify content inside it dynamically.
 *
 * The [yield] slot inside [include] is responsible for injecting new content into each 
 * contact node:
 * - It adds a new child node named [greeting] with the static value "Mae govannen", 
 *   which is an Elvish greeting meaning “Well met”.
 *
 * The end result is that each contact node now includes an additional [greeting] field, 
 * transforming the list into a richer object graph. This pattern is ideal for static augmentation, 
 * templating, and merging dynamic content into predefined lists.
 */
.contacts
   list
      .
         name:Aragorn
         phone:+123456
      .
         name:Gimli
         phone:+789123
include:x:@.contacts/*/list/*
   yield
      greeting:"Mae govannen"
