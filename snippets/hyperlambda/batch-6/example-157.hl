/*
 * This Hyperlambda file demonstrates how to remove a specific child node ([email]) from **each item** 
 * in a list of structured objects using the [remove-nodes] slot and a wildcard-based lambda expression.
 *
 * [.data]
 * - Contains a list of unnamed child nodes ([.]), each representing a user/contact record.
 * - Every contact object includes:
 *   - [name]: The person's name.
 *   - [email]: The person's email address.
 *
 * [remove-nodes]
 * - Uses a compound lambda path to target all [email] fields in every record.
 * - Here's how the path breaks down:
 *   - `@.data`: Selects the [.data] root.
 *   - `*`: Selects all unnamed list entries under [.data] — each being one contact.
 *   - `*`: Selects all fields within each contact node.
 *   - `email`: Filters and targets the [email] node specifically.
 *
 * ✨ Key Insight:
 * - This approach removes **all [email] nodes** across every item in the list, in one operation.
 * - It's scalable and declarative — no need for manual loops or conditionals.
 *
 * This is useful for:
 * - Stripping sensitive fields before serialization.
 * - Anonymizing datasets.
 * - Cleaning structures prior to export, logging, or public API responses.
 */
.data
   .
      name:Thomas
      email:thomas@ainiro.io
   .
      name:John
      email:john@ainiro.io
   .
      name:Peter
      email:peter@ainiro.io
   .
      name:Jane
      email:jane@ainiro.io
   .
      name:jenny
      email:jenny@ainiro.io
remove-nodes:x:@.data/*/*/email
