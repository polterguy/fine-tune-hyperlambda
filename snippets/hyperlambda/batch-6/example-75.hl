/*
 * This Hyperlambda file demonstrates how to perform an HTTP POST request using the [http.post] slot, 
 * while including both query string parameters and a structured JSON payload. It leverages dynamic 
 * values through variable references and sends the request to a public echo service.
 *
 * [.category]
 * - Stores the value "Authors", which will later be injected into the payload as a dynamic field.
 *
 * [.query2]
 * - Holds the value "howdy" and is dynamically injected into the query string as part of the request URL.
 *
 * [http.post]
 * - Executes an HTTP POST request to https://httpbin.org/post — a public API endpoint designed for testing 
 *   HTTP clients. The URL is provided as a literal string.
 * - The [convert] node is set to [true], which ensures that the JSON response is parsed into a native 
 *   Hyperlambda node structure.
 *
 * [query]
 * - Defines query string parameters that are appended to the request URL.
 *   - [some_query_param] is a static parameter with the value "foo bar".
 *   - [another_query_param] uses a dynamic reference to [.query2], resulting in a value of "howdy".
 * - These parameters are automatically encoded and added to the URL in the final outbound request.
 *
 * [payload]
 * - Defines the JSON body of the POST request.
 *   - [category] is dynamically resolved from [.category] and inserted into the payload.
 *   - [sort] is a static string field with the value "price_asc".
 * - The payload is serialized into JSON and sent in the request body.
 *
 * The response from httpbin.org will contain the parsed [args] (query string parameters) 
 * and [json] (the POST body), allowing the developer to validate that both the query and payload 
 * were constructed correctly.
 *
 * This example demonstrates how to compose rich HTTP POST requests that combine query parameters 
 * and dynamic payload content — a pattern commonly used in API integrations, data submission, and search interfaces.
 */
.category:Authors
.query2:howdy
http.post:"https://httpbin.org/post"
   convert:bool:true
   query
      some_query_param:foo bar
      another_query_param:x:@.query2
   payload
      category:x:@.category
      sort:price_asc
