/*
 * This Hyperlambda file demonstrates how to perform an HTTP POST request using the [http.post] slot, 
 * including how to send a JSON payload with dynamically referenced values.
 *
 * [.category]
 * - Stores the category value "Authors", which will later be referenced dynamically in the payload.
 * - Using this variable allows the payload to be dynamically adjusted based on external logic or configuration.
 *
 * [.endpoint]
 * - Contains the target URL for the POST request. In this case, the request is sent to https://httpbin.org/post â€” 
 *   a public HTTP testing service that echoes back the received request.
 *
 * [http.post]
 * - Executes an HTTP POST request to the specified [.endpoint] URL.
 * - The [convert] node is set to [true], which instructs the engine to automatically parse the JSON response 
 *   into a native Hyperlambda node tree.
 *
 * [payload]
 * - Defines the JSON body of the request to be sent to the server.
 * - [category] uses a dynamic reference to the value in [.category], meaning the value "Authors" 
 *   will be injected at runtime.
 * - [sort] is a static value, set to "price_asc" to simulate a sorting preference.
 * - The payload is serialized and sent as the body of the HTTP POST request.
 *
 * The server at httpbin.org will return the same payload under a [json] node in its response,
 * allowing developers to verify that the server received the correct structure and values.
 *
 * This example is ideal for learning how to construct and send dynamic JSON payloads via POST requests 
 * in Hyperlambda, particularly when combining static and dynamic values.
 */
.category:Authors
.endpoint:"https://httpbin.org/post"
http.post:x:@.endpoint
   convert:bool:true
   payload
      category:x:@.category
      sort:price_asc
