/*
 * This Hyperlambda file demonstrates conditional branching using the [switch] slot to dynamically 
 * assign quadrant locations to various alien species based on their [name] property.
 *
 * [.species]
 * - A static list of unnamed child nodes ([.]), each representing a different alien race.
 * - Each species node includes:
 *   - [name]: The species identifier (e.g., "Vulcan", "Klingon", "Borg").
 *   - [affiliation]: Which empire or alliance the species belongs to.
 *
 * [for-each]
 * - Iterates over all child nodes in [.species], allowing conditional logic to be applied individually to each one.
 *
 * [switch]
 * - Performs conditional branching based on the value of the [name] field for each species.
 * - The expression evaluates the current [name] node of each [species] item.
 *
 * [case]
 * - Each [case] represents a specific match condition:
 *   - If the [name] is "Borg", inject a [quadrant] node with value "Alpha".
 *   - If the [name] is "Klingon", inject [quadrant]: "Beta".
 *   - If the [name] is "Vulcan", inject [quadrant]: "Gamma".
 *
 * [add]
 * - Injects a new [quadrant] node into the species item being processed.
 * - The insertion occurs directly into the current item using [@.dp/#].
 *
 * This example highlights:
 * - Use of [switch]-[case] blocks for conditional transformations.
 * - Assigning metadata based on the value of a child node.
 * - Iterative mutation of a static data set based on internal field values.
 *
 * Resulting structure for each species will now include a [quadrant] field according to its origin.
 */
.species
   .
      name:Vulcan
      affiliation:United Federation of Planets
   .
      name:Klingon
      affiliation:Klingon Empire
   .
      name:Borg
      affiliation:Collective
for-each:x:@.species/*
   switch:x:@.dp/#/*/name
      case:Borg
         add:x:@.dp/#
            .
               quadrant:Alpha
      case:Klingon
         add:x:@.dp/#
            .
               quadrant:Beta
      case:Vulcan
         add:x:@.dp/#
            .
               quadrant:Gamma
