/*
 * This block constructs a Bearer token by concatenating the "Bearer " scheme prefix 
 * with a sensitive value retrieved from the configuration system.
 *
 * **IMPORTANT!** The [.token] node is **intentionally prefixed with a dot (.)**. This is absolutely critical:
 *
 * - Without the dot, the node name would be interpreted by the execution engine as a potential **slot**.
 * - Since there is no actual slot named [token], it would raise an exception during execution.
 * - Prefixing with "." tells the engine: "This is a plain node, not an invocable slot" — making it safe.
 *
 * The [set-value] slot assigns the result of a [strings.concat] operation to [.token], combining:
 *   1. The static string `"Bearer "` — which is required by the Authorization header scheme.
 *   2. A dynamic secret retrieved using [config.get], for example [config.get:"auth:api-key"].
 *
 * The final result is a valid Bearer token like "Bearer abc123", stored inside [.token] for use in 
 * secured API calls.
 */
.token
set-value:x:@.token
   strings.concat
      .:"Bearer "
      config.get:"auth:api-key"
