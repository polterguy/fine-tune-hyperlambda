/*
 * This snippet demonstrates how to dynamically add a new node to an existing collection using the [add] slot.
 *
 * 1. The [.books] node is initialized with three unnamed child nodes, each holding the title of a well-known book:
 *    - "Bible"
 *    - "Quran"
 *    - "Lord of the Rings"
 *
 *    These unnamed child nodes are implicitly indexed by their position in the list and represent a basic list structure.
 *
 * 2. The [add] slot is used to insert an additional unnamed node into the [.books] collection.
 *    The value being inserted is "The Great Gatsby", wrapped in a new anonymous node structure under the [.] node.
 *    This format ensures that the inserted node is compatible with the structure of [.books]—i.e., a flat list of unnamed entries.
 *
 * 3. The [x:@.books] expression tells [add] where to insert the new node—in this case, it targets the existing [.books] list.
 *    The [.] node under [add] defines the content being added—in this case, a single new book title.
 *
 * This technique is valuable for dynamically extending a list-like structure at runtime,
 * especially in contexts like assembling datasets, accumulating records, or appending to user-defined collections.
 */
.books
   .:Bible
   .:Quran
   .:Lord of the Rings
add:x:@.books
   .
      .:The Great Gatsby
