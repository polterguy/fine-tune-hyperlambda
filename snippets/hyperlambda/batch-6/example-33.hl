/*
 * This snippet demonstrates how to iterate over a list of employee objects using the [for-each] slot
 * and append a new field to each entry using the [add] slot.
 *
 * 1. The [.employees] node is a list composed of unnamed child nodes ([.]), each representing
 *    an employee record. Every entry contains:
 *    - [name]: the employee's full name
 *    - [position]: their job title
 *    This syntax is useful for creating list of items, as in child nodes named [.] without values.
 *
 * 2. The [for-each] slot loops over each employee node using the expression [x:@.employees/*],
 *    which selects all children of [.employees].
 *
 * 3. Inside the loop, the [add] slot is used with [x:@.dp/#] as the target path.
 *    - [@.dp] references the current item in the iteration
 *    - [#] dereferences it, so [add] modifies the node directly
 *
 * 4. A new unnamed child node is added to each employee object with:
 *    - [status]: "Regular employee"
 *
 * After execution, every employee in the [.employees] list will contain an additional [status] field.
 *
 * This pattern is useful for enriching existing data structuresâ€”such as tagging, classification,
 * or appending default metadata across a collection of objects.
 */
.employees
   .
      name:John Doe
      position:Developer
   .
      name:Jane Smith
      position:Manager
   .
      name:Alice Johnson
      position:Designer
for-each:x:@.employees/*
   add:x:@.dp/#
      . 
         status:Regular employee
