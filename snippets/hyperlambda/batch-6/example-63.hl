/*
 * This Hyperlambda file demonstrates conditional data enrichment of a static list of books 
 * using the [include] and [if] slots, adding a [type] node to each book entry based on its age.
 *
 * The [.books] node defines a static list of unnamed child nodes ([.]), where each node represents 
 * a book. Each book contains:
 * - [name]: The title of the book.
 * - [age]: An integer value representing the number of years since its origin.
 *
 * The [include] slot is used to iterate over each individual book in the [.books] list:
 * - For every child node, [include] creates a separate execution context where each book 
 *   becomes the current data context.
 *
 * Inside the [include] block, the [if] slot evaluates a condition:
 * - The [mt] (greater than) comparison checks if the [age] of the current book is greater than 400.
 *
 * If the condition is met:
 * - A [type] node with the value "Religion" is injected into the book using [yield].
 * 
 * If the condition is not met:
 * - The [else] block triggers its own [yield] to inject a [type] node with the value "Enlightenment".
 *
 * This logic categorizes ancient texts as "Religion" and newer works as part of the "Enlightenment".
 *
 * The result is a dynamically enriched list of books, where each object now includes a [type] 
 * node in addition to its original properties â€” enabling more contextual or classified representations.
 *
 * This pattern is powerful for transforming or tagging structured data based on logical conditions, 
 * especially in static or mock datasets.
 */
.books
   .
      name:Bible
      age:int:2000
   .
      name:Quran
      age:int:1400
   .
      name:Torah
      age:int:3000
   .
      name:Newton
      age:int:300
include:x:@.books/*
   if
      mt:x:@.dp/#/*/age
         .:int:400
      .lambda
         yield
            type:Religion
   else
      yield
         type:Enlightenment
