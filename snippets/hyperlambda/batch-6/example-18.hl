/*
 * This snippet defines an [HTTP endpoint] that dynamically constructs its return payload using the [add] and [get-nodes] slots.
 *
 * 1. The [.arguments] node is present to support standard HTTP input arguments, although it is unused in this specific example.
 *
 * 2. The [.response] node contains a set of predefined values that will be returned to the client:
 *    - name: "Thomas"
 *    - email: "thomas@ainiro.io"
 *    - phone: "555-678-1234"
 *
 * 3. The [get-nodes] slot retrieves all child nodes under [.response] using a wildcard expression,
 *    dynamically resolving each of the key-value pairs intended for return.
 *
 * 4. The [add] slot is used with a path that programmatically inserts the values
 *    retrieved from [.response] into the final [return] node structure.
 *
 * 5. The [return] slot is executed last to emit the assembled response as the HTTP output.
 *
 * This pattern enables a clean separation between response composition and return logic,
 * making the endpoint flexible, readable, and easier to maintainâ€”especially when the response
 * data is dynamic or reused across different parts of the application.
 */
.arguments
.response
   .
      name:Thomas
      email:thomas@ainiro.io
      phone:555-678-1234
add:x:./*/return
   get-nodes:x:@.response/*
return
