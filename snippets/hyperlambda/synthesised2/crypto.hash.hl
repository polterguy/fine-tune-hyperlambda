/*
 * This Hyperlambda snippet demonstrates the use of the [crypto.hash] slot to hash a given string in three different formats.
 * It also shows how to specify a hashing algorithm using the [algorithm] argument.
 *
 * 1. [set-value] - Sets the value of a node.
 *    * It sets the value of the [.original-text] node to the string "Hello, World!".
 *
 * 2. [crypto.hash] - Generates a hash of the value pointed to by its expression.
 *    * The first [crypto.hash] invocation hashes the original text and returns the hash in 'fingerprint' format.
 *    * The second [crypto.hash] invocation hashes the original text and returns the hash in 'text' format.
 *    * The third [crypto.hash] invocation hashes the original text and returns the hash in 'raw' format.
 *
 * 3. [algorithm] - Specifies the hashing algorithm to use.
 *    * The [algorithm] argument is set to 'sha256' for all three hash invocations, indicating the use of the SHA-256 algorithm.
 *
 * The result will be three nodes, each containing the hashed value of "Hello, World!" in different formats.
 */
.original-text:Hello, World!

// Hashing the original text in 'fingerprint' format using SHA-256 algorithm
crypto.hash:x:@.original-text
   algorithm:sha256
   format:fingerprint

// Hashing the original text in 'text' format using SHA-256 algorithm
crypto.hash:x:@.original-text
   algorithm:sha256
   format:text

// Hashing the original text in 'raw' format using SHA-256 algorithm
crypto.hash:x:@.original-text
   algorithm:sha256
   format:raw