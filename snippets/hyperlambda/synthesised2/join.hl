/*
 * This Hyperlambda snippet demonstrates the use of the [join] slot to synchronize the completion of parallel processes.
 * It waits for the results of two HTTP GET requests executed in parallel using [fork] slots, and then joins the results.
 *
 * 1. [join]
 *    * Waits for all child [fork] invocations to complete before continuing.
 *    * Synchronizes parallel processes to ensure all are complete.
 *
 * 2. [fork]
 *    * Executes the child nodes in a separate thread, allowing parallel processing.
 *    * In this example, two [fork] nodes are used to perform HTTP GET requests concurrently.
 *
 * 3. [http.get]
 *    * Performs an HTTP GET request to the specified URL.
 *    * The URLs provided are "https://example.com" and "https://example.org".
 *
 * After the [join] slot completes, the results of both HTTP GET requests will be available for further processing.
 */
join
   fork
      http.get:"https://example.com"
   fork
      http.get:"https://example.org"