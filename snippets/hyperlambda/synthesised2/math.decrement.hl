/*
 * This Hyperlambda snippet demonstrates the use of the [math.decrement] slot to reduce the value of a variable.
 * It shows both the default behavior with a decrement step of 1 and a custom decrement step.
 *
 * 1. [.initial-value]
 *    * Declares a variable with an initial integer value of 10.
 *
 * 2. [math.decrement:x:@.initial-value]
 *    * Decrements the value of [.initial-value] by the default step of 1.
 *    * After execution, [.initial-value] will be 9.
 *
 * 3. [.custom-step:int:3]
 *    * Declares a variable to be used as a custom step for decrementing.
 *
 * 4. [math.decrement:x:@.initial-value]
 *    * Decrements the value of [.initial-value] by the custom step specified in [.custom-step].
 *    * After execution, [.initial-value] will be 6.
 *
 * The [math.decrement] slot is useful for reducing values in loops or counters without the need for additional calculations.
 */
.initial-value:int:10

// Default decrement by 1
math.decrement:x:@.initial-value

// Custom decrement step
.custom-step:int:3

// Decrement by custom step
math.decrement:x:@.initial-value
   get-value:x:@.custom-step
