/*
 * This Hyperlambda snippet demonstrates how to explicitly commit a database transaction to ensure that all
 * operations within the transaction are permanently applied to the database. The snippet includes creating a
 * connection to a database, starting a transaction, performing a series of database operations, and finally
 * committing the transaction.
 *
 * 1. [data.connect] - Establishes a connection to the 'mydb' database.
 * 2. [data.transaction.create] - Starts a new database transaction within the established connection.
 * 3. [data.create] - Creates a new record in the 'employees' table.
 * 4. [data.update] - Updates a record in the 'employees' table.
 * 5. [data.transaction.commit] - Commits the transaction to make all changes within the transaction permanent.
 *
 * It is important to commit a transaction when you are certain that all operations have completed successfully
 * and you want the changes to be saved. If any operation within the transaction fails, you should roll back the
 * transaction to maintain data integrity.
 */
data.connect:mydb
   data.transaction.create
      // Creates a new employee record
      data.create
         table:employees
         values
            name:John Doe
            position:Software Developer

      // Updates the position of an existing employee
      data.update
         table:employees
         where
            id:int:1234
         values
            position:Senior Developer

   // Commits the transaction to save the changes
   data.transaction.commit
