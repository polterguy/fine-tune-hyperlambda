/*
 * This Hyperlambda snippet demonstrates the use of the [switch] slot to conditionally execute code based on the value of a node.
 * It sets the value of the [.result] node depending on the value of the [.input] node.
 *
 * 1. [.input] - A node containing the value to be evaluated by the [switch] slot.
 *
 * 2. [.result] - A node that will hold the result of the conditional logic.
 *
 * 3. [switch] - The main slot that evaluates the value of [.input] and decides which [case] to execute.
 *
 * 4. [case] - Represents a case within the switch construct. If the value of [.input] matches the value of a [case], the corresponding logic is executed.
 *
 * 5. [set-value] - Sets the value of the [.result] node based on the outcome of the [switch].
 *
 * 6. [default] - An optional slot that provides a default action if none of the [case] values match the value of [.input].
 *
 * The code will check the value of [.input] and match it against the provided [case] nodes. If a match is found, the [.result] node is set to the corresponding message.
 * If no match is found, the [default] case is executed, setting [.result] to "No match found".
 */
.input:string:apple
.result

switch:x:@.input
   case:banana
      set-value:x:@.result
         .:Fruit is banana

   case:apple
      set-value:x:@.result
         .:Fruit is apple

   case:orange
      set-value:x:@.result
         .:Fruit is orange

   default
      set-value:x:@.result
         .:No match found
