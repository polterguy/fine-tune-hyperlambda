/*
 * This Hyperlambda snippet dynamically constructs a lambda expression using the [compose] slot.
 * The lambda expression is then used to reference nodes within the Hyperlambda structure.
 *
 * 1. [compose]
 *    * Dynamically creates a lambda expression by concatenating iterators.
 *    * Each child node represents an iterator in the final expression.
 *
 * 2. `..`
 *    * Adds the root node iterator to the expression.
 *
 * 3. `*`
 *    * Adds the all children iterator to the expression.
 *
 * 4. `.data`
 *    * Adds an iterator to select only the '.data' node (named filtering).
 *
 * 5. `*`
 *    * Adds another all children iterator to the expression.
 */
compose
   .:..
   .:*
   .:.data
   .:*