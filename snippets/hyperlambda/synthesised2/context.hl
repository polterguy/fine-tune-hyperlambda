/*
 * This Hyperlambda snippet demonstrates the use of the [context] slot to store a value in the execution context,
 * which can later be retrieved using the [get-context] slot within a lambda scope.
 *
 * 1. [context]
 *    * Stores an object with a specified name onto the context stack.
 *    * The object is stored with the name "user-info" and contains a value node with the string "John Doe".
 *
 * 2. [.lambda]
 *    * Defines a lambda scope where the context object can be accessed.
 *    * Within this scope, the [get-context] slot is used to retrieve the stored context object.
 *
 * 3. [get-context]
 *    * Retrieves the context object named "user-info" from the context stack.
 *    * The retrieved value is then set to the [.result] node, which will hold the value "John Doe".
 *
 * The result of this Hyperlambda snippet is that the [.result] node will have the value "John Doe",
 * demonstrating how context can be used to pass data through different parts of the execution without direct argument passing.
 */
.result

context:user-info
   value:John Doe
   .lambda
      set-value:x:@.result
         get-context:user-info
