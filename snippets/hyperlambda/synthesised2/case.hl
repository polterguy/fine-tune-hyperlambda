/*
 * This Hyperlambda snippet demonstrates the use of the [switch] slot to conditionally execute code based on the value of a variable.
 * The [switch] slot is similar to a switch statement in other programming languages.
 *
 * 1. [.variable]
 *    * Declares a variable with a string value 'apple'.
 *
 * 2. [switch]
 *    * Evaluates the value of the [.variable] node and executes the matching [case] node.
 *
 * 3. [case]:'apple'
 *    * A case that matches if the [.variable] node's value is 'apple'.
 *    * Sets the [.result] node's value to 'Fruit selected: Apple'.
 *
 * 4. [case]:'banana'
 *    * A case that matches if the [.variable] node's value is 'banana'.
 *    * Sets the [.result] node's value to 'Fruit selected: Banana'.
 *
 * 5. [default]
 *    * The default case that executes if none of the [case] nodes match.
 *    * Sets the [.result] node's value to 'No matching fruit found'.
 *
 * The [set-value] slot is used to assign a value to the [.result] node based on the matching [case].
 * The final result will be stored in the [.result] node.
 */
.variable:string:apple
.result

switch:x:@.variable
   case:apple
      set-value:x:@.result
         .:"Fruit selected: Apple"
   case:banana
      set-value:x:@.result
         .:"Fruit selected: Banana"
   default
      set-value:x:@.result
         .:No matching fruit found