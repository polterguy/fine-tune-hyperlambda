/*
 * This Hyperlambda snippet retrieves emails from a POP3 server using the [mail.pop3.fetch] slot.
 * It demonstrates how to specify server details and how to handle each retrieved email using a lambda object.
 *
 * 1. [mail.pop3.fetch]
 *    * Connects to a POP3 server to fetch emails.
 *    * Server details such as host, port, secure connection, username, and password are specified.
 *    * The maximum number of emails to fetch and whether to fetch raw emails are also defined.
 *
 * 2. [server]
 *    * Specifies the POP3 server connection details.
 *    * Includes host, port, secure connection flag, username, and password.
 *
 * 3. [max]
 *    * Limits the number of emails to fetch to 20.
 *
 * 4. [raw]
 *    * Indicates that the emails should not be fetched in raw format.
 *    * When false, emails are parsed into a structured lambda object.
 *
 * 5. [.lambda]
 *    * A lambda object that is invoked for each email fetched.
 *    * Inside this lambda object, you can process each email, for example, logging the subject or sender.
 *
 * 6. [log.info]
 *    * Logs information about each email.
 *    * In this example, it logs the subject of each email.
 *
 * The snippet demonstrates fetching up to 20 emails from the specified POP3 server, parsing them into structured lambda objects,
 * and logging the subject of each email. It shows how to use Hyperlambda to interact with email servers and process emails programmatically.
 */
mail.pop3.fetch
   server
      host:pop.example.com
      port:int:995
      secure:bool:true
      username:string:your-username
      password:string:your-password
   max:int:20
   raw:bool:false
   .lambda
      log.info:x:@.message/*/subject
