
// Endpoint with paging, filtering, and sorting that returns items from your clusters table in your [generic|hub] database according to the specified arguments, ensuring ONLY 'root' users can execute the endpoint.
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   clusters.id.like:string
   clusters.id.eq:string
   clusters.country.like:string
   clusters.country.eq:string
   clusters.name.like:string
   clusters.name.eq:string
   clusters.enabled.eq:bool

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up our database connection.
data.connect:[generic|hub]

   // Parametrising our read invocation.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/operator
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:clusters
      columns
         clusters.id
         clusters.country
         clusters.name
         clusters.enabled
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
