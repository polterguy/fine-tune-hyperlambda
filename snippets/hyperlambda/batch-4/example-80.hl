/*
 * Example of try/catch block that logs the exception
 */
try
   throw:Foo bar
.catch

   /*
    * This lambda object will be executed if an exception is thrown,
    * and it will be given [message], [type], [status], [public], and [field] arguments.
    *
    * The type is the .Net Core type of exception that was thrown.
    * For a Hyperlambda exception it will always be 'magic.node.extensions.HyperlambdaException'.
    *
    * Status is the HTTP status code the exception will return to the client,
    * if the exception is allowed to propagate.
    *
    * Public is a boolean indicating if we should allow the exception message propagate.
    *
    * Field is the name of an argument if this is a validation exception
    * that was raised because of some argument not being valid.
    */
   log.error:x:@.arguments/*/message
      type:x:@.arguments/*/type
      status:x:@.arguments/*/status
      public:x:@.arguments/*/public
      field:x:@.arguments/*/field
