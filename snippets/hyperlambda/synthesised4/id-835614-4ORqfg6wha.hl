
/*
 * This Hyperlambda code performs a SQL read operation on a SQLite database, specifically targeting the "Orders" table. It joins the "Orders" table with the "Employees" and "Shippers" tables using left joins, based on matching EmployeeID and ShipVia fields. The code specifies columns to be selected and includes an aggregate function with an alias "result". It also includes a "where" clause with an "and" condition and limits the query result to one record. 
 * 
 * 1. [data.read] - Initiates a SQL read operation.
 * 2. [database-type] - Specifies the database type as SQLite.
 * 3. [table] - Targets the "Orders" table for the operation.
 * 4. [join] - Joins the "Orders" table with "Employees" and "Shippers" tables using left joins.
 * 5. [as] - Aliases for the joined tables.
 * 6. [type] - Specifies the type of join as left.
 * 7. [on] - Defines the conditions for joining tables.
 * 8. [columns] - Specifies the columns to be selected, including an aggregate function.
 * 9. [aggregate_functor] - Represents an aggregate function with an alias "result".
 * 10. [where] - Contains conditions for filtering the query.
 * 11. [and] - Logical operator for combining conditions.
 * 12. [limit] - Limits the query result to one record.
 */
data.read
   database-type:sqlite
   table:Orders
      join:Employees
         as:EmployeeID
         type:left
         on
            and
               Orders.EmployeeID:EmployeeID.EmployeeID
      join:Shippers
         as:ShipVia
         type:left
         on
            and
               Orders.ShipVia:ShipVia.ShipperID
   columns
      aggregate_functor
         as:result
   where
      and
   limit:long:1
