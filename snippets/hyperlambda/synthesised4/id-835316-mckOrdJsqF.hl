
/*
 * The code connects to a data source and constructs a prompt based on the presence of a [no-invocation] node. It then checks if [function-result] is not null to format a JSON result string. Finally, it creates a record in the [ml_requests] table with various attributes, including type, prompt, completion, and user details.
 * 
 * 1. [data.connect] - Connects to a specified data source.
 * 2. [if] - Checks if [no-invocation] is greater than 0.
 * 3. [set-value] - Sets the value of [prompt] or [tmp-completion].
 * 4. [strings.concat] - Concatenates strings for prompt or completion.
 * 5. [else] - Executes if the [if] condition is false.
 * 6. [not-null] - Checks if [function-result] is not null.
 * 7. [data.create] - Inserts a new record into the [ml_requests] table.
 */
data.connect:[generic|magic]
   .prompt
   if
      mt:x:@.no-invocation
         .:int:0
      .lambda
         set-value:x:@.prompt
            strings.concat
               .:[
               get-value:x:@.no-invocation
               .:"] - "
               get-value:x:@.only-prompt
   else
      set-value:x:@.prompt
         get-value:x:@.only-prompt
   .tmp-completion
   if
      not-null:x:@.function-result
      .lambda
         set-value:x:@.tmp-completion
            strings.concat
               get-value:x:@.result
               .:@"
"
               .:@"
"
               .:@"Result of function invocation:
"
               .:@"
"
               .:```json
               .:@"
"
               get-value:x:@.function-result
               .:@"
"
               .:```
         set-value:x:@.function-result
   else
      set-value:x:@.tmp-completion
         get-value:x:@.result
   data.create
      table:ml_requests
      values
         type:x:@.arguments/*/type
         prompt:x:@.prompt
         completion:x:@.tmp-completion
         finish_reason:x:@.finish_reason
         session:x:@.arguments/*/session
         user_id:x:@.arguments/*/user_id
         referrer:x:@.arguments/*/referrer
