
// This Hyperlambda code demonstrates a nested try-finally block where an exception is thrown inside the inner try block. The inner finally block sets the value of the [.throws] node to true, ensuring that this action is executed regardless of whether an exception is thrown or not. The outer try block does not have a catch block, so the exception will propagate upwards.
try
   try
      throw:foo
   .finally
      set-value:x:@.throws
         .:bool:true
