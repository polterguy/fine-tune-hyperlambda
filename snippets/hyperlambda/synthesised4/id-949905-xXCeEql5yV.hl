
/*
 * This Hyperlambda code snippet demonstrates a [while] loop that continuously checks if the value of [.index] is equal to 0. Inside the loop, an [if] condition checks if [.index] is not equal to 0, and if true, it decrements [.index] by 1 using [math.decrement]. The loop will only execute if [.index] starts at 0, but the [if] condition ensures the decrement operation doesn't occur unless [.index] is not 0. 
 * 
 * 1. [while] - Initiates a loop that continues while the condition is true.
 * 2. [eq] - Checks if [.index] is equal to 0.
 * 3. [get-value] - Retrieves the value of [.index].
 * 4. [.lambda] - Contains the code to execute if the [while] condition is true.
 * 5. [if] - Checks a condition within the [while] loop.
 * 6. [neq] - Evaluates if [.index] is not equal to 0.
 * 7. [math.decrement] - Decreases the value of [.index] by 1.
 */
while
   eq
      get-value:x:@.index
      .:int:0
   .lambda
      if
         neq
            get-value:x:@.index
            .:int:0
         .lambda
      math.decrement:x:@.index
