
/*
 * This Hyperlambda code iterates through files in a directory, checking if their names end with ".hl". If so, it loads the file, parses it into a lambda structure, and checks if the root node is "..". If true, it renames certain nodes related to data operations to MySQL equivalents, converts the modified lambda back to Hyperlambda text, and saves it back to the original file. 
 * 
 * 1. [for-each] - Iterates through each file in the directory.
 * 2. [if] - Checks if the file name ends with ".hl".
 * 3. [io.file.load] - Loads the content of the file.
 * 4. [hyper2lambda] - Parses the file content into a lambda structure.
 * 5. [if] - Checks if the root node is "..".
 * 6. [set-name] - Renames data operation nodes to MySQL equivalents.
 * 7. [lambda2hyper] - Converts the modified lambda structure back to Hyperlambda text.
 * 8. [io.file.save] - Saves the modified content back to the original file.
 */
for-each:x:@io.file.list-recursively/*
   if
      strings.ends-with:x:@.dp/#
         .:.hl
      .lambda
         io.file.load:x:@.dp/#
         hyper2lambda:x:@io.file.load
            comments:true
         if
            eq
               get-name:x:@hyper2lambda/0
               .:..
            .lambda
               set-name:x:@hyper2lambda/**/data.connect
                  .:mysql.connect
               set-name:x:@hyper2lambda/**/data.create
                  .:mysql.create
               set-name:x:@hyper2lambda/**/data.read
                  .:mysql.read
               set-name:x:@hyper2lambda/**/data.update
                  .:mysql.update
               set-name:x:@hyper2lambda/**/data.delete
                  .:mysql.delete
               lambda2hyper:x:@hyper2lambda/*
                  comments:true
               io.file.save:x:@.dp/#
                  get-value:x:@lambda2hyper
