
// Iterates through a subset of nodes from a [hyper2lambda] object, checking for specific conditions. If a node's name is not "..", it checks for the existence of a [path] argument, setting values and adding nodes accordingly. If a node's previous sibling's name is "..", it unwraps and adds a description. Otherwise, it sets the node's name and adds it to the return arguments.
for-each:x:@hyper2lambda/*/.arguments/*/[0,100]
   if
      neq
         get-name:x:@.dp/#
         .:..
      .lambda
         if
            exists:x:@.arguments/*/path
            .lambda
               set-value:x:+/+/*/*/*/name
                  get-name:x:@.dp/#
               set-value:x:+/*/*/*/type
                  get-value:x:@.dp/#
               add:x:../*/return-nodes/*/args
                  .
                     .
                        name
                        type
               if
                  eq
                     get-name:x:@.dp/#/-
                     .:..
                  .lambda
                     unwrap:x:+/*/*
                     add:x:../*/return-nodes/*/args/0/-
                        .
                           description:x:@.dp/#/-
         else
            set-name:x:+/+/*/*
               get-name:x:@.dp/#
            unwrap:x:+/*/*
            add:x:../*/return-nodes/*/args
               .
                  name:x:@.dp/#
