
/*
 * This Hyperlambda code iterates over each node in a specified set and checks if the node's value does not end with "/common/". If the condition is true, it splits the node's value by the "/" character, unwraps the result, and adds the first part of the split value to a return node. The code effectively filters and processes nodes based on their value's suffix and manipulates the resulting data. 
 * 
 * 1. [for-each] - Iterates over each node in the specified set.
 * 2. [if] - Checks a condition for each iterated node.
 * 3. [not] - Inverts the condition of its child node.
 * 4. [strings.ends-with] - Checks if the node's value ends with "/common/".
 * 5. [strings.split] - Splits the node's value by the "/" character.
 * 6. [unwrap] - Evaluates and unwraps the split result.
 * 7. [add] - Adds the first part of the split value to a return node.
 */
for-each:x:-/*
   if
      not
         strings.ends-with:x:@.dp/#
            .:/common/
      .lambda
         strings.split:x:@.dp/#
            .:/
         unwrap:x:+/*/*
         add:x:../*/return-nodes
            .
               :x:@strings.split/0/-
