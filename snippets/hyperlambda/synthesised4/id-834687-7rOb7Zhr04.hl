
// This Hyperlambda code checks if a file's name ends with ".hl" and if so, it loads the file, parses it into a lambda object, and iterates over its nodes. For each node, it checks if the node's name does not exist in the result but exists in a vocabulary, then unwraps and adds it to the result. The code uses slots like [if], [strings.ends-with], [io.file.load], [hyper2lambda], [for-each], [get-name], [not-exists], [exists], [unwrap], and [add] to achieve this functionality.
if
   strings.ends-with:x:@.dp/#
      .:.hl
   .lambda
      io.file.load:x:@.dp/#
      hyper2lambda:x:@io.file.load
         comments:true
      for-each:x:@hyper2lambda/*/**
         get-name:x:@.dp/#
         if
            and
               not-exists:x:@.result/*/={@get-name}
               exists:x:@vocabulary/*/={@get-name}
            .lambda
               unwrap:x:+/*/*
               add:x:@.result
                  .
                     .:x:@get-name
