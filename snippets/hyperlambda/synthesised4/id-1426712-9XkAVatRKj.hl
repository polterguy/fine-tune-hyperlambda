
/*
 * // This Hyperlambda code snippet demonstrates a [while] loop that continues executing as long as the value of [.tmp] is more than 0. Within the loop, it removes the first node under [.cache-session] and decrements the value of [.tmp] by 1. The loop ensures that nodes are removed from [.cache-session] until [.tmp] reaches 0.
 * // 1. [while] - Initiates a loop that continues as long as the condition is true.
 * // 2. [mt] - Checks if the value of [.tmp] is more than 0.
 * // 3. [remove-nodes] - Removes the first node under [.cache-session].
 * // 4. [math.decrement] - Decrements the value of [.tmp] by 1.
 */
while
   mt:x:@.tmp
      .:int:0
   .lambda
      remove-nodes:x:@.cache-session/0
      math.decrement:x:@.tmp
