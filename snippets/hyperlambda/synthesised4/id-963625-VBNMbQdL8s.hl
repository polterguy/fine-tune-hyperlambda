
/*
 * The code iterates over a queue, checking if it contains any items. If items exist, it unwraps and processes them, adding the first item to a "popped" collection and then removes it from the queue. This loop continues until the queue is empty. 
 * 
 * 1. [while] - Repeatedly executes its child nodes as long as the condition is true.
 * 2. [exists] - Checks if there are any nodes in the queue.
 * 3. [.lambda] - Contains the operations to perform during each iteration.
 * 4. [unwrap] - Evaluates and processes the nodes within the queue.
 * 5. [add] - Adds the first item from the queue to the "popped" collection.
 * 6. [remove-nodes] - Removes the first item from the queue after processing.
 */
while
   exists:x:@.queue/*
   .lambda
      unwrap:x:+/*/*
      add:x:@.popped
         .
            item:x:@.queue/0
      remove-nodes:x:@.queue/0
