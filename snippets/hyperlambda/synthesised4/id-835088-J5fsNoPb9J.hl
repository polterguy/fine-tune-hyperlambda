
/*
 * This Hyperlambda code snippet demonstrates how to create a new record in a database table named "crypto_keys" using the [data.create] slot. It populates the record with values such as subject, email, domain, type, fingerprint, content, enabled status, and vocabulary. The values for subject, email, domain, and content are dynamically retrieved from the [.arguments] node, while the fingerprint is obtained from a previously defined [crypto.fingerprint] node. The type is statically set to "RSA", and the vocabulary is a predefined string. The [data.create] slot is used to insert these values into the specified table. 
 * 
 * 1. [data.create] - Initiates the creation of a new record in the "crypto_keys" table.
 * 2. [table] - Specifies the target database table, "crypto_keys".
 * 3. [values] - Contains the fields and corresponding values to be inserted into the table.
 * 4. [subject] - Retrieves the subject value from the [.arguments] node.
 * 5. [email] - Retrieves the email value from the [.arguments] node.
 * 6. [domain] - Retrieves the domain value from the [.arguments] node.
 * 7. [type] - Sets the type field to "RSA".
 * 8. [fingerprint] - Retrieves the fingerprint value from the [crypto.fingerprint] node.
 * 9. [content] - Retrieves the content value from the [.arguments] node.
 * 10. [enabled] - Retrieves the enabled status from the [.enabled] node.
 * 11. [vocabulary] - Sets the vocabulary field to a predefined string containing several keywords.
 */
data.create
   table:crypto_keys
   values
      subject:x:@.arguments/*/subject
      email:x:@.arguments/*/email
      domain:x:@.arguments/*/domain
      type:RSA
      fingerprint:x:@crypto.fingerprint
      content:x:@.arguments/*/content
      enabled:x:@.enabled
      vocabulary:"add\nreturn\nget-nodes\nvocabulary\nslots.vocabulary\n"
