
// This Hyperlambda code connects to a database and attempts to update records in the "ml_types" table. It processes arguments to add values and conditions for the update operation, handling the "twilio_account_id" specifically by removing or adding it based on its existence and value. If no records are updated, it sets the HTTP response status to 404 with a "Record not found" message; otherwise, it sets the status to 202 and returns the number of affected records.
data.connect:[generic|magic]
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]
   if
      or
         not-exists:x:@.arguments/*/twilio_account_id
         null:x:@.arguments/*/twilio_account_id
         eq:x:@.arguments/*/twilio_account_id
            .:
      .lambda
         remove-nodes:x:@data.connect/*/data.create/*/values/*/twilio_account_id
         unwrap:x:+/*/*
         add:x:@data.connect/*/data.update/*/values
            .
               twilio_account_id:x:@.arguments/*/type
   data.update
      table:ml_types
      values
      where
         and
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found
   response.status.set:202
   unwrap:x:+/*
   return
      affected:x:@data.update
