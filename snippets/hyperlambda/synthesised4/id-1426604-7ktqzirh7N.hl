
/*
 * // This Hyperlambda code snippet demonstrates how to use the [insert-after] slot to modify a node structure. The code inserts new nodes after a specified node in the hierarchy. Specifically, it targets the [operationId] node within a nested structure and inserts [consumes] and [produces] nodes after it. The [consumes] node's value is dynamically set to reference a node in the current context, while the [produces] node is statically set to "application/json". This operation is useful for dynamically extending or modifying existing node structures in a declarative manner.
 * // 1. [insert-after] - Inserts nodes after the specified node in the hierarchy.
 * // 2. [consumes] - A new node inserted after the target node, with a dynamic value.
 * // 3. [produces] - A new node inserted after the target node, with a static value.
 */
insert-after:x:@.buffer/*/*/*/operationId
   .
      consumes
         .:x:@.dp/#/*/consumes
      produces
         .:application/json
