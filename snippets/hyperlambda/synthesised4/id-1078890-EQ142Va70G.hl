
/*
 * 1. `@html2lambda` - This iterator starts by finding the first node named `html2lambda`. It searches from the current context and moves upwards in the hierarchy if necessary. This is useful for locating a specific section or node in a larger Hyperlambda graph that is responsible for converting HTML to Hyperlambda.
 * 
 * 2. `*` - Retrieves all children nodes of the `html2lambda` node. This is useful for accessing the entire structure or content within the `html2lambda` node, allowing further navigation or processing.
 * 
 * 3. `html` - Filters the previously retrieved children nodes to only include those named `html`. This is typically used to focus on the HTML content within a larger data structure, ensuring that subsequent operations are performed on the correct subset of nodes.
 * 
 * 4. `*` - Retrieves all children nodes of the `html` node. This step is necessary to access the various parts of the HTML structure, such as `head`, `body`, etc., for further processing or manipulation.
 * 
 * 5. `body` - Filters the children nodes to include only those named `body`. This is crucial for operations that need to be performed specifically on the body of the HTML document, such as extracting or transforming content.
 * 
 * 6. `**` - Retrieves all descendant nodes of the `body` node, including the node itself. This breadth-first search is useful for accessing deeply nested content within the body, such as sections, articles, paragraphs, etc.
 * 
 * 7. `article` - Filters the descendants to include only those named `article`. This is particularly useful for extracting or processing articles within the HTML body, which may contain important content or data.
 * 
 * 8. `*` - Retrieves all children nodes of the `article` nodes. This final step allows access to the direct content or elements within each article, such as headings, paragraphs, images, etc., for further processing or transformation.
 * 
 * Potential use cases for this expression include extracting all articles from an HTML document for content analysis, transformation, or conversion into another format, such as Hyperlambda or JSON. It can also be used in web scraping scenarios to gather specific content from web pages.
 */

.:x:@html2lambda/*/html/*/body/**/article/*