
// This Hyperlambda code snippet demonstrates how to perform a SQL query using the [data.read] slot to count the number of records in the "Artist" table of a SQLite database. The [data.read] slot is configured with several child nodes: [database-type] specifies the type of database being queried, which is SQLite in this case; [table] specifies the name of the table, "Artist", from which the data is being read; [columns] specifies the columns to be included in the query, which in this case is an aggregate function count(*) to count all records, and it is aliased as "count". The [where] node is present but does not contain any conditions, indicating no filtering is applied. The [limit] node is set to 1, which restricts the query to return only one record, although this is somewhat redundant when using an aggregate function like count(*). The [yield] slot is used to return the result of the count operation, specifically the value of the "count" node from the result of the [data.read] operation. This setup is useful for retrieving the total number of records in a table in a SQLite database.
data.read
   database-type:sqlite
   table:Artist
   columns
      count(*)
         as:count
   where
      and
   limit:long:1
yield
   count:x:@data.read/*/*/count
