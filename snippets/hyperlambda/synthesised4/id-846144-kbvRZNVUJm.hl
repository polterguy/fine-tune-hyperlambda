
// The Hyperlambda code processes an XML sitemap, extracting URLs and ensuring they are unique and complete. It uses [xml2lambda] to convert XML to a lambda structure, iterates over URL nodes, and checks if the URL count is below 10,000. It concatenates domain names to incomplete URLs and adds unique URLs to a list. It also handles CDATA sections and signals further sitemap loading if needed. Key slots include [for-each] for iteration, [if] for conditional checks, [set-value] for assigning values, and [strings.concat] for URL concatenation.
else
   set-value:x:@.has-sitemap
      .:bool:true
   strings.trim:x:@http.get/*/content
   xml2lambda:x:@strings.trim
   for-each:x:"@xml2lambda/*/urlset/*/url/*/loc/*/\\#text"
      if
         lt
            get-count:x:@.urls/*
            .:int:10000
         .lambda
            .url
            set-value:x:@.url
               get-value:x:@.dp/#
            if
               and
                  not
                     strings.starts-with:x:@.dp/#
                        .:"http://"
                  not
                     strings.starts-with:x:@.dp/#
                        .:"https://"
               .lambda
                  set-value:x:@.url
                     strings.concat
                        get-value:x:@.domain
                        get-value:x:@.dp/#
            if
               not-exists:x:@.urls/*/={@.url}
               .lambda
                  unwrap:x:+/*/*
                  add:x:@.urls
                     .
                        .:x:@.url
   for-each:x:"@xml2lambda/*/urlset/*/url/*/loc/*/\\#cdata-section"
      if
         lt
            get-count:x:@.urls/*
            .:int:10000
         .lambda
            .url
            set-value:x:@.url
               get-value:x:@.dp/#
            if
               and
                  not
                     strings.starts-with:x:@.dp/#
                        .:"http://"
                  not
                     strings.starts-with:x:@.dp/#
                        .:"https://"
               .lambda
                  set-value:x:@.url
                     strings.concat
                        get-value:x:@.domain
                        get-value:x:@.dp/#
            if
               not-exists:x:@.urls/*/={@.url}
               .lambda
                  unwrap:x:+/*/*
                  add:x:@.urls
                     .
                        .:x:@.url
   for-each:x:"@xml2lambda/*/sitemapindex/*/sitemap/*/[0,25]/loc/*/\\#cdata-section"
      if
         lt
            get-count:x:@.urls/*
            .:int:10000
         .lambda
            add:x:./*/signal
               get-nodes:x:@.arguments/*/headers
            unwrap:x:+/**
            signal:magic.ai.load-sitemap
               max:int:10000
               feedback-channel:x:@.arguments/*/feedback-channel
               filter-on-url:x:@.arguments/*/filter-on-url
               sitemap
                  .:x:@.dp/#
            add:x:@.urls
               get-nodes:x:@signal/*/urls/*
            if
               and
                  eq:x:@signal/*/has-sitemap
                     .:bool:false
                  eq
                     get-count:x:@.urls/*
                     .:int:0
               .lambda
                  set-value:x:@.has-sitemap
                     .:bool:false
   for-each:x:"@xml2lambda/*/sitemapindex/*/sitemap/*/[0,25]/loc/*/\\#text"
      if
         lt
            get-count:x:@.urls/*
            .:int:10000
         .lambda
            unwrap:x:+/**
            signal:magic.ai.load-sitemap
               max:int:10000
               feedback-channel:x:@.arguments/*/feedback-channel
               filter-on-url:x:@.arguments/*/filter-on-url
               sitemap
                  .:x:@.dp/#
            add:x:@.urls
               get-nodes:x:@signal/*/urls/*
            if
               and
                  eq:x:@signal/*/has-sitemap
                     .:bool:false
                  eq
                     get-count:x:@.urls/*
                     .:int:0
               .lambda
                  set-value:x:@.has-sitemap
                     .:bool:false
