
// This Hyperlambda code uses a [switch] statement to map various string values to corresponding data types by setting the [.type] node's value. It evaluates the result of [strings.replace] and matches it against multiple [case] nodes, each setting [.type] to a specific type like "int", "date", "decimal", etc. If no [case] matches, it uses a conditional [if] to check if the value starts with "enum" to set [.type] to "string", otherwise defaults to "string".
switch:x:@strings.replace
   case:smallserial
   case:serial
   case:smallint
      set-value:x:@.type
         .:int
   case:timestamp
      set-value:x:@.type
         .:date
   case:numeric
   case:decimal
   case:real
   case:money
      set-value:x:@.type
         .:decimal
   case:double precision
      set-value:x:@.type
         .:double
   case:integer
   case:bigint
   case:bigserial
   case:interval
      set-value:x:@.type
         .:long
   case:string
   case:bit
   case:bit varying
   case:character
   case:character varying
   case:json
   case:text
   case:xml
      set-value:x:@.type
         .:string
   case:boolean
      set-value:x:@.type
         .:bool
   default
      if
         strings.starts-with:x:@strings.replace
            .:enum
         .lambda
            set-value:x:@.type
               .:string
      else
         set-value:x:@.type
            .:string
