
/*
 * This Hyperlambda code checks if a [filter] argument exists and, if so, constructs a SQL-like query condition. It concatenates the [filter] value with "%" wildcards, unwraps it, and adds it to a database query's [where] clause using [add]. The condition checks for matches in [ml_requests.prompt], [ml_requests.completion], or [ml_requests.user_id]. Finally, it removes the [filter] node from the arguments. 
 * 
 * 1. [if] - Checks if a [filter] argument exists.
 * 2. [exists] - Evaluates to true if the [filter] node is present.
 * 3. [strings.concat] - Concatenates "%" with the [filter] value.
 * 4. [unwrap] - Evaluates the concatenated string.
 * 5. [add] - Adds the condition to the [where] clause of a database query.
 * 6. [remove-nodes] - Removes the [filter] node from the arguments.
 */
if
   exists:x:@.arguments/*/filter
   .lambda
      strings.concat
         .:%
         get-value:x:@.arguments/*/filter
         .:%
      unwrap:x:+/*/*/*
      add:x:@data.connect/*/data.read/*/where/*/and
         .
            or
               ml_requests.prompt.like:x:@strings.concat
               ml_requests.completion.like:x:@strings.concat
               ml_requests.user_id.eq:x:@.arguments/*/filter
      remove-nodes:x:@.arguments/*/filter
