
// This Hyperlambda code checks if the [filename] argument contains the string "/workflows/actions/". If true, it constructs an action and invocation, executes a workflow action, and processes arguments. It dynamically adjusts argument types, converts Hyperlambda code, and yields the result as a Hyperlambda string with comments. Key slots include [if] for conditional execution, [add] for node addition, [set-value] for setting node values, [for-each] for iterating over arguments, and [yield] for returning the result.
if
   strings.contains:x:@.arguments/*/filename
      .:/workflows/actions/
   .lambda
      .action
      add:x:@.action
         hyper2lambda:x:@load-file
            comments:true
      .invocation
         execute:magic.workflows.actions.execute
            name
            filename
            arguments
      set-value:x:@.invocation/*/execute/*/name
         get-value:x:@.arguments/*/args/*/action_name
      remove-nodes:x:@.arguments/*/args/*/action_name
      set-value:x:@.invocation/*/execute/*/filename
         get-value:x:@.arguments/*/filename
      if
         eq
            get-name:x:@.action/0
            .:..
         .lambda
            unwrap:x:+/*/*
            insert-before:x:@.invocation/0
               .
                  ..:x:@.action/0
      for-each:x:@.arguments/*/args/**
         if
            strings.starts-with:x:@.dp/#
               .:":x:"
            .lambda
               strings.substring:x:@.dp/#
                  .:int:3
               set-x:x:@.dp/#
                  convert:x:@strings.substring
                     type:x
         else
            get-name:x:@.dp/#
            switch:x:@.action/*/.arguments/*/{@get-name}/*/type
               case:long
               case:decimal
               case:int
               case:float
               case:double
                  set-value:x:@.dp/#
                     convert:x:@.dp/#
                        type:x:@.action/*/.arguments/*/{@get-name}/*/type
               case:hyperlambda
                  add:x:@.dp/#
                     hyper2lambda:x:@.dp/#
                        comments:true
                  set-value:x:@.dp/#
      add:x:@.invocation/*/execute/*/arguments
         get-nodes:x:@.arguments/*/args/*
      lambda2hyper:x:@.invocation/*
         comments:true
      yield
         result:x:@lambda2hyper
