
// This Hyperlambda code snippet is designed to query a database table named "contacts" and filter the results based on specified conditions. The [data.read] slot is used to initiate a read operation from the "contacts" table. Within this operation, a [where] clause is defined to filter the records. The [or] slot is used to specify that either of the two conditions can be true for a record to be included in the results: the [email] field must equal the value specified by the expression `x:@.arguments/*/email.eq`, or the [name] field must match a pattern specified by the expression `x:@.arguments/*/name.like`. Finally, the [yield] slot is used to return the filtered contacts by referencing all nodes under the [data.read] operation. This setup is useful for scenarios where you need to search for contacts by either their email or a pattern in their name.
data.read
   table:contacts
   where
      or
         email.eq:x:@.arguments/*/email.eq
         name.like:x:@.arguments/*/name.like
yield
   contacts:x:@data.read/*
