
/*
 * This Hyperlambda code manages the execution of AI functions, handling errors and signaling session updates. It checks for function invocation limits, executes functions, and ensures results fit within token limits. If successful, it logs and signals results; otherwise, it logs errors and updates prompts with error messages. Key slots include [if] for condition checks, [try] for exception handling, [execute] for function execution, and [sockets.signal] for session updates. 
 * 
 * 1. [if] - Checks if the current node contains a function invocation.
 * 2. [try] - Attempts to execute the function and handle any exceptions.
 * 3. [if] - Checks if the number of iterations is less than or equal to 1.
 * 4. [log.error] - Logs an error message if too many function invocations occur.
 * 5. [sockets.signal] - Sends a signal with error details to the session.
 * 6. [execute] - Executes the AI function using provided parameters.
 * 7. [lambda2json] - Converts the execution result to JSON format.
 * 8. [if] - Checks if the result size exceeds the maximum context tokens.
 * 9. [config.get] - Retrieves a success message from the configuration.
 * 10. [sockets.signal] - Sends the function result and invocation details to the session.
 * 11. [if] - Checks if the execution result exists.
 * 12. [set-value] - Updates the new prompt with the execution result details.
 * 13. [.catch] - Handles exceptions by logging errors and signaling the session.
 * 14. [set-value] - Updates the new prompt with the error message.
 */
if
   strings.contains:x:@.dp/#
      .:FUNCTION_INVOCATION[/
   .lambda
      try
         if
            lte:x:@.iterations
               .:int:1
            .lambda
               log.error:Too many function invocations
               sockets.signal:x:@.session
                  args
                     function_error:Too many function invocations
               sockets.signal:x:@.session
                  args
                     function_waiting:bool:false
               sockets.signal:x:@.session
                  args
                     error:bool:true
                     status:int:500
                     message:Too many function invocations. Configure your type to handle more invocations or change your prompt.
               sockets.signal:x:@.session
                  args
                     finished:bool:true
         else
            execute:magic.ai.functions.invoke
               type:x:@.type
               session:x:@.session
               user-id:x:@.user-id
               invocation:x:@.dp/#
            lambda2json:x:@execute/*/result/*
               format:true
            if
               mt
                  openai.tokenize:x:@lambda2json
                  get-value:x:@.arguments/@.arguments/*/max_context_tokens
               .lambda
                  throw:Result too large, try to limit your result
                     status:int:400
                     public:bool:true
            config.get:"magic:chat:functions:success-message"
               .:Success!
            unwrap:x:+/*/*
            sockets.signal:x:@.session
               args
                  function_result:x:@config.get
                  invocation:x:@execute/*/json
                  file:x:@execute/*/workflow
            if
               exists:x:@execute/*/result/*
               .lambda
                  set-value:x:@.new-prompt
                     strings.concat
                        get-value:x:@.new-prompt
                        .:"Response from '"
                        get-value:x:@execute/*/workflow
                        .:@"' was:
```json
"
                        get-value:x:@lambda2json
                        .:@"
"
                        .:```
                        .:@"
"
                        .:@"
"
                  set-value:x:@.function-result
                     get-value:x:@lambda2json
            else
               set-value:x:@.new-prompt
                  strings.concat
                     get-value:x:@.new-prompt
                     .:"Invocation of '"
                     get-value:x:@execute/*/workflow
                     .:"' was a success."
                     .:@"
"
                     .:@"
"
      .catch
         log.error:Could not execute AI function
            message:x:@.arguments/*/message
         unwrap:x:+/*/*
         sockets.signal:x:@.session
            args
               function_error:x:@.arguments/*/message
         set-value:x:@.new-prompt
            strings.concat
               get-value:x:@.new-prompt
               .:"Invocation failed, exception message was: '"
               get-value:x:@.arguments/*/message
               .:"'"
               .:@"
"
               .:@"
"
