
/*
 * The provided Hyperlambda code is designed to iteratively remove all occurrences of double spaces from a string. It uses a [while] loop to repeatedly check if the string contains double spaces, and if so, replaces them with a single space. This process continues until no double spaces are left in the string. The code is structured as follows:
 * 
 * 1. [while] - Initiates a loop that continues as long as the [has-double-space] node evaluates to true.
 * 2. [if] - Checks if the [completion] node contains double spaces.
 * 3. [strings.contains] - Evaluates whether the [completion] node includes the substring "  ".
 * 4. [set-value] - Updates the [completion] node by replacing double spaces with a single space.
 * 5. [strings.replace] - Performs the actual replacement of "  " with " ".
 * 6. [else] - Executes when no double spaces are found, setting [has-double-space] to false to terminate the loop.
 */
while:x:@.has-double-space
   if
      strings.contains:x:@.completion
         .:"  "
      .lambda
         set-value:x:@.completion
            strings.replace:x:@.completion
               .:"  "
               .:" "
   else
      set-value:x:@.has-double-space
         .:bool:false
