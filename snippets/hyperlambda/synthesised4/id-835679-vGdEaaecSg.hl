
/*
 * This Hyperlambda code connects to an SQLite database named "crm" and performs a read operation on the "clients" table. It dynamically adds and removes nodes related to ordering, direction, limit, and offset from the arguments before executing the read operation. The code specifies the columns to retrieve and constructs a "where" clause for filtering. Finally, it returns the results of the read operation. 
 * 
 * 1. [data.connect] - Connects to the "crm" database using SQLite.
 * 2. [database-type] - Specifies the database type as SQLite.
 * 3. [add] - Adds nodes related to order and direction from arguments to the data.read node.
 * 4. [remove-nodes] - Removes order and direction nodes from arguments.
 * 5. [add] - Adds limit and offset nodes from arguments to the data.read node.
 * 6. [remove-nodes] - Removes limit and offset nodes from arguments.
 * 7. [add] - Adds nodes from arguments to the where clause of data.read.
 * 8. [data.read] - Reads from the "clients" table and specifies columns to retrieve.
 * 9. [return-nodes] - Returns the results of the read operation.
 */
data.connect:[generic|crm]
   database-type:sqlite
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:clients
      columns
         clients.client_id
         clients.name
         clients.email
         clients.phone
         clients.address
      where
         and
   return-nodes:x:@data.read/*
