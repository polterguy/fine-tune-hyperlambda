
/*
 * // This Hyperlambda code demonstrates how to perform a SQL read operation using a SQLite database. It specifies a table named "Employees" and performs a left join on itself, aliasing the second instance as "ReportsTo". The join condition matches the "ReportsTo" column of the first "Employees" table with the "EmployeeID" of the "ReportsTo" alias. The code also includes an aggregate function, which is aliased as "result", and a grouping operation based on a specified column. The "where" clause is included but does not contain any conditions.
 * // 1. [database-type] - Specifies the type of database being used, which is SQLite in this case.
 * // 2. [table] - Indicates the main table to read from, which is "Employees".
 * // 3. [join] - Performs a left join on the "Employees" table, aliasing it as "ReportsTo".
 * // 4. [type] - Specifies the type of join, which is a left join.
 * // 5. [on] - Defines the condition for the join, matching "Employees.ReportsTo" with "ReportsTo.EmployeeID".
 * // 6. [columns] - Lists the columns to be included in the result, including an aggregate function.
 * // 7. [as] - Aliases the result of the aggregate function as "result".
 * // 8. [where] - Placeholder for conditions to filter the results, currently empty.
 * // 9. [group] - Specifies the column to group the results by.
 */
data.read
   database-type:sqlite
   table:Employees
      join:Employees
         as:ReportsTo
         type:left
         on
            and
               Employees.ReportsTo:ReportsTo.EmployeeID
   columns
      aggregate_functor
         as:result
   where
      and
   group
      group_column
