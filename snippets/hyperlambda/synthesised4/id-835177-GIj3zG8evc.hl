
// This Hyperlambda code checks if a specific expression does not exist within a set of candidate nodes. If the expression is absent, it unwraps certain nodes and adds a new candidate node with specific attributes, including the name and expression derived from the context, and marks it as complete. The [if] slot is used for conditional execution, [not-exists] checks for the absence of nodes, [unwrap] evaluates nodes before execution, and [add] appends new nodes to the specified location.
if
   not-exists:x:../*/return/*/candidates/*/*/expression/={@.x}
   .lambda
      unwrap:x:+/*/*/*
      add:x:../*/return/*/candidates
         .
            .
               name:x:@.x
               expression:x:@.x
               complete:bool:true
