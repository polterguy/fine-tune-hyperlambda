
// This Hyperlambda code uses a [switch] statement to determine the SQL command for dropping a database based on the [databaseType] argument. It handles three cases: MySQL, PostgreSQL, and MSSQL. For each case, it sets the [master] database and constructs a [sql] command using [strings.concat] to drop the specified [databaseName]. The SQL commands differ slightly for each database type to accommodate their specific syntax and requirements.
switch:x:@.arguments/*/databaseType
   case:mysql
      set-value:x:@.master
         .:information_schema
      set-value:x:@.sql
         strings.concat
            .:drop database `
            get-value:x:@.arguments/*/databaseName
            .:`;
   case:pgsql
      set-value:x:@.master
         .:template1
      set-value:x:@.sql
         strings.concat
            .:"revoke connect on database \""
            get-value:x:@.arguments/*/databaseName
            .:"\" from public; "
            .:"select pid, pg_terminate_backend(pid) from pg_stat_activity "
            .:"where datname = '"
            get-value:x:@.arguments/*/databaseName
            .:"'; "
            .:"drop database \""
            get-value:x:@.arguments/*/databaseName
            .:"\";"
   case:mssql
      set-value:x:@.master
         .:master
      set-value:x:@.sql
         strings.concat
            .:alter database [
            .:x:@.arguments/*/databaseName
            .:"] set single_user with rollback immediate; "
            .:drop database [
            get-value:x:@.arguments/*/databaseName
            .:];
