
/*
 * This Hyperlambda code connects to a SQLite database and performs a data read operation on the "leads" table, joining with the "clients" table. It dynamically sets and modifies the names and values of nodes based on arguments such as "group_column" and "aggregate_function". The code also handles the addition and removal of nodes related to SQL query parameters like limit, offset, order, and direction, and constructs an aggregate function for the SQL query. Finally, it returns the nodes from the data read operation.
 * 
 * 1. [data.connect] - Connects to a SQLite database.
 * 2. [database-type] - Specifies the database type as SQLite.
 * 3. [set-name] - Sets the name of nodes based on the "group_column" argument.
 * 4. [insert-before] - Inserts a node before the first column in the data read operation.
 * 5. [set-value] - Sets the value of the "as" node for the aggregate function.
 * 6. [remove-nodes] - Removes nodes related to "group_column", "limit", "offset", "order", and "direction" arguments.
 * 7. [add] - Adds nodes for "limit", "offset", "order", and "direction" to the data read operation.
 * 8. [strings.concat] - Concatenates strings to form the aggregate function.
 * 9. [data.read] - Performs a data read operation on the "leads" table with a left join on the "clients" table.
 * 10. [return-nodes] - Returns the nodes from the data read operation.
 */
data.connect:[generic|crm]
   database-type:sqlite
   set-name:x:@data.connect/*/data.read/*/group/*/group_column
      get-value:x:@.arguments/*/group_column
   set-name:x:+/*/*
      get-value:x:@.arguments/*/group_column
   insert-before:x:@data.connect/*/data.read/*/columns/0
      .
         group_column
   set-value:x:@data.connect/*/data.read/*/columns/1/*/as
      get-value:x:@.arguments/*/aggregate_function
   remove-nodes:x:@.arguments/*/group_column
   add:x:@data.connect/*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   set-name:x:./*/data.read/*/columns/*/aggregate_functor
      strings.concat
         get-value:x:@.arguments/*/aggregate_function
         .:(
         get-value:x:@.arguments/*/aggregate_column
         .:)
   remove-nodes:x:@.arguments/*/[0,2]
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:leads
         join:clients
            as:client_id
            type:left
            on
               and
                  leads.client_id:client_id.client_id
      columns
         aggregate_functor
            as:result
      where
         and
      group
         group_column
   return-nodes:x:@data.read/*
