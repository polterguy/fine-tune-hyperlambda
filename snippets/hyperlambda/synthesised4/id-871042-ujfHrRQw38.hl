
/*
 * // This Hyperlambda code iterates over a list of tables provided in the [.arguments] node, generating and executing SQL to create these tables in a PostgreSQL database. It constructs the SQL for each table by concatenating strings that define the table structure, including columns and constraints, and then executes this SQL using [data.select]. The results are concatenated into a single string, stored in [.result].
 * // 1. [for-each] - Iterates over each table specified in the [.arguments] node.
 * // 2. [.sql] - Temporary node to store the SQL string for creating a table.
 * // 3. [set-value] - Assigns the generated SQL string to the [.sql] node.
 * // 4. [strings.concat] - Concatenates strings to form the SQL statement for creating a table.
 * // 5. [data.select] - Executes the generated SQL to create the table in the specified database type.
 * // 6. [database-type] - Specifies the type of database to execute the SQL against.
 * // 7. [name] - Refers to the current table name being processed.
 * // 8. [set-value] - Updates the [.result] node with the concatenated SQL results.
 * // 9. [get-value] - Retrieves values from nodes to concatenate into the [.result] node.
 */
for-each:x:@.arguments/*/tables/*
   .sql
   set-value:x:@.sql
      strings.concat
         .:"\nselect 'create table ' || pc.relname || E'(\\n' ||\n   string_agg('  ' || pa.attname || ' ' || pg_catalog.format_type(pa.atttypid, pa.atttypmod) ||\n   coalesce(' default ' || (\n      select pg_catalog.pg_get_expr(d.adbin, d.adrelid)\n         from pg_catalog.pg_attrdef d\n         where d.adrelid = pa.attrelid and d.adnum = pa.attnum and pa.atthasdef), '') || ' ' ||\n              case pa.attnotnull\n                  when true then 'not null'\n                  else 'null'\n              end, E',\\n') ||\n   coalesce((select E',\\n' || string_agg('  constraint ' || pc1.conname || ' ' ||\n      pg_get_constraintdef(pc1.oid), E',\\n' order by pc1.conindid)\n            from pg_constraint pc1\n            where pc1.conrelid = pa.attrelid), '') ||\n   E'\\n);' as sql\nfrom pg_catalog.pg_attribute pa\njoin pg_catalog.pg_class pc\n    on pc.oid = pa.attrelid and pc.relname = @name\njoin pg_catalog.pg_namespace pn\n    on pn.oid = pc.relnamespace and pn.nspname = 'public'\nwhere pa.attnum > 0\n    and not pa.attisdropped\ngroup by pn.nspname, pc.relname, pa.attrelid;"
   data.select:x:@.sql
      database-type:x:@.arguments/*/databaseType
      name:x:@.dp/#
   set-value:x:@.result
      strings.concat
         get-value:x:@.result
         get-value:x:@data.select/*/*/sql
         .:@"

"
