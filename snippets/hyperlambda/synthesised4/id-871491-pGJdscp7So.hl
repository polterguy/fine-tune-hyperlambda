
/*
 * This code establishes a connection to a SQLite database named "hospital" using a generic connection string. It manipulates SQL query parameters by adding and removing nodes related to ordering, direction, limit, and offset from the arguments, and then constructs a query to select specific columns from the "Doctors" table. The query includes a "where" clause for additional conditions, and the selected data is returned. 
 * 
 * 1. [data.connect] - Connects to the "hospital" database using SQLite.
 * 2. [database-type] - Specifies the database type as SQLite.
 * 3. [add] - Adds order and direction nodes to the data.read node.
 * 4. [get-nodes] - Retrieves nodes for order and direction from arguments.
 * 5. [remove-nodes] - Removes order and direction nodes from arguments.
 * 6. [add] - Adds limit and offset nodes to the data.read node.
 * 7. [get-nodes] - Retrieves nodes for limit and offset from arguments.
 * 8. [remove-nodes] - Removes limit and offset nodes from arguments.
 * 9. [add] - Adds nodes from arguments to the where clause.
 * 10. [data.read] - Reads data from the "Doctors" table.
 * 11. [columns] - Specifies the columns to select from the "Doctors" table.
 * 12. [where] - Starts a where clause for filtering data.
 * 13. [return-nodes] - Returns the result of the data.read operation.
 */
data.connect:[generic|hospital]
   database-type:sqlite
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Doctors
      columns
         Doctors.DoctorID
         Doctors.FirstName
         Doctors.LastName
         Doctors.Specialty
         Doctors.PhoneNumber
         Doctors.Email
      where
         and
   return-nodes:x:@data.read/*
