
/*
 * The code snippet demonstrates a [while] loop that continues execution as long as the [counter] node's value is less than or equal to 5. Within each iteration, it uses [unwrap] to evaluate expressions, adds a node with the current counter value to [result], and increments the [counter] by 1. 
 * 
 * 1. [while] - Initiates a loop that runs while the condition is true.
 * 2. [lte] - Checks if the [counter] value is less than or equal to 5.
 * 3. [get-value] - Retrieves the current value of [counter].
 * 4. [.lambda] - Contains the code block executed in each loop iteration.
 * 5. [unwrap] - Evaluates expressions pointed to by the given expression.
 * 6. [add] - Adds a new node with the current counter value to [result].
 * 7. [math.increment] - Increments the [counter] value by 1.
 */
while
   lte
      get-value:x:@.counter
      .:int:5
   .lambda
      unwrap:x:+/*/*
      add:x:@.result
         .
            value:x:@.counter
      math.increment:x:@.counter
