
/*
 * /*
 *  * This Hyperlambda code checks the beginning of a URL string and constructs a full URL based on certain conditions.
 *  * 1. [if] - Starts a conditional block to evaluate multiple conditions.
 *  * 2. [and] - Ensures that both conditions within it must be true.
 *  * 3. [not] - Inverts the result of the condition within it.
 *  * 4. [strings.starts-with] - Checks if the string does not start with "http://".
 *  * 5. [strings.starts-with] - Checks if the string does not start with "https://".
 *  * 6. [.lambda] - Contains the logic to execute if the above conditions are true.
 *  * 7. [if] - Checks if the string starts with "//".
 *  * 8. [strings.split] - Splits the base URL at "://".
 *  * 9. [set-value] - Sets the value of [.url] by concatenating parts of the URL.
 *  * 10. [strings.concat] - Concatenates the protocol and the rest of the URL.
 *  * 11. [else-if] - Checks if the string starts with "/".
 *  * 12. [set-value] - Sets the value of [.url] by concatenating the base and the relative path.
 *  * 13. [else] - Executes if none of the above conditions are true.
 *  * 14. [set-value] - Sets the value of [.url] by concatenating the base, a "/", and the relative path.
 *  */
 */
if
   and
      not
         strings.starts-with:x:"@.dp/#/*/\\@src/[0,1]"
            .:"http://"
      not
         strings.starts-with:x:"@.dp/#/*/\\@src/[0,1]"
            .:"https://"
   .lambda
      if
         strings.starts-with:x:"@.dp/#/*/\\@src/[0,1]"
            .://
         .lambda
            strings.split:x:@.base
               .:"://"
            set-value:x:@.url
               strings.concat
                  get-value:x:@strings.split/0
                  .:":"
                  get-value:x:"@.dp/#/*/\\@src/[0,1]"
      else-if
         strings.starts-with:x:"@.dp/#/*/\\@src/[0,1]"
            .:/
         .lambda
            set-value:x:@.url
               strings.concat
                  get-value:x:@.base
                  get-value:x:"@.dp/#/*/\\@src/[0,1]"
      else
         set-value:x:@.url
            strings.concat
               get-value:x:@.base
               .:/
               get-value:x:"@.dp/#/*/\\@src/[0,1]"
