
/*
 * This Hyperlambda code checks if the value of [.no] is equal to 0, and if so, it constructs a SQL expression by concatenating various parts. It uses [strings.concat] to build a complex SQL string involving length calculations and replacements, appending this to the [.sql] node. The code dynamically constructs a SQL snippet to calculate occurrences of a pattern within a field. 
 * 
 * 1. [if] - Checks if [.no] is equal to 0.
 * 2. [eq] - Compares [.no] to 0.
 * 3. [set-value] - Sets the value of [.sql].
 * 4. [strings.concat] - Concatenates strings to form a SQL expression.
 * 5. [get-value] - Retrieves values from [.sql], [.fields], and [.no] for concatenation.
 */
if
   eq:x:@.no
      .:int:0
   .lambda
      set-value:x:@.sql
         strings.concat:x:@.sql
            get-value:x:@.sql
            .:" (length("
            get-value:x:@.fields
            .:) - length(replace(lower(
            get-value:x:@.fields
            .:), @p
            get-value:x:@.no
            .:", ''))) / length(@p"
            get-value:x:@.no
            .:)
