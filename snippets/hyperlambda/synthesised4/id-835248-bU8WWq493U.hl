
// This Hyperlambda code performs authentication and reCAPTCHA verification based on provided arguments and model values. It first checks if authentication should be skipped, and if not, verifies the user's authentication ticket. It then evaluates the reCAPTCHA score and verifies the reCAPTCHA response if necessary, using configuration values for the site key and secret. If the reCAPTCHA score is above a threshold, it executes a captcha verification process. The code uses conditional logic to determine the appropriate actions based on the presence and values of specific arguments and model nodes.
if
   or
      not-exists:x:@.arguments/*/skip-auth
      eq:x:@.arguments/*/skip-auth
         .:bool:false
   .lambda
      if
         and
            not-null:x:@.model/*/auth
            neq:x:@.model/*/auth
               .:
         .lambda
            auth.ticket.verify:x:@.model/*/auth
      if
         and
            eq
               auth.ticket.get
               .
            mt
               convert:x:@.model/*/recaptcha
                  type:decimal
               .:decimal:0
            not-null:x:@.model/*/recaptcha
         .lambda
            if
               or
                  not-exists:x:@.arguments/*/recaptcha_response
                  null:x:@.arguments/*/recaptcha_response
               .lambda
                  response.status.set:499
                  return
                     error:No reCAPTCHA supplied
            .key
            set-value:x:@.key
               config.get:"magic:auth:recaptcha:key"
            .secret
            set-value:x:@.secret
               config.get:"magic:auth:recaptcha:secret"
            convert:x:@.model/*/recaptcha
               type:decimal
            validators.recaptcha:x:@.arguments/*/recaptcha_response
               min:x:@convert
               site-key:x:@.key
               secret:x:@.secret
      else-if
         and
            eq
               auth.ticket.get
               .
            not
               lt
                  convert:x:@.model/*/recaptcha
                     type:decimal
                  .:decimal:0
         .lambda
            execute:magic.auth.captcha-verify
               token:x:@.arguments/*/recaptcha_response
