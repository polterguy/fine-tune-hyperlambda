
// This Hyperlambda code connects to a CMS database using SQLite, performs a read operation on the "comments" table, and joins it with "posts" and "users" tables using left joins. It selects specific columns from these tables, including comment details and associated post titles and usernames. The code also dynamically adds nodes to the "where" clause from the arguments and returns the nodes from the read operation.
data.connect:[generic|cms]
   database-type:sqlite
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:comments
         join:posts
            as:post_id
            type:left
            on
               and
                  comments.post_id:post_id.id
         join:users
            as:user_id
            type:left
            on
               and
                  comments.user_id:user_id.id
      columns
         comments.id
         comments.post_id
         comments.user_id
         comments.content
         comments.created_at
         post_id.title
            as:post_id.title
         user_id.username
            as:user_id.username
      where
         and
   return-nodes:x:@data.read/*
