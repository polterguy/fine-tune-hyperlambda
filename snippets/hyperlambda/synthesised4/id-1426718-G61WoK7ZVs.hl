
/*
 * /*
 *  * This Hyperlambda code is designed to process files in a specified directory, identify their types, and create summaries for them using the OpenAI API. It starts by unzipping a file and deleting the original zip file. Then, it lists all files in a temporary directory and iterates over them to determine their types based on file extensions. If a file is identified, it loads the content and checks if it can create a summary using OpenAI's API. If successful, it stores the summary and file content as training snippets in a database. Finally, it signals the completion of the process or logs an error if something goes wrong.
 *  *
 *  * 1. [fork] - Initiates a new thread of execution.
 *  * 2. [try] - Begins a try block to handle exceptions.
 *  * 3. [.token] - Declares a token node for storing the authorization token.
 *  * 4. [set-value] - Sets the value of the token node by concatenating "Bearer " with the OpenAI API key.
 *  * 5. [io.file.unzip] - Unzips the specified file.
 *  * 6. [io.file.delete] - Deletes the original zip file after extraction.
 *  * 7. [io.file.list-recursively] - Lists all files recursively in the specified directory.
 *  * 8. [for-each] - Iterates over each file found in the directory.
 *  * 9. [.handle] - Boolean node to determine if a file should be processed.
 *  * 10. [.file-meta] - Node for storing metadata about the file.
 *  * 11. [strings.split] - Splits the file path to extract the file extension.
 *  * 12. [switch] - Switch statement to handle different file types.
 *  * 13. [case] - Handles specific file extensions and sets metadata accordingly.
 *  * 14. [if] - Checks if the file should be processed based on its extension.
 *  * 15. [.content] - Node for storing the file's content.
 *  * 16. [io.file.load] - Loads the content of the file.
 *  * 17. [.snippets] - Node for storing training snippets.
 *  * 18. [http.post] - Sends a request to the OpenAI API to create a summary of the file.
 *  * 19. [add] - Adds the generated summary and file content as a training snippet.
 *  * 20. [data.connect] - Connects to a database to store the training snippets.
 *  * 21. [data.create] - Creates a new entry in the database for each snippet.
 *  * 22. [strings.concat] - Concatenates strings for logging and signaling purposes.
 *  * 23. [sockets.signal] - Sends a signal with a message to a feedback channel.
 *  * 24. [.catch] - Handles exceptions by logging errors and signaling an error message.
 *  */
 */
fork
   try
      .token
      set-value:x:@.token
         strings.concat
            .:"Bearer "
            config.get:"magic:openai:key"
      io.file.unzip:x:@.filename
      io.file.delete:x:@.filename
      io.file.list-recursively:/etc/system/openai/temp/
      for-each:x:@io.file.list-recursively/*
         .handle:bool:false
         .file-meta:
         strings.split:x:@.dp/#
            .:.
         switch:x:@strings.split/0/-
            case:cs
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:"File type: VB.NET"
            case:vb
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:"Programming language: VB.NET"
            case:py
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:"Programming language: Python"
            case:rb
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:"Programming language: Ruby"
            case:js
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:"Programming language: JavaScript"
            case:ts
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:"Programming language: TypeScript"
            case:txt
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:Text file
            case:css
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:CSS file
            case:html
            case:htm
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:HTML file
            case:sass
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:SASS file
            case:scss
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:SCSS file
            case:sql
               set-value:x:@.handle
                  .:bool:true
               set-value:x:@.file-meta
                  strings.concat
                     get-value:x:@.file-meta
                     .:SQL file
            case:md
               if
                  neq:x:@.dp/#
                     .:/etc/system/openai/temp/README.md
                  .lambda
                     set-value:x:@.handle
                        .:bool:true
                     set-value:x:@.file-meta
                        strings.concat
                           get-value:x:@.file-meta
                           .:Markdown file
            default
               strings.concat
                  .:"File: "
                  get-value:x:@.dp/#
                  .:" is ignored"
               unwrap:x:+/*/*/message
               sockets.signal:x:@.arguments/*/feedback-channel
                  args
                     message:x:@strings.concat
                     type:info
         if:x:@.handle
            set-value:x:@.file-meta
               strings.concat
                  get-value:x:@.file-meta
                  .:" - Filename: "
                  get-value:x:@.dp/#
            .content
            set-value:x:@.content
               io.file.load:x:@.dp/#
            .snippets
            if
               and
                  exists:x:@.arguments/*/massage
                  neq:x:@.arguments/*/massage
                     .
                  neq:x:@.arguments/*/massage
                     .:
                  lt
                     openai.tokenize:x:@.content
                     .:int:15000
               .lambda
                  strings.concat
                     .:"Creating summary for file: "
                     get-value:x:@.dp/#
                  unwrap:x:+/*/*/message
                  sockets.signal:x:@.arguments/*/feedback-channel
                     args
                        message:x:@strings.concat
                        type:info
                  http.post:"https://api.openai.com/v1/chat/completions"
                     headers
                        Authorization:x:@.token
                        Content-Type:application/json
                     payload
                        model:gpt-3.5-turbo-1106
                        max_tokens:int:2000
                        temperature:decimal:0.5
                        messages
                           .
                              role:system
                              content:x:@.arguments/*/massage
                           .
                              role:system
                              content:x:@.content
                     convert:true
                  if
                     and
                        mte:x:@http.post
                           .:int:200
                        lt:x:@http.post
                           .:int:300
                     .lambda
                        unwrap:x:+/*/*/*
                        add:x:@.snippets
                           .
                              .
                                 prompt:x:@http.post/*/content/*/choices/0/*/message/*/content
                                 completion:x:@.content
                  else
                     strings.concat
                        .:"Could not create summary for file: "
                        get-value:x:@.dp/#
                     unwrap:x:+/*/*/message
                     sockets.signal:x:@.arguments/*/feedback-channel
                        args
                           message:x:@strings.concat
                           type:warning
                     unwrap:x:+/*/*/*
                     add:x:@.snippets
                        .
                           .
                              prompt:x:@.file-meta
                              completion:x:@.content
            else
               unwrap:x:+/*/*/*
               add:x:@.snippets
                  .
                     .
                        prompt:x:@.file-meta
                        completion:x:@.content
            data.connect:[generic|magic]
               for-each:x:@.snippets/*
                  data.create
                     table:ml_training_snippets
                     values
                        type:x:@.arguments/*/type
                        prompt:x:@.dp/#/*/prompt
                        completion:x:@.dp/#/*/completion
                        filename:x:@.dp/@.dp/#
                        cached:int:0
      strings.concat
         .:"Done importing "
         get-count:x:@.snippets/*
         .:" training snippets, now vectorising model"
      unwrap:x:+/*/*/message
      sockets.signal:x:@.arguments/*/feedback-channel
         args
            message:x:@strings.concat
            type:done_crawling
   .catch
      log.error:x:@.arguments/*/message
      sockets.signal:x:@.arguments/@.arguments/*/feedback-channel
         roles:root
         args
            message:Something went wrong as we tried to import your file.
            type:error
