
/*
 * // This Hyperlambda code checks if certain arguments exist and are not null, and if they contain a colon. If these conditions are met, it splits the "to" and "from" arguments by the colon, assigns parts of the split results to variables, and then adds a signal with these variables.
 * // 1. [if] - Checks if all specified conditions are true.
 * // 2. [and] - Ensures all child conditions must be true.
 * // 3. [exists] - Checks if the "to" and "from" arguments exist.
 * // 4. [not-null] - Checks if the "to" and "from" arguments are not null.
 * // 5. [strings.contains] - Checks if the "to" and "from" arguments contain a colon.
 * // 6. [.lambda] - Executes the following nodes if the conditions are true.
 * // 7. [.channel], [.to], [.from] - Declares variables for storing split results.
 * // 8. [strings.split] - Splits the "to" and "from" arguments by a colon.
 * // 9. [set-value] - Assigns the split results to the variables.
 * // 10. [unwrap] - Evaluates expressions in the specified nodes.
 * // 11. [add] - Adds a signal with the specified "to", "from", and "channel" values.
 */
if
   and
      exists:x:@.arguments/*/to
      exists:x:@.arguments/*/from
      not-null:x:@.arguments/*/to
      not-null:x:@.arguments/*/from
      strings.contains:x:@.arguments/*/to
         .:":"
      strings.contains:x:@.arguments/*/from
         .:":"
   .lambda
      .channel
      .to
      .from
      strings.split:x:@.arguments/*/to
         .:":"
      set-value:x:@.channel
         get-value:x:@strings.split/0
      set-value:x:@.to
         get-value:x:@strings.split/1
      strings.split:x:@.arguments/*/from
         .:":"
      set-value:x:@.from
         get-value:x:@strings.split/1
      unwrap:x:+/*/*
      add:x:@.exe/*/signal
         .
            to:x:@.from
            from:x:@.to
            channel:x:@.channel
