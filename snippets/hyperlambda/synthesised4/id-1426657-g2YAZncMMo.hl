
/*
 * // This Hyperlambda code checks two conditions using logical operators [and] and [or]. It evaluates to true if either of the following is true: 1. The [not-exists] slot checks if the [starts_with] argument is missing, or if the [strings.starts-with] slot confirms that the [.url] node's value starts with the [starts_with] argument. 2. The [not-exists] slot checks if the [class] argument is missing, or if the [strings.contains] slot confirms that the value of the node referenced by the expression contains the [class] argument. Each condition is combined using [or], and both conditions must be true for the overall [and] condition to evaluate to true.
 * // 1. [or] - Combines two conditions, evaluating to true if either condition is true.
 * // 2. [not-exists:x:@.arguments/*/starts_with] - Checks if the [starts_with] argument does not exist.
 * // 3. [strings.starts-with:x:@.url] - Checks if the [.url] node's value starts with the specified argument.
 * // 4. [get-value:x:@.arguments/*/starts_with] - Retrieves the value of the [starts_with] argument.
 * // 5. [or] - Combines two conditions, evaluating to true if either condition is true.
 * // 6. [not-exists:x:@.arguments/*/class] - Checks if the [class] argument does not exist.
 * // 7. [strings.contains:x:"@.dp/#/*/\\@class"] - Checks if the specified node's value contains the [class] argument.
 * // 8. [get-value:x:@.arguments/*/class] - Retrieves the value of the [class] argument.
 */
and
   or
      not-exists:x:@.arguments/*/starts_with
      strings.starts-with:x:@.url
         get-value:x:@.arguments/*/starts_with
   or
      not-exists:x:@.arguments/*/class
      strings.contains:x:"@.dp/#/*/\\@class"
         get-value:x:@.arguments/*/class
