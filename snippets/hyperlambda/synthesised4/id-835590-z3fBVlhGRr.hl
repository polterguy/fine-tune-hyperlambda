
/*
 * // This Hyperlambda code demonstrates how to perform a left join on an SQLite database using the [data.read] slot.
 * // It joins the "Employees" table with itself, aliasing the second instance as "ReportsTo" to match employees with their managers.
 * // The [join] slot specifies a left join type, linking the "ReportsTo" column in the "Employees" table to the "EmployeeID" in the "ReportsTo" alias.
 * // The [columns] slot includes a [distinct_functor] with an alias, and the [where] slot is prepared for additional conditions.
 * // 1. [data.read] - Initiates a read operation from the database.
 * // 2. [database-type] - Specifies the database type as SQLite.
 * // 3. [table] - Indicates the primary table for the operation, "Employees".
 * // 4. [join] - Defines a left join with the "Employees" table, aliased as "ReportsTo".
 * // 5. [as] - Aliases the joined table as "ReportsTo".
 * // 6. [type] - Specifies the join type as left.
 * // 7. [on] - Sets the condition for the join, matching "ReportsTo" with "EmployeeID".
 * // 8. [columns] - Lists the columns to be selected, using a distinct functor.
 * // 9. [as] - Aliases the result of the distinct functor.
 * // 10. [where] - Prepares for filtering conditions in the query.
 */
data.read
   database-type:sqlite
   table:Employees
      join:Employees
         as:ReportsTo
         type:left
         on
            and
               Employees.ReportsTo:ReportsTo.EmployeeID
   columns
      distinct_functor
         as:.
   where
      and
