
// This Hyperlambda code checks if the [databaseType] argument is not equal to "mysql". If true, it appends a foreign key reference to the [sql] node using the [foreignTable] and [foreignField] arguments. It further checks if [cascading] is true, and if so, appends "on delete cascade" to the SQL statement. The code uses [neq] for inequality, [strings.concat] for string concatenation, and [if] for conditional logic.
if
   neq:x:@.arguments/*/databaseType
      .:mysql
   .lambda
      set-value:x:@.sql
         strings.concat
            get-value:x:@.sql
            .:" references "
            get-value:x:@.arguments/*/foreignTable
            .:(
            get-value:x:@.arguments/*/foreignField
            .:)
      if
         and
            exists:x:@.arguments/*/cascading
            not-null:x:@.arguments/*/cascading
            eq
               get-value:x:@.arguments/*/cascading
               .:bool:true
         .lambda
            set-value:x:@.sql
               strings.concat
                  get-value:x:@.sql
                  .:" on delete cascade"
