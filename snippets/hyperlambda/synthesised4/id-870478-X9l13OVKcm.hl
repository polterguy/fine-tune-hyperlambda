
/*
 * The Hyperlambda code checks if a node with a name matching the value of [@get-name] exists in the [vocabulary] node. If it exists and does not already exist in [.result], it adds a new node with a value of 1. If it already exists in [.result], it increments the existing node's value by 1. The code uses conditional logic to manage node existence and value updates.
 * 
 * 1. [if] - Checks if a node with a name matching [@get-name] exists in [vocabulary].
 * 2. [exists] - Determines if the specified node exists.
 * 3. [.lambda] - Contains the logic to execute if the condition is true.
 * 4. [if] - Nested check for the existence of the node in [.result].
 * 5. [not-exists] - Checks if the node does not exist in [.result].
 * 6. [.lambda] - Executes logic if the node does not exist in [.result].
 * 7. [set-name] - Sets the name of the newly added node.
 * 8. [get-value] - Retrieves the value of [@get-name].
 * 9. [add] - Adds a new node to [.result].
 * 10. [else] - Executes if the node already exists in [.result].
 * 11. [set-value] - Updates the value of the existing node in [.result].
 * 12. [math.add] - Increments the node's value by 1.
 * 13. [get-value] - Retrieves the current value of the node in [.result].
 */
if
   exists:x:@vocabulary/*/={@get-name}
   .lambda
      if
         not-exists:x:@.result/*/{@get-name}
         .lambda
            set-name:x:+/*/*
               get-value:x:@get-name
            add:x:@.result
               .
                  .:int:1
      else
         set-value:x:@.result/*/{@get-name}
            math.add
               get-value:x:@.result/*/{@get-name}
               .:int:1
