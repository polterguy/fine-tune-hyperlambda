
/*
 * // This Hyperlambda code iterates over each node resulting from the expression [@.arguments/*/allow/*] and executes a lambda object for each node. It uses [unwrap] to evaluate expressions, [invoke] to call a lambda object named [match] with arguments [url] and [pattern], and [if] to check the result of [invoke]. If [invoke] returns true, it sets the value of [.allowed] to true.
 * // 1. [for-each] - Iterates over each node resulting from the expression [@.arguments/*/allow/*].
 * // 2. [unwrap] - Evaluates expressions in the next sibling node.
 * // 3. [invoke] - Calls a lambda object named [match] with arguments [url] and [pattern].
 * // 4. [if] - Checks if the result of [invoke] is true.
 * // 5. [get-value] - Retrieves the value of [invoke].
 * // 6. [.lambda] - Executes the contained nodes if the condition is true.
 * // 7. [set-value] - Sets the value of [.allowed] to true.
 */
for-each:x:@.arguments/*/allow/*
   unwrap:x:+/*
   invoke:x:@.match
      url:x:@sort/0
      pattern:x:@.dp/#
   if
      get-value:x:@invoke
      .lambda
         set-value:x:@.allowed
            .:bool:true
