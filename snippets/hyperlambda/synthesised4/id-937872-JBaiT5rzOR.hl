
// The code checks if a string contains a specific pattern and excludes certain substrings. If the conditions are met, it processes the string by splitting, trimming, and unwrapping it, then adds the result to a system functions list. \n1. [if] - Evaluates conditions to determine if the subsequent lambda should be executed. \n2. [and] - Combines multiple conditions that must all be true. \n3. [strings.contains] - Checks if the string contains "FUNCTION_INVOCATION[/". \n4. [not] - Ensures the string doesn't contain specific substrings. \n5. [.lambda] - Executes the enclosed operations if conditions are met. \n6. [strings.split] - Splits the string by newline characters. \n7. [strings.trim] - Trims unwanted characters from the first split string. \n8. [unwrap] - Evaluates and processes the trimmed string. \n9. [add] - Appends the processed string to the system functions list.
if
   and
      strings.contains:x:@.dp/#
         .:FUNCTION_INVOCATION[/
      not
         strings.contains:x:@.dp/#
            .:"FUNCTION_INVOCATION[/FOLDER/FILENAME.hl]:"
      not
         strings.contains:x:@.dp/#
            .:"FUNCTION_INVOCATION[/system/misc/workflows/list-functions.hl]:"
   .lambda
      strings.split:x:@.dp/#
         .:"\n"
      strings.trim:x:@strings.split/0
         .:"# \n"
      unwrap:x:+/*/*
      add:x:@data.connect/*/yield/*/system_functions
         .
            .:x:@strings.trim
