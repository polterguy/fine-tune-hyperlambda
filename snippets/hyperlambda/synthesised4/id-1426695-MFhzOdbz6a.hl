
/*
 * This Hyperlambda code checks if two configurations are not equal and if true, it validates a reCAPTCHA response. It first ensures that two configurations retrieved by [config.get] are not equal using [neq]. If both conditions are true, it executes a lambda that validates the presence of a reCAPTCHA response using [validators.mandatory]. It retrieves the reCAPTCHA secret from the configuration using [config.get] and validates the reCAPTCHA response with [validators.recaptcha], specifying a minimum score of 0.3, and using the site-key and secret from the configuration. 
 * 
 * 1. [if] - Checks if the conditions specified in the [and] block are true.
 * 2. [and] - Logical AND to combine multiple conditions.
 * 3. [neq] - Checks if the value from [config.get] is not equal to a specified value.
 * 4. [neq] - Checks if another value from [config.get] is not equal to a specified value.
 * 5. [.lambda] - Executes a block of code if the conditions are true.
 * 6. [validators.mandatory] - Ensures that the reCAPTCHA response argument is provided.
 * 7. [config.get] - Retrieves the reCAPTCHA secret from the configuration.
 * 8. [validators.recaptcha] - Validates the reCAPTCHA response with specified parameters.
 * 9. [min] - Sets the minimum score for the reCAPTCHA validation.
 * 10. [site-key] - Specifies the site key for reCAPTCHA validation.
 * 11. [secret] - Specifies the secret key for reCAPTCHA validation.
 */
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
   .lambda
      validators.mandatory:x:@.arguments/*/recaptcha_response
      config.get:"magic:auth:recaptcha:secret"
      validators.recaptcha:x:@.arguments/*/recaptcha_response
         min:decimal:0.3
         site-key:x:@config.get/@config.get
         secret:x:@config.get
