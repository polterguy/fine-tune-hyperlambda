
/*
 * This Hyperlambda code connects to a database and updates records in the "ml_requests" table. It adds values and conditions from the [.arguments] node to the update operation. If no records are updated, it sets the response status to 404 and returns "Record not found". Otherwise, it sets the response status to 202 and yields the number of affected records. 
 * 
 * 1. [data.connect] - Connects to a database.
 * 2. [add] - Adds nodes to the update operation.
 * 3. [get-nodes] - Retrieves nodes from [.arguments].
 * 4. [data.update] - Updates records in the "ml_requests" table.
 * 5. [table] - Specifies the table to update.
 * 6. [values] - Holds the values to update.
 * 7. [where] - Holds the conditions for the update.
 * 8. [if] - Checks if no records were updated.
 * 9. [eq] - Compares the update result to zero.
 * 10. [get-value] - Retrieves the update result.
 * 11. [response.status.set] - Sets the HTTP response status.
 * 12. [return] - Returns a result if no records are found.
 * 13. [yield] - Returns the number of affected records.
 */
data.connect:[generic|magic]
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]
   data.update
      table:ml_requests
      values
      where
         and
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found
   response.status.set:202
   yield
      affected:x:@data.update
