
/*
 * 1. `@hyper2lambda` - This iterator searches for the first node named "hyper2lambda" in the current context. It starts from the current node and moves upwards and sideways in the hierarchy until it finds a node with this name. This is useful when you want to locate a specific node by name within a complex structure.
 * 
 * 2. `**` - This iterator retrieves all descendant nodes of the current result set, including the node itself where it starts, using a "breadth first" algorithm. It is useful for performing operations on an entire subtree of nodes, or when you need to search deeply nested structures.
 * 
 * 3. `[yield|return|return-nodes]` - This iterator filters the result set to include only nodes with names "yield", "return", or "return-nodes". The pipe `|` acts as an OR operator, allowing multiple names to be specified. This is particularly useful when you are interested in nodes that are responsible for returning values or results, such as in the context of dynamic slot execution or when processing the output of a Hyperlambda file.
 * 
 * Potential use cases for this expression include searching for all return-related nodes within a specific section of a Hyperlambda file or structure, which could be useful for debugging or analyzing the flow of data and control in a complex Hyperlambda application.
 */

.:x:@hyper2lambda/**/[yield|return|return-nodes]