
// This Hyperlambda code checks if a specific node exists and is not null, and then performs a series of string manipulations. It splits a string by a delimiter, trims the end, and adds it to a list if it doesn't already exist. The [else-if] condition ensures that the operations only occur if the initial conditions are met. The code uses slots like [exists], [not-null], [neq], [strings.split], and [strings.trim-end] to achieve its functionality.
else-if
   and
      exists:x:"@.dp/#/*/\\@href/[0,1]"
      not-null:x:"@.dp/#/*/\\@href/[0,1]"
      neq:x:"@.dp/#/*/\\@href/[0,1]"
         .:#
      neq:x:"@.dp/#/*/\\@href/[0,1]"
         .:
   .lambda
      strings.split:x:"@.dp/#/*/\\@href/[0,1]"
         .:#
      strings.trim-end:x:@strings.split/0
         .:/
      if
         not-exists:x:"@.urls/*/\"{@strings.split/0}\""
         .lambda
            unwrap:x:+/*/*
            add:x:@.urls
               .
                  .:x:@strings.trim-end
