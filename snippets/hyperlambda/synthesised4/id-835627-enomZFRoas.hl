
// This Hyperlambda code demonstrates how to perform SQL joins using the [data.read] slot with a SQLite database. It specifies a left join between the "Products" table and the "Categories" and "Suppliers" tables. The [join] slots define the join conditions and types, while the [columns] slot specifies the columns to be selected, using a distinct functor. The [where] slot is prepared for additional filtering conditions. The code is structured to facilitate complex SQL queries by leveraging Hyperlambda's semantic approach to SQL generation.
data.read
   database-type:sqlite
   table:Products
      join:Categories
         as:ProductID
         type:left
         on
            and
               Products.ProductID:ProductID.CategoryID
      join:Suppliers
         as:SupplierID
         type:left
         on
            and
               Products.SupplierID:SupplierID.SupplierID
   columns
      distinct_functor
         as:.
   where
      and
