
/*
 * This Hyperlambda code checks if the [learning_rate_multiplier] argument exists and is not null. If both conditions are true, it adds the [learning_rate_multiplier] node to the [payload] node within the [http.post] slot located in the [data.connect] path. The [if] slot evaluates the conditions using the [and] slot, which combines the results of the [exists] and [not-null] slots. If the conditions are met, the [.lambda] block is executed, using the [add] slot to append the node. 
 * 
 * 1. [if] - Evaluates the condition and executes its [.lambda] child if true.
 * 2. [and] - Combines multiple conditions, ensuring all must be true.
 * 3. [exists] - Checks if the [learning_rate_multiplier] node exists.
 * 4. [not-null] - Checks if the [learning_rate_multiplier] node is not null.
 * 5. [.lambda] - Contains the code to execute if the [if] condition is true.
 * 6. [add] - Appends the [learning_rate_multiplier] node to the specified [payload] path.
 * 7. [get-nodes] - Retrieves the [learning_rate_multiplier] node to be added.
 */
if
   and
      exists:x:@.arguments/*/learning_rate_multiplier
      not-null:x:@.arguments/*/learning_rate_multiplier
   .lambda
      add:x:@data.connect/*/http.post/[1,2]/*/payload
         get-nodes:x:@.arguments/*/learning_rate_multiplier
