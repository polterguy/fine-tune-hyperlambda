
// 1. `@.sql`: This iterator looks for the first ancestor node with the name "sql". It starts from the current node and moves upwards in the hierarchy until it finds a node named "sql". This is useful when you need to reference a specific node higher up in the hierarchy, such as when you have a SQL query or command stored in a node named "sql" and you want to access or manipulate it from a nested context. Potential use cases include dynamically modifying or executing SQL commands stored in a Hyperlambda structure.

.:x:@.sql