
/*
 * This Hyperlambda code snippet demonstrates how to perform a SQL query using a SQLite database connection. It reads data from the "activities" table and performs a left join with the "clients" table, using "client_id" as an alias. The query selects specific columns from both tables and includes a "where" clause for additional filtering. The [join] slot specifies the join type and condition, while the [columns] slot lists the columns to be retrieved. The [where] slot is prepared for further conditions to be added.
 * 
 * 1. [data.read] - Initiates a database read operation.
 * 2. [database-type] - Specifies the database type as SQLite.
 * 3. [table] - Indicates the primary table to query, "activities".
 * 4. [join] - Specifies a left join with the "clients" table.
 * 5. [as] - Sets an alias for the joined table as "client_id".
 * 6. [type] - Defines the join type as "left".
 * 7. [on] - Specifies the join condition.
 * 8. [and] - Combines multiple join conditions.
 * 9. [columns] - Lists the columns to be selected from the tables.
 * 10. [where] - Prepares a condition for filtering results.
 */
data.read
   database-type:sqlite
   table:activities
      join:clients
         as:client_id
         type:left
         on
            and
               activities.client_id:client_id.client_id
   columns
      activities.activity_id
      activities.client_id
      activities.type
      activities.date
      activities.notes
      client_id.name
         as:client_id.name
   where
      and
