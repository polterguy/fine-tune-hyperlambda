
// This Hyperlambda code connects to a database and deletes records from the "actor" table based on conditions specified in the [.arguments] node. It uses [data.connect] to establish a connection, [add] to append conditions to the [where] clause, and [data.delete] to perform the deletion. The [yield] slot returns the number of affected rows. The code is designed for a SQLite database and dynamically constructs the [where] clause using arguments.
data.connect:[generic|sakila]
   database-type:sqlite
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*
   data.delete
      database-type:sqlite
      table:actor
      where
         and
   yield
      affected:x:@data.delete
