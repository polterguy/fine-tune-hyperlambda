
/*
 * 1. `..` - This iterator retrieves the root node of the currently executed Hyperlambda. It is useful when you need to access nodes at the top level of the hierarchy, regardless of the current node's position within the structure.
 * 
 * 2. `*` - This iterator retrieves all children nodes of its previous result set. In this context, it retrieves all children of the root node, allowing access to any top-level nodes.
 * 
 * 3. `image.chart` - This iterator filters the previous result set to include only nodes with the name "image.chart". It is used to narrow down the node set to specific nodes of interest, in this case, nodes named "image.chart".
 * 
 * 4. `*` - Again, this iterator retrieves all children nodes of its previous result set. Here, it retrieves all children of the "image.chart" nodes, allowing access to any sub-nodes within these nodes.
 * 
 * 5. `bars` - This iterator filters the previous result set to include only nodes with the name "bars". It is used to further narrow down the node set to specific nodes of interest, in this case, nodes named "bars" within the "image.chart" nodes.
 */

.:x:../*/image.chart/*/bars