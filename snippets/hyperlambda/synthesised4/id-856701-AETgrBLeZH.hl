
/*
 * The code checks if the value of [.token] does not end with the value of [.endswith]. If this condition is true, it throws an exception with a message "Invalid CAPTCHA token. Workload requirements of endpoint was not met." and sets the HTTP status code to 400, making the error message public. The [not] slot negates the result of [strings.ends-with], and the [throw] slot raises the exception. 
 * 
 * 1. [if] - Initiates a conditional check.
 * 2. [not] - Negates the result of its child condition.
 * 3. [strings.ends-with] - Checks if [.token] ends with [.endswith].
 * 4. [.lambda] - Executes the following block if the condition is true.
 * 5. [throw] - Raises an exception with a custom message and status code.
 * 6. [status] - Sets the HTTP status code to 400.
 * 7. [public] - Makes the error message public.
 */
if
   not
      strings.ends-with:x:@.token
         get-value:x:@.endswith
   .lambda
      throw:Invalid CAPTCHA token. Workload requirements of endpoint was not met.
         status:int:400
         public:bool:true
