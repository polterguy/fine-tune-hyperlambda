
/*
 * This Hyperlambda code checks if a node named [hyperlambda] exists within [.arguments] and is not empty or null. If these conditions are met, it converts the Hyperlambda text to a lambda object using [hyper2lambda] and adds it to [.lambda]. It then updates the [tasks.update] node with the newly created lambda object. 
 * 
 * 1. [if] - Checks if certain conditions are true.
 * 2. [and] - Combines multiple conditions that must all be true.
 * 3. [exists] - Checks if a node named [hyperlambda] exists in [.arguments].
 * 4. [not] - Inverts the result of its child condition.
 * 5. [eq] - Compares values to check for equality.
 * 6. [get-value] - Retrieves the value of a specified node.
 * 7. [.lambda] - Executes its children nodes if the [if] condition is true.
 * 8. [add] - Adds nodes or values to a specified location.
 * 9. [hyper2lambda] - Converts Hyperlambda text to a lambda object.
 * 10. [get-nodes] - Retrieves a set of nodes.
 */
if
   and
      exists:x:@.arguments/*/hyperlambda
      not
         eq
            get-value:x:@.arguments/*/hyperlambda
            .
      not
         eq
            get-value:x:@.arguments/*/hyperlambda
            .:
   .lambda
      add:x:@.lambda/@.lambda
         hyper2lambda:x:@.arguments/*/hyperlambda
      add:x:../*/tasks.update
         get-nodes:x:@.lambda/@.lambda
