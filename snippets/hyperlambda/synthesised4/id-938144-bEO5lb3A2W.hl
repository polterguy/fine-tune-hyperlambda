
// This Hyperlambda code establishes a connection to the "chinook" SQLite database and deletes records from the "Customer" table based on conditions specified in the arguments. It then signals a "chinook.customer.delete" event through sockets, passing along the same arguments, and returns the number of affected rows from the delete operation. Key slots include [data.connect] for establishing the database connection, [data.delete] for deleting records, [sockets.signal] for broadcasting an event, and [unwrap] for evaluating expressions.
data.connect:[generic|chinook]
   database-type:sqlite
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*
   data.delete
      database-type:sqlite
      table:Customer
      where
         and
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:chinook.customer.delete
      args
      roles:enterprise,guest
   unwrap:x:+/*
   return
      affected:x:@data.delete
