
/*
 * The code iterates over each node resulting from splitting a string, checking if each node starts with "uddg=". If true, it sets a flag to true and decodes the URL-encoded part of the string after the "=" character, storing the result in a separate node. 
 * 
 * 1. [for-each] - Iterates over each node resulting from the split operation.
 * 2. [if] - Checks if the current node starts with "uddg=".
 * 3. [strings.starts-with] - Determines if the current node's value begins with "uddg=".
 * 4. [strings.concat] - Concatenates "uddg" and "=" to form the string to check against.
 * 5. [set-value] - Sets the [.found] node's value to true if the condition is met.
 * 6. [strings.split] - Splits the current node's value at the "=" character.
 * 7. [strings.url-decode] - Decodes the URL-encoded string after the "=".
 * 8. [set-value] - Stores the decoded string in the [.cur] node.
 */
for-each:x:@strings.split/*
   if
      strings.starts-with:x:@.dp/#
         strings.concat
            .:uddg
            .:=
      .lambda
         set-value:x:@.found
            .:bool:true
         strings.split:x:@.dp/#
            .:=
         set-value:x:@.cur
            strings.url-decode:x:@strings.split/1
