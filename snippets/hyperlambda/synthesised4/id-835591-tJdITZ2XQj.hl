
/*
 * The code demonstrates how to perform a SQL query using Hyperlambda with a left join on the "Employees" table, aliasing it as "ReportsTo". It aggregates data using a specified function, groups the results by a specified column, and applies a condition with the "where" clause. The query is executed on an SQLite database.
 * 
 * 1. [data.read] - Initiates a read operation from a database.
 * 2. [database-type] - Specifies the type of database, here set to SQLite.
 * 3. [table] - Indicates the primary table to query, "Employees".
 * 4. [join] - Performs a left join on the "Employees" table, aliasing it as "ReportsTo".
 * 5. [type] - Specifies the join type, which is left in this case.
 * 6. [on] - Defines the condition for the join, matching "Employees.ReportsTo" with "ReportsTo.EmployeeID".
 * 7. [columns] - Lists columns to be retrieved, including an aggregated result.
 * 8. [aggregate_functor] - Placeholder for an aggregate function, with its result aliased.
 * 9. [where] - Placeholder for conditions to filter the query results.
 * 10. [group] - Specifies the column to group the results by.
 */
data.read
   database-type:sqlite
   table:Employees
      join:Employees
         as:ReportsTo
         type:left
         on
            and
               Employees.ReportsTo:ReportsTo.EmployeeID
   columns
      aggregate_functor
         as:result
   where
      and
   group
      group_column
