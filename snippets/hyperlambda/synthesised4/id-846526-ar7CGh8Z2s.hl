
// This Hyperlambda code checks if the value of [.no] is equal to 0. If true, it constructs a SQL CASE statement using [strings.concat] to append various parts, including field lengths and replacements, to the [.sql] node. The resulting SQL checks if a pattern exists within a field, returning 1 if true, otherwise 0. The code uses [set-value] to update [.sql] with this concatenated string.
if
   eq:x:@.no
      .:int:0
   .lambda
      set-value:x:@.sql
         strings.concat:x:@.sql
            get-value:x:@.sql
            .:" CASE WHEN ((length("
            get-value:x:@.fields
            .:) - length(replace(lower(
            get-value:x:@.fields
            .:), @p
            get-value:x:@.no
            .:", ''))) / length(@p"
            get-value:x:@.no
            .:)) > 0 THEN 1 ELSE 0 END
