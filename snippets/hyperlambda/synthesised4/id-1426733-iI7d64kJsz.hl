
/*
 * This Hyperlambda code checks if the length of a completion string is greater than a specified threshold. If true, it adds a type to an argument list, signals a snippet creation event, and constructs a string for data comparison. It then reads from a database table to check for existing entries with matching type or completion. If no match is found, it optionally appends a URL to the completion and inserts a new record. If a match is found with a common prompt, it increments a counter. If the prompt is not common, it updates the database entry to mark the prompt as common. 
 * 
 * 1. [if] - Checks if the length of a completion string is greater than a threshold.
 * 2. [mt] - Compares the length of the completion string with the threshold.
 * 3. [strings.length] - Gets the length of the completion string.
 * 4. [get-value] - Retrieves the threshold value.
 * 5. [.lambda] - Executes if the condition is true.
 * 6. [add] - Adds a type to an argument list.
 * 7. [try-signal] - Signals a snippet creation event.
 * 8. [strings.concat] - Constructs a string for data comparison.
 * 9. [data.read] - Reads from a database table to check for existing entries.
 * 10. [if] - Checks if no matching entry is found.
 * 11. [not-exists] - Checks for non-existence of data.
 * 12. [.lambda] - Executes if no match is found.
 * 13. [if] - Optionally appends a URL to the completion.
 * 14. [set-value] - Sets the completion with the appended URL.
 * 15. [data.create] - Inserts a new record into the database.
 * 16. [else-if] - Checks if a match is found with a common prompt.
 * 17. [eq] - Compares the prompt with "Common".
 * 18. [.lambda] - Executes if the prompt is common.
 * 19. [math.increment] - Increments a counter for existing entries.
 * 20. [else-if] - Checks if the prompt is not common.
 * 21. [not] - Negates the condition.
 * 22. [eq] - Compares the prompt with the existing prompt.
 * 23. [.lambda] - Executes if the prompt is not common.
 * 24. [math.increment] - Increments a counter for similar entries.
 * 25. [data.update] - Updates the database entry to mark the prompt as common.
 */
if
   mt
      strings.length:x:@.dp/#/*/completion
      get-value:x:@.arguments/*/threshold
   .lambda
      add:x:+
         get-nodes:x:@.arguments/*/type
      try-signal:magic.ai.can-create-snippet
      strings.concat
         get-value:x:@.dp/#/*/completion
         .:@"
"
         .:@"
"
         .:This information was taken from [this URL](
         .:%
      data.read
         table:ml_training_snippets
         columns
            id
            prompt
            completion
            uri
         where
            and
               type.eq:x:@.arguments/*/type
               or
                  completion.eq:x:@.dp/#/*/completion
                  completion.like:x:@strings.concat
      if
         not-exists:x:@data.read/*
         .lambda
            if:x:@.arguments/*/insert_url
               set-value:x:@.dp/#/*/completion
                  strings.concat
                     get-value:x:@.dp/#/*/completion
                     .:@"
"
                     .:@"
"
                     .:This information was taken from [this URL](
                     get-value:x:@.arguments/*/url
                     .:)
            data.create
               table:ml_training_snippets
               values
                  type:x:@.arguments/*/type
                  uri:x:@.arguments/*/url
                  prompt:x:@.dp/#/*/prompt
                  completion:x:@.dp/#/*/completion
                  meta:AINIRO-Website-Crawler
      else-if
         eq:x:@data.read/0/*/prompt
            .:Common
         .lambda
            math.increment:x:@.already-exists
      else-if
         not
            eq:x:@data.read/*/*/prompt
               get-value:x:@.dp/#/*/prompt
         .lambda
            math.increment:x:@.similar
            data.update
               table:ml_training_snippets
               values
                  prompt:Common
               where
                  and
                     id.eq:x:@data.read/0/*/id
