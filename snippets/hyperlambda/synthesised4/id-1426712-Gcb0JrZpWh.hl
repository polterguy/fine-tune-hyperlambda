
/*
 * This Hyperlambda code checks if the "finish_reason" node exists and is not null within a JSON converted to a lambda object. If both conditions are true, it sets the value of the [.finish_reason] node to the value of "finish_reason" from the JSON, unwraps the next node, and sends a signal through sockets with the "finish_reason" as an argument. 
 * 
 * 1. [if] - Initiates a conditional check.
 * 2. [and] - Combines two conditions that must both be true.
 * 3. [exists] - Checks if the "finish_reason" node exists.
 * 4. [not-null] - Checks if the "finish_reason" node is not null.
 * 5. [.lambda] - Executes the following nodes if conditions are met.
 * 6. [set-value] - Sets the value of [.finish_reason].
 * 7. [get-value] - Retrieves the value of "finish_reason" from the JSON.
 * 8. [unwrap] - Evaluates the next node.
 * 9. [sockets.signal] - Sends a signal through sockets.
 * 10. [args] - Specifies arguments for the signal.
 * 11. [finish_reason] - Argument for the signal, set to the value of [.finish_reason].
 */
if
   and
      exists:x:@json2lambda/*/choices/0/*/finish_reason
      not-null:x:@json2lambda/*/choices/0/*/finish_reason
   .lambda
      set-value:x:@.finish_reason
         get-value:x:@json2lambda/*/choices/0/*/finish_reason
      unwrap:x:+/*/*
      sockets.signal:x:@.session
         args
            finish_reason:x:@.finish_reason
