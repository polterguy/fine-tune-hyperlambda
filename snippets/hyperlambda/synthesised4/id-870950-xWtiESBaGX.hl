
// This Hyperlambda code iterates over a list of files, checking if each file ends with a ".sql" extension. If true, it loads the file and attempts to execute it as a database migration script. It connects to the database specified in the arguments, and if the database type is "mssql", it uses "mssql.execute-batch" for execution. Upon successful execution, it logs an info message. If an error occurs during execution, it logs an error message and sets the result to false. The code uses slots like [for-each], [if], [strings.ends-with], [try], [.catch], [set-name], and [set-value].
for-each:x:@io.file.list/*
   if
      strings.ends-with:x:@.dp/#
         .:.sql
      .lambda
         io.file.load:x:@.dp/#
         try
            data.connect:x:@.arguments/*/database
               if
                  eq
                     get-value:x:@.database-type
                     .:mssql
                  .lambda
                     set-name:x:@data.connect/*/data.execute
                        .:mssql.execute-batch
               data.execute:x:@io.file.load
               log.info:Database migration script successfully executed
                  script:x:@.dp/#
         .catch
            log.error:Something went wrong as we tried to execute plugin database migration script
               script:x:@.dp/#
               error:x:@.arguments/*/message
            set-value:x:@.result
               .:bool:false
