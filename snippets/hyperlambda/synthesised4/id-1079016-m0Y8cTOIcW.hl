
/*
 * 1. `@.outgoing`: This iterator searches for the first node with the name "outgoing" that is either a sibling or an ancestor of the current node. It starts from the current node's position in the hierarchy and moves upwards or sideways to find the node. This is useful when you need to access a node that is not a direct child but is still relevant to the current context, such as when managing data flow or dependencies in a hierarchical structure. 
 * 
 * Potential use cases:
 * - Accessing configuration or settings nodes that are shared among multiple nodes.
 * - Retrieving a node that contains metadata or status information relevant to the current operation.
 */

.:x:@.outgoing