
/*
 * This Hyperlambda code snippet demonstrates how to use the [data.create] slot to insert a new record into the "ml_requests" table. It specifies the table name and a set of values to be inserted, which are dynamically retrieved from the arguments and signals. The values include "type", "prompt", "completion", "finish_reason", "session", "user_id", and "referrer". The slot ensures that the data is inserted safely, preventing SQL injection attacks by using parameters for dynamic values.
 * 
 * 1. [data.create] - Initiates the creation of a new record in the specified table.
 * 2. [table] - Specifies the name of the table where the record will be inserted.
 * 3. [values] - Contains the fields and their corresponding values to be inserted into the table.
 * 4. [type] - Retrieves the value for the "type" field from the arguments.
 * 5. [prompt] - Retrieves the value for the "prompt" field from the arguments.
 * 6. [completion] - Retrieves the value for the "completion" field from the signal's cached data.
 * 7. [finish_reason] - Sets a static value "cached" for the "finish_reason" field.
 * 8. [session] - Retrieves the value for the "session" field from the arguments.
 * 9. [user_id] - Retrieves the value for the "user_id" field from the arguments.
 * 10. [referrer] - Retrieves the value for the "referrer" field from the arguments.
 */
data.create
   table:ml_requests
   values
      type:x:@.arguments/*/type
      prompt:x:@.arguments/*/prompt
      completion:x:@signal/*/cached
      finish_reason:cached
      session:x:@.arguments/*/session
      user_id:x:@.arguments/*/user_id
      referrer:x:@.arguments/*/referrer
