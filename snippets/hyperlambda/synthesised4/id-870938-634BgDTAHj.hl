
// This Hyperlambda code iterates through a list of arguments, checking if each argument starts with ":x:". If it does, it extracts a substring and converts it to a type 'x'. For other arguments, it checks their type using a switch statement and converts them accordingly. If the type is 'hyperlambda', it adds a node with the converted Hyperlambda code. The code demonstrates conditional logic and type conversion using [for-each], [if], [switch], and [case] slots.
for-each:x:@.arguments/*/args/**
   if
      strings.starts-with:x:@.dp/#
         .:":x:"
      .lambda
         strings.substring:x:@.dp/#
            .:int:3
         set-x:x:@.dp/#
            convert:x:@strings.substring
               type:x
   else
      get-name:x:@.dp/#
      switch:x:@.action/*/.arguments/*/{@get-name}/*/type
         case:long
         case:decimal
         case:int
         case:float
         case:double
            set-value:x:@.dp/#
               convert:x:@.dp/#
                  type:x:@.action/*/.arguments/*/{@get-name}/*/type
         case:hyperlambda
            add:x:@.dp/#
               hyper2lambda:x:@.dp/#
                  comments:true
            set-value:x:@.dp/#
