
// This Hyperlambda code connects to a SQLite database named "northwind" and performs a data read operation on the "CustomerDemographics" table. It dynamically manipulates nodes to set up SQL query parameters like grouping, aggregation, ordering, and limits based on input arguments. The code constructs a query with an aggregate function, groups results by a specified column, and returns the query results. Key slots include [data.connect] for database connection, [set-name] and [set-value] for node manipulation, and [data.read] for executing the query.
data.connect:[generic|northwind]
   database-type:sqlite
   set-name:x:@data.connect/*/data.read/*/group/*/group_column
      get-value:x:@.arguments/*/group_column
   set-name:x:+/*/*
      get-value:x:@.arguments/*/group_column
   insert-before:x:@data.connect/*/data.read/*/columns/0
      .
         group_column
   set-value:x:@data.connect/*/data.read/*/columns/1/*/as
      get-value:x:@.arguments/*/aggregate_function
   remove-nodes:x:@.arguments/*/group_column
   add:x:@data.connect/*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   set-name:x:./*/data.read/*/columns/*/aggregate_functor
      strings.concat
         get-value:x:@.arguments/*/aggregate_function
         .:(
         get-value:x:@.arguments/*/aggregate_column
         .:)
   remove-nodes:x:@.arguments/*/[0,2]
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:CustomerDemographics
      columns
         aggregate_functor
            as:result
      where
         and
      group
         group_column
   return-nodes:x:@data.read/*
