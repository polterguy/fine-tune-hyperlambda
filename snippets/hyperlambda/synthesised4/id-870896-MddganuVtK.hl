
// This Hyperlambda code retrieves data from a database based on specific conditions and processes it into a structured format. It uses [for-each] to iterate over database query results, [add] to append nodes, and [set-name] and [set-value] to manipulate node names and values. The code concatenates strings to build a conversation log and trims unnecessary spaces before adding the final structured data to a node.
for-each:x:@data.select/*
   add:x:@.data
      .
         .
   data.select:"select prompt, completion from ml_requests where user_id = @user_id and questionnaire = 1 and finish_reason = 'questionnaire'"
      @user_id:x:@.dp/#/*/user_id
   for-each:x:@data.select/*
      set-name:x:./*/add/[0,1]/*/*
         get-value:x:@.dp/#/*/prompt
      unwrap:x:+/*/*
      add:x:@.data/0/-
         .
            foo:x:@.dp/#/*/completion
   .conv:
   data.select:select prompt, completion from ml_requests where user_id = @user_id and questionnaire = 0
      @user_id:x:@.dp/#/*/user_id
   for-each:x:@data.select/*
      set-value:x:@.conv
         strings.concat
            get-value:x:@.conv
            get-value:x:@.dp/#/*/prompt
            .:"\n"
            .:"\n"
            get-value:x:@.dp/#/*/completion
            .:"\n"
            .:"\n"
   set-value:x:@.conv
      strings.trim:x:@.conv
   unwrap:x:+/*/*
   add:x:@.data/0/-
      .
         conversation:x:@.conv
