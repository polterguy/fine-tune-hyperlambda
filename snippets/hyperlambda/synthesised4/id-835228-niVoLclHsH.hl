
// This Hyperlambda code processes incoming messages, checking if they start with "data:". If true, it extracts and trims the substring after "data:". If the trimmed string is not empty, it checks if it equals "[DONE]", signaling the session as finished. Otherwise, it converts the string to a lambda object, checking for a "finish_reason" and signaling it if present. If there is content in the delta, it appends it to the result and signals the session with the message content.
if
   and
      exists:x:@.arguments/*/message
      not-null:x:@.arguments/*/message
      strings.starts-with:x:@.arguments/*/message
         .:"data:"
   .lambda
      strings.substring:x:@.arguments/*/message
         .:int:5
      strings.trim:x:@strings.substring
      if
         neq:x:@strings.trim
            .:
         .lambda
            if
               eq:x:@strings.trim
                  .:[DONE]
               .lambda
                  sockets.signal:x:@.session
                     args
                        finished:bool:true
            else
               json2lambda:x:@strings.trim
               if
                  and
                     exists:x:@json2lambda/*/choices/0/*/finish_reason
                     not-null:x:@json2lambda/*/choices/0/*/finish_reason
                  .lambda
                     unwrap:x:+/*/*
                     sockets.signal:x:@.session
                        args
                           finish_reason:x:@json2lambda/*/choices/0/*/finish_reason
               if
                  and
                     not-null:x:@json2lambda/*/choices/0/*/delta/*/content
                     neq:x:@json2lambda/*/choices/0/*/delta/*/content
                        .:
                  .lambda
                     set-value:x:@.result
                        strings.concat
                           get-value:x:@.result
                           get-value:x:@json2lambda/*/choices/0/*/delta/*/content
                     unwrap:x:+/*/*
                     sockets.signal:x:@.session
                        args
                           message:x:@json2lambda/*/choices/0/*/delta/*/content
