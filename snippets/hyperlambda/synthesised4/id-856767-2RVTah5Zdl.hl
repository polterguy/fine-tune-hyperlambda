
/*
 * The code checks if the number of nodes resulting from splitting a string is more than or equal to 20. If true, it removes nodes 15 to 19 from the split result and then joins the remaining nodes into a single string, separated by commas, updating the [.value] node with this new string. 
 * 
 * 1. [if] - Starts a conditional block.
 * 2. [mte] - Checks if the node count is more than or equal to 20.
 * 3. [get-count] - Retrieves the count of nodes from the split result.
 * 4. [.lambda] - Executes the following nodes if the condition is true.
 * 5. [remove-nodes] - Removes nodes 15 to 19 from the split result.
 * 6. [set-value] - Sets the value of [.value] to the joined string.
 * 7. [strings.join] - Joins the split nodes into a string with commas as separators.
 */
if
   mte
      get-count:x:@strings.split/*
      .:int:20
   .lambda
      remove-nodes:x:@strings.split/*/[15,20]
      set-value:x:@.value
         strings.join:x:@strings.split/*
            .:,
