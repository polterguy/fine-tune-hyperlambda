
/*
 * // This Hyperlambda code connects to a SQLite database and performs a complex SQL query with dynamic grouping, aggregation, and ordering. It manipulates nodes to construct the query dynamically based on provided arguments, and then executes a data read operation with joins, aggregation, and grouping. The code returns the result of the query execution.
 * // 1. [data.connect] - Connects to a SQLite database, specifying the database type.
 * // 2. [set-name] - Sets the name of a node to the value of the group column argument.
 * // 3. [insert-before] - Inserts a group column node before the first column in the columns node.
 * // 4. [set-value] - Sets the alias for the aggregate function to the value of the aggregate function argument.
 * // 5. [remove-nodes] - Removes the group column argument node.
 * // 6. [add] - Adds limit and offset nodes to the data read operation.
 * // 7. [remove-nodes] - Removes the limit and offset argument nodes.
 * // 8. [add] - Adds order and direction nodes to the data read operation.
 * // 9. [remove-nodes] - Removes the order and direction argument nodes.
 * // 10. [set-name] - Sets the name of the aggregate function node to a concatenated string of the aggregate function and column.
 * // 11. [remove-nodes] - Removes the first two argument nodes.
 * // 12. [add] - Adds remaining argument nodes to the where clause of the data read operation.
 * // 13. [data.read] - Executes a data read operation with specified joins, columns, and groupings.
 * // 14. [return-nodes] - Returns the result of the data read operation.
 */
data.connect:[generic|northwind]
   database-type:sqlite
   set-name:x:@data.connect/*/data.read/*/group/*/group_column
      get-value:x:@.arguments/*/group_column
   set-name:x:+/*/*
      get-value:x:@.arguments/*/group_column
   insert-before:x:@data.connect/*/data.read/*/columns/0
      .
         group_column
   set-value:x:@data.connect/*/data.read/*/columns/1/*/as
      get-value:x:@.arguments/*/aggregate_function
   remove-nodes:x:@.arguments/*/group_column
   add:x:@data.connect/*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   set-name:x:./*/data.read/*/columns/*/aggregate_functor
      strings.concat
         get-value:x:@.arguments/*/aggregate_function
         .:(
         get-value:x:@.arguments/*/aggregate_column
         .:)
   remove-nodes:x:@.arguments/*/[0,2]
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Orders
         join:Employees
            as:EmployeeID
            type:left
            on
               and
                  Orders.EmployeeID:EmployeeID.EmployeeID
         join:Shippers
            as:ShipVia
            type:left
            on
               and
                  Orders.ShipVia:ShipVia.ShipperID
      columns
         aggregate_functor
            as:result
      where
         and
      group
         group_column
   return-nodes:x:@data.read/*
