
/*
 * This Hyperlambda code checks if the value returned by [data.scalar] is equal to 0. If true, it throws an exception with a message indicating that a function doesn't exist on a type, marking it as a public error with a status code of 400. The [if] slot evaluates the condition, and the [.lambda] block executes the [throw] slot if the condition is met. 
 * 
 * 1. [if] - Evaluates a condition to determine whether to execute its child nodes.
 * 2. [eq] - Compares the value of [data.scalar] to 0.
 * 3. [.lambda] - Contains the code to execute if the condition is true.
 * 4. [throw] - Raises an exception with a specified message and status.
 * 5. [public] - Marks the exception as public.
 * 6. [status] - Sets the HTTP status code for the exception.
 */
if
   eq:x:@data.scalar
      .:long:0
   .lambda
      throw:"That function doesn't exist on type"
         public:bool:true
         status:int:400
