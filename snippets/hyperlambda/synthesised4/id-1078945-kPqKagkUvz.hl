
// 1. `@.invoke`: This iterator starts with an `@`, which means it will search for the first node with the name "invoke" starting from the current node and traversing upwards through its siblings and ancestors. It will stop as soon as it finds the first match. This is useful when you need to find a specific node that is not a direct child but is somewhere higher up in the hierarchy, such as when you want to reference a node that initiates a process or action, like an "invoke" node that might be responsible for triggering a function or slot execution.

.:x:@.invoke