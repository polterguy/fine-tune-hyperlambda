
/*
 * This Hyperlambda code snippet demonstrates how to perform a SQL read operation on the "ml_types" table, selecting specific columns and applying a filter condition. The code specifies the columns to be retrieved from the table and uses a "where" clause to filter the results based on the "type" argument. The "where" clause uses an "and" condition to ensure that only rows with a "type" value equal to the provided argument are selected.
 * 
 * 1. [data.read] - Initiates a read operation from a database table.
 * 2. [table] - Specifies the table "ml_types" from which data is to be read.
 * 3. [columns] - Lists the columns to be retrieved from the "ml_types" table.
 * 4. [where] - Begins the filtering condition for the data read operation.
 * 5. [and] - Combines multiple conditions; in this case, it ensures that the following condition must be true.
 * 6. [type.eq] - Compares the "type" column in the table to the value provided in the "type" argument, filtering the results accordingly.
 */
data.read
   table:ml_types
   columns
      model
      max_tokens
      max_context_tokens
      max_request_tokens
      temperature
      recaptcha
      auth
      supervised
      cached
      prefix
      use_embeddings
      threshold
      vector_model
      contact_us
      lead_email
      api_key
      webhook_incoming
      webhook_outgoing
      webhook_incoming_url
      webhook_outgoing_url
      system_message
      initial_questionnaire
      no_requests
      max_requests
      session_timeout
      search_postfix
      max_function_invocations
      max_session_items
      completion_slot
   where
      and
         type.eq:x:@.arguments/*/type
