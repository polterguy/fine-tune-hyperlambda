
// This code snippet uses a [switch] statement to map various SQL data types to corresponding Hyperlambda types. It evaluates the type of a node and assigns a new type to [.type] based on predefined cases. If none of the cases match, it defaults to setting the type as "string". The [switch] node evaluates the type of a node, and the [case] nodes determine the corresponding Hyperlambda type, updating [.type] accordingly. If no case matches, the [default] node sets [.type] to "string".
switch:x:@.dp/#/*/type
   case:date
   case:datetime
   case:datetime2
   case:datetimeoffset
   case:smalldatetime
   case:time
      set-value:x:@.type
         .:date
   case:numeric
   case:decimal
   case:smallmoney
   case:money
   case:float
   case:real
      set-value:x:@.type
         .:decimal
   case:bigint
   case:smallint
   case:int
   case:tinyint
      set-value:x:@.type
         .:long
   case:bit
      set-value:x:@.type
         .:bool
   case:char
   case:varchar
   case:text
   case:nchar
   case:nvarchar
   case:ntext
   case:binary
   case:image
   case:varbinary
   case:uniqueidentifier
      set-value:x:@.type
         .:string
   case:rowversion
   case:timestamp
      set-value:x:@.type
         .:string
      set-value:x:@.tmp/*/*/automatic
         .:bool:true
   default
      set-value:x:@.type
         .:string
