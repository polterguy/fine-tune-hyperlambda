
// This Hyperlambda code defines a dynamic slot [magic.emails.send] to send templated emails. It validates mandatory arguments like subject, email, template-file, and mime-type, and checks for SMTP server configuration. The code loads an email template, performs substitutions, and logs the email details. It handles attachments and constructs the email message using [mail.smtp.send]. Finally, it logs the success of sending the email and returns true. Key slots include [validators.mandatory], [io.file.load], [strings.replace], [mail.smtp.send], and [log.info].
slots.create:magic.emails.send
   validators.mandatory:x:@.arguments/*/subject
   validators.mandatory:x:@.arguments/*/email
   validators.mandatory:x:@.arguments/*/template-file
   validators.mandatory:x:@.arguments/*/mime-type
   validators.enum:x:@.arguments/*/mime-type
      .:text/plain
      .:text/html
   config.get:"magic:smtp:host"
   if
      eq
         get-value:x:@config.get
         .
      .lambda
         log.error:"Tried to send an email but couldn't since there is no SMTP server configured in your appSettings.json file"
         return-value:bool:false
   if
      not
         io.file.exists:x:@.arguments/*/template-file
      .lambda
         log.error:Email template not found while trying to send template email
            template:x:@.arguments/*/template-file
         return-value:bool:false
   .body
   set-value:x:@.body
      io.file.load:x:@.arguments/*/template-file
   for-each:x:@.arguments/*/substitutes/*
      set-value:x:@.body
         strings.replace:x:@.body
            strings.concat
               .:{{
               get-name:x:@.dp/#
               .:}}
            get-value:x:@.dp/#
   if
      and
         exists:x:@.arguments/*/name
         neq:x:@.arguments/*/name
            .
      .lambda
         set-value:x:@.body
            strings.replace:x:@.body
               .:{{name}}
               get-value:x:@.arguments/*/name
   set-value:x:@.body
      strings.replace:x:@.body
         .:{{email}}
         get-value:x:@.arguments/*/email
   log.info:Attempting to send template email
      email:x:@.arguments/*/email
      name:x:@.arguments/*/name
      subject:x:@.arguments/*/subject
      body:x:@.body
   if
      exists:x:@.arguments/*/attachments/*
      .lambda
         .entity
            entity:multipart/mixed
               entity:x:@.arguments/*/mime-type
                  content:x:@.body
         add:x:@.entity/*
            get-nodes:x:@.arguments/*/attachments/*
         remove-nodes:x:../*/mail.smtp.send/*/message/*/entity
         add:x:../*/mail.smtp.send/*/message
            get-nodes:x:@.entity/*
   if
      and
         exists:x:@.arguments/*/name
         neq:x:@.arguments/*/name
            .
      .lambda
         set-name:x:../*/mail.smtp.send/*/message/*/to/0
            get-value:x:@.arguments/*/name
   unwrap:x:+/**
   mail.smtp.send
      message
         to
            .
               email:x:@.arguments/*/email
         subject:x:@.arguments/*/subject
         entity:x:@.arguments/*/mime-type
            content:x:@.body
   log.info:Template email successfully sent
      email:x:@.arguments/*/email
      template:x:@.arguments/*/template-file
   return-value:bool:true
