
// This Hyperlambda code checks if a public key file exists and, if so, creates a backup of the existing key pair. It loads the current public and private keys, generates a fingerprint of the public key, and constructs new filenames using this fingerprint. The keys are then saved to these new filenames, effectively backing up the old key pair. Key slots include [io.file.exists] to check for file existence, [set-value] to assign values, [strings.concat] to construct filenames, and [io.file.save] to save the keys.
if
   io.file.exists:/etc/system/crypto/keys/public.key
   .lambda
      log.info:Creating a backup of the old key pair
      .public-key
      set-value:x:@.public-key
         io.file.load:/etc/system/crypto/keys/public.key
      .private-key
      set-value:x:@.private-key
         io.file.load:/etc/system/crypto/keys/private.key
      .fingerprint
      set-value:x:@.fingerprint
         crypto.fingerprint:x:@.public-key
      .public-key-filename
      set-value:x:@.public-key-filename
         strings.concat
            .:/etc/system/crypto/keys/public-
            get-value:x:@.fingerprint
            .:.key
      .private-key-filename
      set-value:x:@.private-key-filename
         strings.concat
            .:/etc/system/crypto/keys/private-
            get-value:x:@.fingerprint
            .:.key
      io.file.save:x:@.public-key-filename
         get-value:x:@.public-key
      io.file.save:x:@.private-key-filename
         get-value:x:@.private-key
