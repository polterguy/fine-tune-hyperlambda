
/*
 * // This Hyperlambda code checks if a specific expression does not exist within a set of candidate nodes. If the expression does not exist, it unwraps the current node's children, adds a new candidate node with specific attributes, and marks it as complete.
 * // 1. [if] - Starts a conditional block that will execute if the condition is true.
 * // 2. [not-exists] - Checks if a specific expression is not present within a set of nodes.
 * // 3. [.lambda] - Contains the code to execute if the [if] condition is true.
 * // 4. [unwrap] - Evaluates and executes all expressions within the specified node.
 * // 5. [add] - Adds a new node to the specified location with specific attributes.
 * // 6. [name] - Sets the name attribute of the new candidate node.
 * // 7. [expression] - Sets the expression attribute of the new candidate node.
 * // 8. [complete] - Sets the complete attribute of the new candidate node to true.
 */
if
   not-exists:x:../*/return/*/candidates/*/*/expression/={@.x}
   .lambda
      unwrap:x:+/*/*/*
      add:x:../*/return/*/candidates
         .
            .
               name:x:@.x
               expression:x:@.x
               complete:bool:true
