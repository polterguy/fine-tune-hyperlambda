
/*
 * // This Hyperlambda code evaluates a series of conditions using the [if] slot with an [and] logical operator to determine if a URL should be allowed or not. It checks if filtering on URL is enabled, if the URL exists and is not null or empty, and if the URL does not start with a specific string. If all conditions are true, it sets the [.allowed] node's value to false.
 * // 1. [if] - Starts the conditional evaluation.
 * // 2. [and] - Combines multiple conditions that all must be true.
 * // 3. [get-value:x:@.arguments/*/filter-on-url] - Checks if filtering on URL is enabled.
 * // 4. [exists:x:@.arguments/*/url] - Checks if the URL exists.
 * // 5. [not-null:x:@.arguments/*/url] - Ensures the URL is not null.
 * // 6. [neq:x:@.arguments/*/url] - Ensures the URL is not an empty string.
 * // 7. [not] - Negates the following condition.
 * // 8. [strings.starts-with:x:@sort/0] - Checks if the URL does not start with a specific string.
 * // 9. [.lambda] - Executes the following code block if all conditions are true.
 * // 10. [set-value:x:@.allowed] - Sets the [.allowed] node's value to false.
 */
if
   and
      get-value:x:@.arguments/*/filter-on-url
      exists:x:@.arguments/*/url
      not-null:x:@.arguments/*/url
      neq:x:@.arguments/*/url
         .:
      not
         strings.starts-with:x:@sort/0
            get-value:x:@.arguments/*/url
   .lambda
      set-value:x:@.allowed
         .:bool:false
