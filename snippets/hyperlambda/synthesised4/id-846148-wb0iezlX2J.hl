
/*
 * This Hyperlambda code defines a signal for a Magic endpoint that integrates AI and Twilio services. It retrieves Twilio account details from a database based on the type argument, checks conditions to send lead emails, and sends messages via Twilio based on the AI model used. The code handles both GPT-based chat models and other AI completion models, sending the results as messages.
 * 
 * 1. [signal] - Defines a signal for a Magic endpoint.
 * 2. [skip-auth] - Skips authentication for the endpoint.
 * 3. [type] - Retrieves the type from the arguments.
 * 4. [.callback] - Executes a callback function.
 * 5. [data.connect] - Connects to a generic database.
 * 6. [data.read] - Reads data from the ml_types table.
 * 7. [set-value] - Sets the value of Twilio account details.
 * 8. [if] - Checks conditions for sending lead emails.
 * 9. [strings.contains] - Checks if the prompt contains a specific character.
 * 10. [not-null] - Checks if contact_us is not null.
 * 11. [neq] - Checks if contact_us is not equal to an empty string.
 * 12. [unwrap] - Unwraps the result of the signal.
 * 13. [signal:magic.ai.send-lead-email] - Sends a lead email.
 * 14. [signal:magic.twilio.send-message] - Sends a message via Twilio.
 * 15. [strings.starts-with] - Checks if the model starts with "gpt".
 * 16. [add] - Adds nodes to the signal.
 * 17. [signal:magic.ai.chat] - Executes a chat signal.
 * 18. [signal:magic.ai.completion] - Executes a completion signal.
 */
signal:magic.ai.endpoint-common
   skip-auth:bool:true
   type:x:@.type
   .callback
      data.connect:[generic|magic]
         .twilio_account_id
         .twilio_account_sid
         data.read
            table:ml_types
            columns
               twilio_account_id
               twilio_account_sid
            where
               and
                  type.eq:x:@.arguments/*/type
         set-value:x:@.twilio_account_id
            get-value:x:@data.read/*/*/twilio_account_id
         set-value:x:@.twilio_account_sid
            get-value:x:@data.read/*/*/twilio_account_sid
         if
            and
               strings.contains:x:@.arguments/*/prompt
                  .:@
               not-null:x:@.arguments/*/contact_us
               neq:x:@.arguments/*/contact_us
                  .:
            .lambda
               unwrap:x:+/*
               signal:magic.ai.send-lead-email
                  type:x:@.arguments/*/type
                  prompt:x:@.arguments/*/prompt
                  session:x:@.arguments/*/session
                  lead_email:x:@.arguments/*/lead_email
                  contact_us:x:@.arguments/*/contact_us
               if:x:@signal
                  unwrap:x:+/*
                  signal:magic.twilio.send-message
                     body:x:@.arguments/*/contact_us
                     to:x:@.arguments/*/from
                     from:x:@.arguments/*/to
                     twilio_account_id:x:@.twilio_account_id
                     twilio_account_sid:x:@.twilio_account_sid
         if
            strings.starts-with:x:@.arguments/*/model
               .:gpt
            .lambda
               add:x:./*/signal/[0,1]
                  get-nodes:x:@.arguments/*
               signal:magic.ai.chat
               unwrap:x:+/*
               signal:magic.twilio.send-message
                  body:x:@signal/@signal/*/result
                  to:x:@.arguments/*/from
                  from:x:@.arguments/*/to
                  twilio_account_id:x:@.twilio_account_id
                  twilio_account_sid:x:@.twilio_account_sid
         else
            add:x:./*/signal/[0,1]
               get-nodes:x:@.arguments/*
            signal:magic.ai.completion
            unwrap:x:+/*
            signal:magic.twilio.send-message
               body:x:@signal/@signal/*/result
               to:x:@.arguments/*/from
               from:x:@.arguments/*/to
               twilio_account_id:x:@.twilio_account_id
               twilio_account_sid:x:@.twilio_account_sid
