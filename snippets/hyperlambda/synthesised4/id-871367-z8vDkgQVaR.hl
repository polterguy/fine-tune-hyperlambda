
/*
 * This Hyperlambda code demonstrates how to perform a SQL query using a left join on two tables, "Orders" and "Products", with the "Order Details" table in an SQLite database. It specifies the columns to select, including aliased columns, and sets up join conditions based on matching IDs. The code also prepares a [where] clause for filtering results, although the specific conditions are not detailed.
 * 
 * 1. [data.read] - Initiates a read operation from the database.
 * 2. [database-type] - Specifies the type of database, here set to SQLite.
 * 3. [table] - Indicates the primary table to query, "Order Details".
 * 4. [join] - Specifies a left join with the "Orders" table, using an alias and join condition.
 * 5. [join] - Specifies a left join with the "Products" table, using an alias and join condition.
 * 6. [columns] - Lists the columns to be selected from the tables, including aliased columns.
 * 7. [where] - Begins a conditional clause for filtering the query results.
 */
data.read
   database-type:sqlite
   table:Order Details
      join:Orders
         as:OrderID
         type:left
         on
            and
               Order Details.OrderID:OrderID.OrderID
      join:Products
         as:ProductID
         type:left
         on
            and
               Order Details.ProductID:ProductID.ProductID
   columns
      Order Details.OrderID
      Order Details.ProductID
      Order Details.UnitPrice
      Order Details.Quantity
      Order Details.Discount
      OrderID.CustomerID
         as:OrderID.CustomerID
      ProductID.ProductName
         as:ProductID.ProductName
   where
      and
