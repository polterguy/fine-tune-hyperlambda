
/*
 * The code demonstrates a [while] loop that continues executing as long as the value of [.no] is less than 5. Within each iteration, it appends a node with the value "Iteration" to the [results] node and increments the [.no] node by 1. The loop effectively creates a list of "Iteration" nodes, one for each cycle until the condition is no longer met. 
 * 
 * 1. [while] - Initiates a loop that continues while the condition is true.
 * 2. [lt] - Checks if [.no] is less than 5.
 * 3. [get-value] - Retrieves the current value of [.no].
 * 4. [.lambda] - Contains the operations to execute during each loop iteration.
 * 5. [add] - Appends a node with the value "Iteration" to [results].
 * 6. [math.increment] - Increases the value of [.no] by 1.
 */
while
   lt
      get-value:x:@.no
      .:int:5
   .lambda
      add:x:@.results
         .
            .:Iteration
      math.increment:x:@.no
