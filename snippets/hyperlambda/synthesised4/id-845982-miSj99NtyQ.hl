
// This Hyperlambda code verifies assumptions in a test file against an HTTP endpoint. It loads a test file, transforms it into a lambda object, and executes any [.lambda] nodes found. It makes an HTTP request based on the test file's content, checks the status code and response against expected values, and logs errors if assumptions fail. The code ensures correct authorization headers and handles JSON responses, comparing actual results with expected assumptions. Key slots include [hyper2lambda], [http.xxx], and [log.error].
hyper2lambda
   .arguments
      root_url:string
      test_file:string
   auth.ticket.verify:root
   validators.mandatory:x:@.arguments/*/root_url
   validators.mandatory:x:@.arguments/*/test_file
   io.file.load:x:@.arguments/*/test_file
   hyper2lambda:x:-
   if
      exists:x:@hyper2lambda/*/.lambda
      .lambda
         try
            .x:node:""
            add:x:@.x/#
               get-nodes:x:@hyper2lambda/*/.lambda/*
            eval:x:@.x/#
            return
               result:success
         .catch
            strings.concat
               .:"Assumption test failed, test file: "
               get-value:x:../*/.arguments/*/test_file
               .:"\nError: Unhandled exception occurred.\nException: "
               get-value:x:@.arguments/*/message
            log.error:Assumption test failed
               file:x:../*/.arguments/*/test_file
               message:x:@.arguments/*/message
            unwrap:x:+/*
            return
               result:x:@strings.concat
   request.headers.get:Authorization
   if
      exists:x:@hyper2lambda/*/payload
      .lambda
         add:x:../*/http.xxx
            get-nodes:x:@hyper2lambda/*/payload
         add:x:../*/http.xxx/*/headers
            .
               Content-Type:application/json
   strings.concat
      get-value:x:@.arguments/*/root_url
      get-value:x:@hyper2lambda/*/url
   set-name:x:../*/http.xxx
      strings.concat
         .:http.
         get-value:x:@hyper2lambda/*/verb
   http.xxx:x:@strings.concat
      headers
         Authorization:x:@request.headers.get
   .foo
   if
      not
         eq
            get-value:x:@.foo/-
            get-value:x:@hyper2lambda/*/status
      .lambda
         strings.concat
            .:"Assumption test failed, test file: "
            get-value:x:@.arguments/*/test_file
            .:"\nError: Wrong status code returned.\nAssumption: "
            get-value:x:@hyper2lambda/*/status
            .:"\nActual: "
            get-value:x:@.foo/-
         log.error:Assumption test failed
            file:x:@.arguments/*/test_file
            type:Wrong status code
            expected:x:@hyper2lambda/*/status
            actual:x:@.foo/-
         unwrap:x:+/*
         return
            result:x:@strings.concat
   if
      exists:x:@hyper2lambda/*/response
      .lambda
         .response
         .assumption
         if
            or
               not
                  exists:x:@hyper2lambda/*/produces
               eq
                  get-value:x:@hyper2lambda/*/produces
                  .:application/json
            .lambda
               .content:{}
               if
                  and
                     exists:x:@.foo/-/*/content
                     not
                        eq
                           get-value:x:@.foo/-/*/content
                           .:
                     not
                        eq
                           get-value:x:@.foo/-/*/content
                           .
                  .lambda
                     set-value:x:@.content
                        get-value:x:@.foo/-/*/content
               json2lambda:x:@.content
               set-value:x:@.response
                  lambda2json:x:@json2lambda/*
                     format:true
               json2lambda:x:@hyper2lambda/*/response
               set-value:x:@.assumption
                  lambda2json:x:@json2lambda/*
                     format:true
         else
            set-value:x:@.response
               get-value:x:@.foo/-/*/content
            set-value:x:@.assumption
               get-value:x:@hyper2lambda/*/response
         if
            not
               eq
                  get-value:x:@.response
                  get-value:x:@.assumption
            .lambda
               strings.concat
                  .:"Assumption test failed, test file: "
                  get-value:x:@.arguments/*/test_file
                  .:"\nError: Wrong response returned\nAssumption: "
                  get-value:x:@.assumption
                  .:"\nActual: "
                  get-value:x:@.response
               log.error:Assumption test failed
                  file:x:@.arguments/*/test_file
                  type:Wrong response
                  expected:x:@.assumption
                  actual:x:@.response
               unwrap:x:+/*
               return
                  result:x:@strings.concat
   return
      result:success
