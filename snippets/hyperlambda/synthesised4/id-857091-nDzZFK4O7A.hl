
/*
 * This Hyperlambda code defines a function to perform aggregate operations on a SQLite database table named "Customers". It accepts arguments for the aggregate function and column, validates them, and constructs a SQL query to retrieve the aggregate result. The function supports various comparison operations on multiple fields of the "Customers" table, allowing for complex query conditions. The result of the aggregate operation is returned as "result". 
 * 
 * 1. [.arguments] - Declares the arguments that the function can accept, including aggregate functions and various comparison operations for the "Customers" table fields.
 * 2. [validators.mandatory] - Ensures that the required arguments "aggregate_function" and "aggregate_column" are provided.
 * 3. [validators.enum] - Validates that the "aggregate_function" and "aggregate_column" arguments are within the allowed values.
 * 4. [data.connect] - Establishes a connection to the SQLite database using the "northwind" connection string.
 * 5. [set-name] - Constructs the aggregate function expression by concatenating the function and column names.
 * 6. [remove-nodes] - Removes the first two nodes from the arguments, which are "aggregate_function" and "aggregate_column".
 * 7. [add] - Adds the remaining argument nodes to the "where" clause of the SQL query.
 * 8. [data.read] - Executes the SQL query on the "Customers" table, retrieving the aggregate result with a limit of one record.
 * 9. [return-nodes] - Returns the result of the SQL query execution.
 */
hyper2lambda
   .arguments
      aggregate_function:string
      aggregate_column:string
      Customers.CustomerID.like:string
      Customers.CustomerID.mt:string
      Customers.CustomerID.lt:string
      Customers.CustomerID.mteq:string
      Customers.CustomerID.lteq:string
      Customers.CustomerID.neq:string
      Customers.CustomerID.eq:string
      Customers.CompanyName.like:string
      Customers.CompanyName.mt:string
      Customers.CompanyName.lt:string
      Customers.CompanyName.mteq:string
      Customers.CompanyName.lteq:string
      Customers.CompanyName.neq:string
      Customers.CompanyName.eq:string
      Customers.ContactName.like:string
      Customers.ContactName.mt:string
      Customers.ContactName.lt:string
      Customers.ContactName.mteq:string
      Customers.ContactName.lteq:string
      Customers.ContactName.neq:string
      Customers.ContactName.eq:string
      Customers.ContactTitle.like:string
      Customers.ContactTitle.mt:string
      Customers.ContactTitle.lt:string
      Customers.ContactTitle.mteq:string
      Customers.ContactTitle.lteq:string
      Customers.ContactTitle.neq:string
      Customers.ContactTitle.eq:string
      Customers.Address.like:string
      Customers.Address.mt:string
      Customers.Address.lt:string
      Customers.Address.mteq:string
      Customers.Address.lteq:string
      Customers.Address.neq:string
      Customers.Address.eq:string
      Customers.City.like:string
      Customers.City.mt:string
      Customers.City.lt:string
      Customers.City.mteq:string
      Customers.City.lteq:string
      Customers.City.neq:string
      Customers.City.eq:string
      Customers.Region.like:string
      Customers.Region.mt:string
      Customers.Region.lt:string
      Customers.Region.mteq:string
      Customers.Region.lteq:string
      Customers.Region.neq:string
      Customers.Region.eq:string
      Customers.PostalCode.like:string
      Customers.PostalCode.mt:string
      Customers.PostalCode.lt:string
      Customers.PostalCode.mteq:string
      Customers.PostalCode.lteq:string
      Customers.PostalCode.neq:string
      Customers.PostalCode.eq:string
      Customers.Country.like:string
      Customers.Country.mt:string
      Customers.Country.lt:string
      Customers.Country.mteq:string
      Customers.Country.lteq:string
      Customers.Country.neq:string
      Customers.Country.eq:string
      Customers.Phone.like:string
      Customers.Phone.mt:string
      Customers.Phone.lt:string
      Customers.Phone.mteq:string
      Customers.Phone.lteq:string
      Customers.Phone.neq:string
      Customers.Phone.eq:string
      Customers.Fax.like:string
      Customers.Fax.mt:string
      Customers.Fax.lt:string
      Customers.Fax.mteq:string
      Customers.Fax.lteq:string
      Customers.Fax.neq:string
      Customers.Fax.eq:string
   validators.mandatory:x:@.arguments/*/aggregate_function
   validators.mandatory:x:@.arguments/*/aggregate_column
   validators.enum:x:@.arguments/*/aggregate_function
      .:min
      .:max
      .:sum
      .:avg
   validators.enum:x:@.arguments/*/aggregate_column
      .:Customers.CustomerID
      .:Customers.CompanyName
      .:Customers.ContactName
      .:Customers.ContactTitle
      .:Customers.Address
      .:Customers.City
      .:Customers.Region
      .:Customers.PostalCode
      .:Customers.Country
      .:Customers.Phone
      .:Customers.Fax
   data.connect:[generic|northwind]
      database-type:sqlite
      set-name:x:./*/data.read/*/columns/*/aggregate_functor
         strings.concat
            get-value:x:@.arguments/*/aggregate_function
            .:(
            get-value:x:@.arguments/*/aggregate_column
            .:)
      remove-nodes:x:@.arguments/*/[0,2]
      add:x:./*/data.read/*/where/*
         get-nodes:x:@.arguments/*
      data.read
         database-type:sqlite
         table:Customers
         columns
            aggregate_functor
               as:result
         where
            and
         limit:long:1
      return-nodes:x:@data.read/*/*
