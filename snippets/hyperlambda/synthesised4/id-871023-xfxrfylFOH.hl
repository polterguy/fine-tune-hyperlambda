
// This Hyperlambda code defines a dynamic slot [magic.ai.url.get] that performs an HTTP GET request to a specified URL. It validates the URL, sets default headers if none are provided, and handles HTTP redirects by re-invoking itself with updated URLs. The code logs errors for unsuccessful requests or non-HTML responses and returns the HTML content if successful. Key slots include [validators.mandatory], [http.get], [if], [not-exists], [strings.starts-with], and [log.error].
slots.create:magic.ai.url.get
   validators.mandatory:x:@.arguments/*/url
   validators.url:x:@.arguments/*/url
   if
      not-exists:x:@.arguments/*/headers
      .lambda
         add:x:@.arguments
            .
               headers
   validators.default:x:@.arguments/*/headers
      User-Agent:AINIRO-Crawler 2.0
      Accept:text/html
      Accept-Encoding:identity
   add:x:./*/http.get
      get-nodes:x:@.arguments/*/headers
   http.get:x:@.arguments/*/url
      timeout:60
   if
      not
         and
            mte:x:@http.get
               .:int:200
            lt:x:@http.get
               .:int:300
      .lambda
         if
            or
               eq:x:@http.get
                  .:int:301
               eq:x:@http.get
                  .:int:302
            .lambda
               if
                  strings.starts-with:x:@.arguments/*/url
                     .:"http://"
                  .lambda
                     sockets.signal:x:@.arguments/*/feedback-channel
                        args
                           message:Page moved to, trying SSL equivalent
                           type:info
                     sleep:100
                     strings.replace:x:@.arguments/*/url
                        .:"http://"
                        .:"https://"
                     add:x:+/*/headers
                        get-nodes:x:@.arguments/*/headers/*
                     execute:magic.ai.url.get
                        url:x:@strings.replace
                        headers
                     return:x:-
               else
                  strings.concat
                     .:"Page moved to '"
                     get-value:x:@http.get/*/headers/*/Location
                     .:"', trying alternative location"
                  unwrap:x:+/**
                  sockets.signal:x:@.arguments/*/feedback-channel
                     args
                        message:x:@strings.concat
                        type:info
                  sleep:100
                  add:x:+/+/*/headers
                     get-nodes:x:@.arguments/*/headers/*
                  add:x:+
                     get-nodes:x:@.arguments/*/feedback-channel
                  execute:magic.ai.url.get
                     url:x:@http.get/*/headers/*/Location
                     headers
                  return:x:-
         else
            log.error:Something went wrong while trying to get URL
               url:x:@.arguments/*/url
               status:x:@http.get
            strings.concat
               .:"HTTP invocation returned status code "
               get-value:x:@http.get
            throw:x:-
   if
      or
         not-exists:x:@http.get/*/headers/*/Content-Type
         not
            strings.starts-with:x:@http.get/*/headers/*/Content-Type
               .:text/html
      .lambda
         log.error:URL did not return HTML content
            url:x:@.arguments/*/url
            content-type:x:@http.get/*/headers/*/Content-Type
         strings.concat
            .:"URL did not return HTML content but '"
            get-value:x:@http.get/*/headers/*/Content-Type
            .:"' content"
         throw:x:-
   return:x:@http.get/*/content
