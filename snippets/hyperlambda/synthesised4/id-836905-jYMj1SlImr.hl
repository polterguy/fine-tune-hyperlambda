
/*
 * This Hyperlambda code demonstrates how to perform a SQL query using the [data.read] slot to retrieve task information from a SQLite database. It includes a left join on the "users" table to fetch user details associated with each task. The query selects specific columns from the "tasks" table and the "users" table, with an alias applied to the username column. The [where] slot is prepared for adding conditions to filter the results. 
 * 
 * 1. [data.read] - Initiates a data reading operation from a database.
 * 2. [database-type] - Specifies the type of database to connect to, in this case, SQLite.
 * 3. [table] - Indicates the main table to query, here it's "tasks".
 * 4. [join] - Specifies a join operation with the "users" table.
 * 5. [as] - Provides an alias for the joined table, here it's "user_id".
 * 6. [type] - Defines the join type, which is a left join in this context.
 * 7. [on] - Sets the condition for the join, matching "tasks.user_id" with "user_id.user_id".
 * 8. [columns] - Lists the columns to be selected from the query.
 * 9. [where] - Prepares the query for adding filtering conditions.
 */
data.read
   database-type:sqlite
   table:tasks
      join:users
         as:user_id
         type:left
         on
            and
               tasks.user_id:user_id.user_id
   columns
      tasks.task_id
      tasks.user_id
      tasks.description
      tasks.due_date
      tasks.status
      user_id.username
         as:user_id.username
   where
      and
