
// This Hyperlambda code uses logical slots to check conditions: [and] ensures both conditions are true; [exists] verifies if any roles exist in the JWT token payload; [not-exists] checks if no specific type exists within a nested model structure. The code is useful for validating user roles and model types in a secure and structured manner.
and
   exists:x:@auth.ticket.get/*/roles/*/={@strings.trim}
   not-exists:x:"@.models/*/*/type/\"={@for-each/@.dp/#/*/type}\""
