
// This Hyperlambda code connects to a SQLite database named "hospital" and performs an aggregate function on the "Doctors" table. It dynamically constructs an aggregate function using the provided arguments, removes certain argument nodes, and adds additional nodes to the "where" clause. The result of the aggregate function is aliased as "result" and the query is limited to one record. The final result is returned as nodes from the data read operation.
data.connect:[generic|hospital]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/aggregate_functor
      strings.concat
         get-value:x:@.arguments/*/aggregate_function
         .:(
         get-value:x:@.arguments/*/aggregate_column
         .:)
   remove-nodes:x:@.arguments/*/[0,2]
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Doctors
      columns
         aggregate_functor
            as:result
      where
         and
      limit:long:1
   return-nodes:x:@data.read/*/*
