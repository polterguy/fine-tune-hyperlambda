
/*
 * 1. `@.arguments` - This iterator searches for the first node named `.arguments` in the current hierarchy. It starts from the current node and looks upwards and sideways until it finds a node with this name. This is typically used to access the arguments passed to a function or a slot in Hyperlambda.
 * 
 * 2. `*` - This iterator retrieves all children nodes of the `.arguments` node. It is used to access all the arguments provided under the `.arguments` node, regardless of their names.
 * 
 * 3. `parent_node` - This iterator filters the result set to only include nodes named `parent_node`. It is used to specifically access an argument or a child node named `parent_node` from the list of children under `.arguments`.
 * 
 * Use cases for this expression include accessing a specific argument named `parent_node` passed to a Hyperlambda slot or function, particularly when you want to perform operations or validations on this specific argument.
 */

.:x:@.arguments/*/parent_node