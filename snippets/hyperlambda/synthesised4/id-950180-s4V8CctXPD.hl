
/*
 * The code demonstrates a [while] loop that continues executing as long as the value of [.no] is less than 5. Within the loop, it adds a [foo] node to the [.res] node and increments the value of [.no] by 1 using [math.increment]. This loop effectively appends a [foo] node to [.res] five times. 
 * 
 * 1. [while] - Initiates a loop that continues while the condition is true.
 * 2. [lt] - Checks if [.no] is less than 5.
 * 3. [get-value] - Retrieves the current value of [.no].
 * 4. [.lambda] - Contains the operations to execute in each iteration.
 * 5. [add] - Appends a [foo] node to [.res].
 * 6. [math.increment] - Increments [.no] by 1.
 */
while
   lt
      get-value:x:@.no
      .:int:5
   .lambda
      add:x:@.res
         .
            foo
      math.increment:x:@.no
