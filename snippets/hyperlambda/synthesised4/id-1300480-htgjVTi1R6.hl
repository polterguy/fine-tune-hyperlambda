
// This Hyperlambda code snippet demonstrates how to perform a SQL read operation on a SQLite database, specifically targeting the "contacts" table. It includes a left join with the "clients" table, using "client_id" as an alias and join condition. The code specifies an aggregate function to be applied to the selected columns, with the result being aliased as "result". It also includes a "where" clause for filtering results and a "group" clause to group the results by a specified column. Finally, the [return-nodes] slot is used to return the resulting node set from the [data.read] operation. The snippet effectively showcases how to construct a complex SQL query with joins, aggregation, filtering, and grouping using Hyperlambda syntax.
data.read
   database-type:sqlite
   table:contacts
      join:clients
         as:client_id
         type:left
         on
            and
               contacts.client_id:client_id.client_id
   columns
      aggregate_functor
         as:result
   where
      and
   group
      group_column
return-nodes:x:@data.read/*
