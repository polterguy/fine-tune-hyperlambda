
/*
 * This Hyperlambda code constructs a SQL query with dynamic parameters for aggregation and grouping. It validates mandatory arguments and ensures they are within specified enums. The code connects to a SQLite database, sets up grouping and aggregation based on input arguments, and constructs a SQL query with joins, columns, and conditions. Finally, it returns the results of the SQL query execution. 
 * 
 * 1. [.arguments] - Defines the input parameters for the lambda function.
 * 2. [validators.mandatory] - Ensures required arguments are provided.
 * 3. [validators.enum] - Validates that certain arguments are within a predefined set of values.
 * 4. [data.connect] - Establishes a database connection and prepares for data reading.
 * 5. [set-name] - Sets the name of nodes dynamically based on input arguments.
 * 6. [insert-before] - Inserts a node before a specified location in the node structure.
 * 7. [set-value] - Modifies the value of a node.
 * 8. [remove-nodes] - Deletes nodes from the structure.
 * 9. [add] - Adds nodes to the structure.
 * 10. [strings.concat] - Concatenates strings to form SQL expressions.
 * 11. [data.read] - Executes the SQL query with specified joins, columns, and conditions.
 * 12. [return-nodes] - Returns the result of the SQL query execution.
 */
hyper2lambda
   .arguments
      group_column:string
      limit:long
      offset:long
      order:string
      direction:string
      aggregate_function:string
      aggregate_column:string
      Order Details.OrderID.mt:long
      Order Details.OrderID.lt:long
      Order Details.OrderID.mteq:long
      Order Details.OrderID.lteq:long
      Order Details.OrderID.neq:long
      Order Details.OrderID.eq:long
      Order Details.ProductID.mt:long
      Order Details.ProductID.lt:long
      Order Details.ProductID.mteq:long
      Order Details.ProductID.lteq:long
      Order Details.ProductID.neq:long
      Order Details.ProductID.eq:long
      Order Details.UnitPrice.mt:decimal
      Order Details.UnitPrice.lt:decimal
      Order Details.UnitPrice.mteq:decimal
      Order Details.UnitPrice.lteq:decimal
      Order Details.UnitPrice.neq:decimal
      Order Details.UnitPrice.eq:decimal
      Order Details.Quantity.mt:long
      Order Details.Quantity.lt:long
      Order Details.Quantity.mteq:long
      Order Details.Quantity.lteq:long
      Order Details.Quantity.neq:long
      Order Details.Quantity.eq:long
      Order Details.Discount.mt:double
      Order Details.Discount.lt:double
      Order Details.Discount.mteq:double
      Order Details.Discount.lteq:double
      Order Details.Discount.neq:double
      Order Details.Discount.eq:double
      OrderID.CustomerID.eq:string
      OrderID.CustomerID.like:string
      ProductID.ProductName.eq:string
      ProductID.ProductName.like:string
   validators.mandatory:x:@.arguments/*/group_column
   validators.mandatory:x:@.arguments/*/aggregate_function
   validators.mandatory:x:@.arguments/*/aggregate_column
   validators.enum:x:@.arguments/*/aggregate_function
      .:min
      .:max
      .:sum
      .:avg
      .:count
   validators.enum:x:@.arguments/*/group_column
      .:Order Details.OrderID
      .:Order Details.ProductID
      .:Order Details.UnitPrice
      .:Order Details.Quantity
      .:Order Details.Discount
      .:OrderID.CustomerID
      .:ProductID.ProductName
   validators.enum:x:@.arguments/*/aggregate_column
      .:Order Details.OrderID
      .:Order Details.ProductID
      .:Order Details.UnitPrice
      .:Order Details.Quantity
      .:Order Details.Discount
      .:OrderID.CustomerID
      .:ProductID.ProductName
   data.connect:[generic|northwind]
      database-type:sqlite
      set-name:x:@data.connect/*/data.read/*/group/*/group_column
         get-value:x:@.arguments/*/group_column
      set-name:x:+/*/*
         get-value:x:@.arguments/*/group_column
      insert-before:x:@data.connect/*/data.read/*/columns/0
         .
            group_column
      set-value:x:@data.connect/*/data.read/*/columns/1/*/as
         get-value:x:@.arguments/*/aggregate_function
      remove-nodes:x:@.arguments/*/group_column
      add:x:@data.connect/*/data.read
         get-nodes:x:@.arguments/*/limit
         get-nodes:x:@.arguments/*/offset
      remove-nodes:x:@.arguments/*/limit
      remove-nodes:x:@.arguments/*/offset
      add:x:./*/data.read
         get-nodes:x:@.arguments/*/order
         get-nodes:x:@.arguments/*/direction
      remove-nodes:x:@.arguments/*/order
      remove-nodes:x:@.arguments/*/direction
      set-name:x:./*/data.read/*/columns/*/aggregate_functor
         strings.concat
            get-value:x:@.arguments/*/aggregate_function
            .:(
            get-value:x:@.arguments/*/aggregate_column
            .:)
      remove-nodes:x:@.arguments/*/[0,2]
      add:x:./*/data.read/*/where/*
         get-nodes:x:@.arguments/*
      data.read
         database-type:sqlite
         table:Order Details
            join:Orders
               as:OrderID
               type:left
               on
                  and
                     Order Details.OrderID:OrderID.OrderID
            join:Products
               as:ProductID
               type:left
               on
                  and
                     Order Details.ProductID:ProductID.ProductID
         columns
            aggregate_functor
               as:result
         where
            and
         group
            group_column
      return-nodes:x:@data.read/*
