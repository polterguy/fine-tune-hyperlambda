
// This Hyperlambda code connects to a database and performs a series of operations on the "ml_training_snippets" table. It adds conditions to the "where" clause for both reading and deleting data, removes specific nodes, and checks for the existence of files before deleting them. It generates SQL to delete entries based on their row ID and executes this SQL, followed by a data deletion operation. Finally, it returns the number of affected rows. The code utilizes slots like [add], [remove-nodes], [if], [for-each], [strings.concat], and [data.execute] to manipulate data and execute SQL commands.
data.connect:[generic|magic]
   add:x:./*/data.read/*/where/*/*/or
      get-nodes:x:@.arguments/*/ml_training_snippets.prompt.like
      get-nodes:x:@.arguments/*/ml_training_snippets.completion.like
      get-nodes:x:@.arguments/*/ml_training_snippets.uri.like
   add:x:./*/data.delete/*/where/*/*/or
      get-nodes:x:@.arguments/*/ml_training_snippets.prompt.like
      get-nodes:x:@.arguments/*/ml_training_snippets.completion.like
      get-nodes:x:@.arguments/*/ml_training_snippets.uri.like
   remove-nodes:x:@.arguments/*/ml_training_snippets.prompt.like
   remove-nodes:x:@.arguments/*/ml_training_snippets.completion.like
   remove-nodes:x:@.arguments/*/ml_training_snippets.uri.like
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   add:x:./*/data.delete/*/where/*
      get-nodes:x:@.arguments/*
   if
      not-exists:x:@data.connect/*/data.read/*/where/*/and/*/or/*
      .lambda
         remove-nodes:x:@data.connect/*/data.read/*/where/*/and/*/or
         remove-nodes:x:@data.connect/*/data.delete/*/where/*/and/*/or
   data.read
      table:ml_training_snippets
      columns
         filename
      where
         and
            filename.neq
            or
      limit:-1
   for-each:x:@data.read/*
      if
         and
            not-null:x:@.dp/#/*/filename
            io.file.exists:x:@.dp/#/*/filename
         .lambda
            io.file.delete:x:@.dp/#/*/filename
   data.read
      generate:true
      table:ml_training_snippets
      columns
         id
            as:rowid
      where
         and
            or
      limit:-1
   .sql
   set-value:x:@.sql
      strings.concat
         .:delete from vss_ml_training_snippets where rowid in(
         get-value:x:@data.read
         .:)
   add:x:./*/data.execute
      get-nodes:x:@data.read/*
   data.execute:x:@.sql
   data.delete
      table:ml_training_snippets
      where
         and
            or
   unwrap:x:+/*
   return
      affected:x:@data.delete
