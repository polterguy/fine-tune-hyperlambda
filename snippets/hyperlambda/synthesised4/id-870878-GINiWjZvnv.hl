
/*
 * The code checks if a token key exists, is not null, and is not an empty string in the [.arguments] node. If these conditions are met, it retrieves a configuration value associated with the token key, unwraps it, and adds it to the execute node's arguments as a token and token type. 
 * 
 * 1. [if] - Initiates a conditional check based on the following conditions.
 * 2. [and] - Ensures all nested conditions must be true for the block to execute.
 * 3. [exists] - Checks if the token_key exists in the arguments.
 * 4. [not-null] - Ensures the token_key is not null.
 * 5. [neq] - Confirms the token_key is not an empty string.
 * 6. [.lambda] - Executes the enclosed operations if the conditions are true.
 * 7. [config.get] - Retrieves a configuration value using the token_key.
 * 8. [unwrap] - Evaluates and unwraps the retrieved configuration value.
 * 9. [add] - Adds the token and token_type to the execute node's arguments.
 */
if
   and
      exists:x:@.arguments/*/token_key
      not-null:x:@.arguments/*/token_key
      neq:x:@.arguments/*/token_key
         .:
   .lambda
      config.get:x:@.arguments/*/token_key
      unwrap:x:+/*/*
      add:x:../*/execute/*/arguments
         .
            token:x:@config.get
            token_type:x:@.arguments/*/token_type
