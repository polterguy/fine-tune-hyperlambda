
// This Hyperlambda code uses a [switch] statement to map various SQL data types to Hyperlambda types. It evaluates the value of [strings.replace] and sets the [.type] node accordingly. The [case] nodes handle specific SQL types, assigning them to Hyperlambda types like "date", "decimal", "long", "string", or "bool". If no [case] matches, the [default] block checks if the value starts with "enum", setting [.type] to "string", otherwise it defaults to "string".
switch:x:@strings.replace
   case:date
   case:datetime
   case:timestamp
      set-value:x:@.type
         .:date
   case:float
   case:double
   case:double precision
   case:decimal
   case:dec
      set-value:x:@.type
         .:decimal
   case:bit
   case:tinyint
   case:bool
   case:boolean
   case:smallint
   case:mediumint
   case:integer
   case:bigint
   case:int
   case:int unsigned
      set-value:x:@.type
         .:long
   case:char
   case:varchar
   case:binary
   case:varbinary
   case:tinyblob
   case:tinytext
   case:text
   case:blob
   case:mediumtext
   case:mediumblob
   case:longtext
   case:longblob
   case:enum
   case:set
      set-value:x:@.type
         .:string
   case:tinyint
      set-value:x:@.type
         .:bool
   default
      if
         strings.starts-with:x:@strings.replace
            .:enum
         .lambda
            set-value:x:@.type
               .:string
      else
         set-value:x:@.type
            .:string
