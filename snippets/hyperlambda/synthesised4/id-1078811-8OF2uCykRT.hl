
/*
 * 1. `@io.file.list-recursively`: This iterator retrieves the first node named `io.file.list-recursively`. It starts from the current context and searches through siblings and ancestors until it finds a node with this exact name. This is useful for accessing a specific node in a potentially large and complex structure, especially when the node's position is not fixed but its name is unique or known.
 * 
 * 2. `*`: After finding the `io.file.list-recursively` node, this iterator retrieves all of its children nodes. This is useful when you need to process or evaluate all child nodes of a specific parent node, such as when you want to list all files in a directory structure returned by a file listing operation.
 * 
 * Potential use cases:
 * - This expression could be used in a scenario where you have a node structure representing a file system, and you want to list all files and directories under a specific directory node named `io.file.list-recursively`.
 * - It can also be used in a configuration or data processing context where you need to access and manipulate all child elements of a specific configuration node.
 */

.:x:@io.file.list-recursively/*