
// This Hyperlambda code establishes a connection to a SQLite database and performs a data read operation on the "documents" table, joining it with the "clients" table using a left join. It dynamically constructs an aggregate function using the provided arguments, removes certain nodes, and adds nodes to the "where" clause. The result of the query is limited to one record and returned. The code uses slots like [data.connect], [set-name], [remove-nodes], [add], [data.read], and [return-nodes] to manipulate and execute the SQL query.
data.connect:[generic|crm]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/aggregate_functor
      strings.concat
         get-value:x:@.arguments/*/aggregate_function
         .:(
         get-value:x:@.arguments/*/aggregate_column
         .:)
   remove-nodes:x:@.arguments/*/[0,2]
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:documents
         join:clients
            as:client_id
            type:left
            on
               and
                  documents.client_id:client_id.client_id
      columns
         aggregate_functor
            as:result
      where
         and
      limit:long:1
   return-nodes:x:@data.read/*/*
