
// This Hyperlambda code snippet demonstrates how to perform a SQL read operation with a join, aggregate function, and a limit using a SQLite database. The [data.read] slot is used to read data from the database, specifying the database type as SQLite with the [database-type] slot. The [table] slot specifies the "Treatments" table as the primary table for the read operation. A left join is performed with the "Patients" table using the [join] slot, where the join condition is defined in the [on] slot, matching the "PatientID" from the "Treatments" table with the "PatientID" from the "Patients" table. The [columns] slot specifies an aggregate function, which is aliased as "result" using the [as] slot. The [where] slot is included but does not specify any conditions, and the [limit] slot restricts the result to a single record. Finally, the [yield] slot is used to return the results of the [data.read] operation, specifically targeting the children nodes of the [data.read] node. This code is useful for retrieving a single aggregated result from a joined table query in a SQLite database.
data.read
   database-type:sqlite
   table:Treatments
      join:Patients
         as:PatientID
         type:left
         on
            and
               Treatments.PatientID:PatientID.PatientID
   columns
      aggregate_functor
         as:result
   where
      and
   limit:long:1
yield
   treatments:x:@data.read/*/*
