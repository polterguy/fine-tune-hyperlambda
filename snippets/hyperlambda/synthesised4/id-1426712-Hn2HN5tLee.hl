
// This Hyperlambda code snippet uses a [while] loop to continuously process nodes in the [.session] node set. It converts these nodes to a Hyperlambda string using [lambda2hyper] and checks if the sum of [max_tokens], tokenized session content, and [extra-tokens] is less than [model_size]. If true, it sets [.cont] to false to stop the loop. Otherwise, it concatenates session content with [fixed], converts the result to a specific type, and removes nodes using [remove-nodes]. The loop iterates until the condition is met or nodes are removed. The code effectively manages session content based on token limits and model size constraints.
while:x:@.cont
   lambda2hyper:x:@.session/*
   if
      lt
         math.add
            get-value:x:@.arguments/*/max_tokens
            openai.tokenize:x:@lambda2hyper
            get-value:x:@.extra-tokens
         get-value:x:@.arguments/*/model_size
      .lambda
         set-value:x:@.cont
            .:bool:false
   else
      strings.concat
         .:@.session/
         get-value:x:@.fixed
      set-x:x:./*/remove-nodes
         convert:x:@strings.concat
            type:x
      remove-nodes
