
// This Hyperlambda code iterates through nodes resulting from [csv2lambda] conversion, creating prompt and completion strings for machine learning training. It uses [for-each] to loop through nodes, [set-value] to construct strings, and [strings.concat] to concatenate node names and values. The [data.create] slot then stores these strings in a database table named "ml_training_snippets" with metadata.
for-each:x:@csv2lambda/*
   .prompt:
   .completion:
   set-value:x:@.prompt
      strings.concat
         get-name:x:@.dp/#/0
         .:": "
         get-value:x:@.dp/#/0
   for-each:x:@.dp/#/*/[1,1000]
      if
         and
            not-null:x:@.dp/#
            neq:x:@.dp/#
               .:
         .lambda
            set-value:x:@.completion
               strings.concat
                  get-value:x:@.completion
                  .:@"
"
                  .:@"
"
                  get-name:x:@.dp/#
                  .:": "
                  get-value:x:@.dp/#
   set-value:x:@.completion
      strings.trim:x:@.completion
   data.create
      table:ml_training_snippets
      values
         type:x:@.arguments/*/type
         prompt:x:@.prompt
         completion:x:@.completion
         meta:x:@.arguments/*/file/*/name
