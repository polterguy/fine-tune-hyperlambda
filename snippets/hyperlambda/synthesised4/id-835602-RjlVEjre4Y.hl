
// This Hyperlambda code checks if the value of [.no] is equal to 0. If true, it concatenates a SQL string to [.sql] using various components, including [.fields] and [.no], to form a complex SQL expression. The expression calculates the number of occurrences of a substring within a field by comparing lengths of the field before and after replacing the substring. The [set-value] slot updates [.sql] with the concatenated result.
if
   eq:x:@.no
      .:int:0
   .lambda
      set-value:x:@.sql
         strings.concat:x:@.sql
            get-value:x:@.sql
            .:" (length("
            get-value:x:@.fields
            .:) - length(replace(lower(
            get-value:x:@.fields
            .:), @p
            get-value:x:@.no
            .:", ''))) / length(@p"
            get-value:x:@.no
            .:)
