
/*
 * /*
 *  * This Hyperlambda code snippet checks if the number of URLs is less than 10,000, and if so, processes each URL to ensure it has a valid schema (http or https). If a URL does not start with "http://" or "https://", it prepends a domain to it. Finally, it adds the processed URL to a list if it doesn't already exist in the list.
 *  * 1. [if] - Checks if the number of URLs is less than 10,000.
 *  * 2. [lt] - Compares the count of URLs to the integer 10,000.
 *  * 3. [get-count] - Retrieves the count of child nodes under [urls].
 *  * 4. [.url] - Declares a temporary node to store the processed URL.
 *  * 5. [set-value] - Sets the value of [.url] to the current URL.
 *  * 6. [if] - Checks if the URL does not start with "http://" or "https://".
 *  * 7. [and] - Combines two conditions to check both "http://" and "https://" prefixes.
 *  * 8. [not] - Negates the condition to check if the URL does not start with the specified prefix.
 *  * 9. [strings.starts-with] - Checks if the URL starts with a specific string.
 *  * 10. [set-value] - Sets the value of [.url] by concatenating the domain and the current URL.
 *  * 11. [strings.concat] - Concatenates the domain and the current URL.
 *  * 12. [if] - Checks if the processed URL does not already exist in the list.
 *  * 13. [not-exists] - Checks if the URL is not present in the [urls] list.
 *  * 14. [unwrap] - Evaluates expressions and adds the processed URL to the list.
 *  * 15. [add] - Adds the processed URL to the [urls] list.
 *  */
 */
if
   lt
      get-count:x:@.urls/*
      .:int:10000
   .lambda
      .url
      set-value:x:@.url
         get-value:x:@.dp/#
      if
         and
            not
               strings.starts-with:x:@.dp/#
                  .:"http://"
            not
               strings.starts-with:x:@.dp/#
                  .:"https://"
         .lambda
            set-value:x:@.url
               strings.concat
                  get-value:x:@.domain
                  get-value:x:@.dp/#
      if
         not-exists:x:@.urls/*/={@.url}
         .lambda
            unwrap:x:+/*/*
            add:x:@.urls
               .
                  .:x:@.url
