
// This Hyperlambda code checks if a supervised argument exists, is not null, and equals 1. If true, it constructs a prompt based on the number of invocations and function results, and stores this data in a database table named "ml_requests". The code uses [if] for conditional checks, [strings.concat] for string concatenation, and [data.create] to insert data into the database.
if
   and
      exists:x:@.arguments/*/supervised
      not-null:x:@.arguments/*/supervised
      eq
         convert:x:@.arguments/*/supervised
            type:int
         .:int:1
   .lambda
      data.connect:[generic|magic]
         .prompt
         if
            mt:x:@.no-invocation
               .:int:0
            .lambda
               set-value:x:@.prompt
                  strings.concat
                     .:[
                     get-value:x:@.no-invocation
                     .:"] - "
                     get-value:x:@.only-prompt
         else
            set-value:x:@.prompt
               get-value:x:@.only-prompt
         .tmp-completion
         if
            not-null:x:@.function-result
            .lambda
               set-value:x:@.tmp-completion
                  strings.concat
                     get-value:x:@.result
                     .:@"
"
                     .:@"
"
                     .:@"Result of function invocation:
"
                     .:@"
"
                     .:```json
                     .:@"
"
                     get-value:x:@.function-result
                     .:@"
"
                     .:```
               set-value:x:@.function-result
         else
            set-value:x:@.tmp-completion
               get-value:x:@.result
         data.create
            table:ml_requests
            values
               type:x:@.arguments/*/type
               prompt:x:@.prompt
               completion:x:@.tmp-completion
               finish_reason:x:@.finish_reason
               session:x:@.arguments/*/session
               user_id:x:@.arguments/*/user_id
               referrer:x:@.arguments/*/referrer
