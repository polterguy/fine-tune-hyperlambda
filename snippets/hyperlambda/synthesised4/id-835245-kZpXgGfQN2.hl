
// This Hyperlambda code checks if a cached signal exists and then performs a nested conditional check. If the conditions are met, it connects to a data source and creates a record in the "ml_requests" table with specified values. Finally, it returns the cached signal result and additional metadata. The key slots are: [if], [exists], [and], [not-null], [eq], [convert], [data.connect], [data.create], [unwrap], and [return].
if
   exists:x:@signal/*/cached
   .lambda
      if
         and
            exists:x:@.arguments/*/supervised
            not-null:x:@.arguments/*/supervised
            eq
               convert:x:@.arguments/*/supervised
                  type:int
               .:int:1
         .lambda
            data.connect:[generic|magic]
               data.create
                  table:ml_requests
                  values
                     type:x:@.arguments/*/type
                     prompt:x:@.arguments/*/prompt
                     completion:x:@signal/*/cached
                     finish_reason:cached
                     session:x:@.arguments/*/session
                     user_id:x:@.arguments/*/user_id
                     referrer:x:@.arguments/*/referrer
      unwrap:x:+/*
      return
         result:x:@signal/*/cached
         finish_reason:cached
         stream:bool:false
