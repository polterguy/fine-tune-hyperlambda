
/*
 * This Hyperlambda code demonstrates a loop that continues as long as a node's value is less than or equal to 100. Inside the loop, the value is doubled using [math.multiply], and then updated with the new value using [set-value]. The loop effectively keeps multiplying the value by 2 until it exceeds 100. 
 * 
 * 1. [while] - Initiates a loop that continues while the condition is true.
 * 2. [lte] - Checks if the current value is less than or equal to 100.
 * 3. [get-value] - Retrieves the current value for comparison.
 * 4. [.lambda] - Contains the operations to execute within the loop.
 * 5. [math.multiply] - Doubles the current value.
 * 6. [set-value] - Updates the node with the new multiplied value.
 * 7. [get-value] - Retrieves the result from [math.multiply] for updating.
 */
while
   lte
      get-value:x:@.value
      .:int:100
   .lambda
      math.multiply
         get-value:x:@.value
         .:int:2
      set-value:x:@.value
         get-value:x:@math.multiply
