
/*
 * // This Hyperlambda code demonstrates how to perform an HTTP POST request to upload a file to the OpenAI API for fine-tuning purposes. It sets the necessary headers for authorization and content type, and constructs a multipart/form-data payload with two entities: a JSONL file and a plain text purpose. The response is automatically converted to the appropriate type.
 * // 1. [http.post] - Initiates an HTTP POST request to the specified URL.
 * // 2. [headers] - Specifies HTTP headers for the request, including authorization and content type.
 * // 3. [Authorization] - Uses a token for authorization.
 * // 4. [Content-Type] - Sets the content type to multipart/form-data.
 * // 5. [payload] - Constructs the multipart/form-data payload with entities.
 * // 6. [entity:application/jsonl] - Represents the JSONL file entity with headers and content.
 * // 7. [headers] - Specifies headers for the JSONL entity, including content disposition.
 * // 8. [Content-Disposition] - Sets the content disposition for the JSONL entity.
 * // 9. [content] - Specifies the content of the JSONL entity.
 * // 10. [entity:text/plain] - Represents a plain text entity for the purpose.
 * // 11. [headers] - Specifies headers for the plain text entity, including content disposition.
 * // 12. [Content-Disposition] - Sets the content disposition for the plain text entity.
 * // 13. [content] - Specifies the content of the plain text entity as "fine-tune".
 * // 14. [convert] - Indicates that the response should be automatically converted to the appropriate type.
 */
http.post:"https://api.openai.com/v1/files"
   headers
      Authorization:x:@.token
      Content-Type:multipart/form-data
   payload
      entity:application/jsonl
         headers
            Content-Disposition:x:@.filename
         content:x:@.file-data
      entity:text/plain
         headers
            Content-Disposition:form-data; name=purpose
         content:fine-tune
   convert:true
