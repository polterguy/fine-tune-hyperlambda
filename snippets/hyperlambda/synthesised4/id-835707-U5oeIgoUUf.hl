
// This Hyperlambda code constructs a SQL query string by concatenating various components. It uses [set-value] to modify the [.sql] node by appending a complex expression involving field lengths and replacements. The [strings.concat] slot is used to concatenate parts of the SQL expression, including field names and parameters, to dynamically build a query that calculates the occurrence of a substring within a field. The code leverages [get-value] to retrieve existing values from nodes like [.sql], [.fields], and [.no] to include them in the final SQL string.
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" (length("
      get-value:x:@.fields
      .:) - length(replace(lower(
      get-value:x:@.fields
      .:), @p
      get-value:x:@.no
      .:", ''))) / length(@p"
      get-value:x:@.no
      .:)
