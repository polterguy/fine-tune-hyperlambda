
/*
 * This Hyperlambda code checks if a session exists and is not null, then performs a series of operations to manage session data. It adds assistant or system roles to the session based on conditions, caches the session, and removes nodes while a condition is met. Finally, it converts the session data to a Hyperlambda format and stores it in the cache with a specified expiration. 
 * 1. [if] - Checks if session exists and is not null.
 * 2. [and] - Combines conditions for session existence and non-nullity.
 * 3. [exists] - Verifies the presence of the session.
 * 4. [not-null] - Ensures the session is not null.
 * 5. [.lambda] - Executes nested operations if conditions are met.
 * 6. [if] - Checks if the result is not null and not equal to an empty value.
 * 7. [neq] - Compares the result to an empty value.
 * 8. [unwrap] - Processes content for the assistant role.
 * 9. [add] - Adds roles and content to the session.
 * 10. [if] - Checks if new-prompt is not null and not equal to an empty value.
 * 11. [unwrap] - Processes content for the system role.
 * 12. [.cache-session] - Initializes cache session.
 * 13. [add] - Adds session nodes to cache session.
 * 14. [.tmp] - Temporary storage for fixed value.
 * 15. [set-value] - Assigns fixed value to tmp.
 * 16. [while] - Loops while tmp is greater than 0.
 * 17. [mt] - Checks if tmp is greater than 0.
 * 18. [remove-nodes] - Removes nodes from cache session.
 * 19. [math.decrement] - Decreases tmp value.
 * 20. [lambda2hyper] - Converts cache session to Hyperlambda format.
 * 21. [cache.set] - Stores session data in cache with expiration.
 */
if
   and
      exists:x:@.arguments/*/session
      not-null:x:@.arguments/*/session
   .lambda
      if
         and
            not-null:x:@.result
            neq:x:@.result
               .:
         .lambda
            unwrap:x:+/*/*/*/content
            add:x:@.session
               .
                  .
                     role:assistant
                     content:x:@.result
      if
         and
            not-null:x:@.new-prompt
            neq:x:@.new-prompt
               .:
         .lambda
            unwrap:x:+/*/*/*/content
            add:x:@.session
               .
                  .
                     role:system
                     content:x:@.new-prompt
      .cache-session
      add:x:@.cache-session
         get-nodes:x:@.session/*
      .tmp
      set-value:x:@.tmp
         get-value:x:@.fixed
      while
         mt:x:@.tmp
            .:int:0
         .lambda
            remove-nodes:x:@.cache-session/0
            math.decrement:x:@.tmp
      lambda2hyper:x:@.cache-session/*
      cache.set:x:@.arguments/*/session
         expiration:x:@.arguments/*/session_timeout
         value:x:@lambda2hyper
