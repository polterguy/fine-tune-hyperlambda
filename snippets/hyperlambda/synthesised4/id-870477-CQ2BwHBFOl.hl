
/*
 * This Hyperlambda code checks if a node with a name equal to the value of [get-name] exists within [vocabulary]. If it does, it further checks if a node with the same name exists within [.result]. If not, it adds a new node with that name and a value of 1. If it does exist, it increments the value of the existing node by 1. The code effectively counts occurrences of nodes based on their names.
 * 
 * 1. [if] - Checks if a node with a name equal to [get-name] exists in [vocabulary].
 * 2. [exists] - Evaluates the existence of a node within [vocabulary].
 * 3. [.lambda] - Contains the code to execute if the [exists] condition is true.
 * 4. [if] - Nested condition to check if a node does not exist in [.result].
 * 5. [not-exists] - Checks for the non-existence of a node in [.result].
 * 6. [.lambda] - Executes if the [not-exists] condition is true.
 * 7. [set-name] - Sets the name of a new node in [.result].
 * 8. [get-value] - Retrieves the value of [get-name].
 * 9. [add] - Adds a new node with an initial value of 1.
 * 10. [else] - Executes if the [not-exists] condition is false.
 * 11. [set-value] - Updates the value of an existing node in [.result].
 * 12. [math.add] - Increments the value of the existing node by 1.
 * 13. [get-value] - Retrieves the current value of the node in [.result].
 */
if
   exists:x:@vocabulary/*/={@get-name}
   .lambda
      if
         not-exists:x:@.result/*/{@get-name}
         .lambda
            set-name:x:+/*/*
               get-value:x:@get-name
            add:x:@.result
               .
                  .:int:1
      else
         set-value:x:@.result/*/{@get-name}
            math.add
               get-value:x:@.result/*/{@get-name}
               .:int:1
