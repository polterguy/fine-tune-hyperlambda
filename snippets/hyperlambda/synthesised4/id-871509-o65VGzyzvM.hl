
// This Hyperlambda code connects to a SQLite database named "hospital" and performs a read operation on the "Patients" table. It dynamically adds and removes nodes related to ordering, direction, limit, and offset from the arguments, and constructs a query with specified columns. The [data.read] operation retrieves patient information based on conditions specified in the [where] clause, and the results are yielded as a list of patients.
data.connect:[generic|hospital]
   database-type:sqlite
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Patients
      columns
         Patients.PatientID
         Patients.FirstName
         Patients.LastName
         Patients.DateOfBirth
         Patients.Gender
         Patients.Address
         Patients.PhoneNumber
         Patients.Email
         Patients.EmergencyContactName
         Patients.EmergencyContactPhone
         Patients.AdmissionDate
         Patients.DischargeDate
      where
         and
   yield
      patients:x:@data.read/*
