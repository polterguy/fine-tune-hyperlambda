
/*
 * This Hyperlambda code checks two conditions using [and]: whether a [uri] node exists within [.dp] and whether this [uri] is not already present in the [result] node. If both conditions are true, it executes a lambda that unwraps nodes and adds a new structure to the [result] node with [prompt], [uri], and [distance] values extracted from [.dp].
 * 
 * 1. [if] - Starts a conditional block that executes its lambda if the condition is true.
 * 2. [and] - Combines two conditions that must both be true for the lambda to execute.
 * 3. [not-null] - Checks if the [uri] node within [.dp] is not null.
 * 4. [not-exists] - Ensures the [uri] is not already in the [result] node.
 * 5. [.lambda] - Contains the code to execute if the [if] condition is true.
 * 6. [unwrap] - Evaluates and unwraps nodes for further processing.
 * 7. [add] - Appends a new node structure to the [result] node.
 * 8. [prompt], [uri], [distance] - Nodes added to [result] with values from [.dp].
 */
if
   and
      not-null:x:@.dp/#/*/uri
      not-exists:x:"@.result/*/*/uri/\"={@.dp/#/*/uri}\""
   .lambda
      unwrap:x:+/*/*/*
      add:x:@.result
         .
            .
               prompt:x:@.dp/#/*/prompt
               uri:x:@.dp/#/*/uri
               distance:x:@.dp/#/*/distance
