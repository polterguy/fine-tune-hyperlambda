
/*
 * 1. `@tasks.list`: This iterator searches for the first node with the name "tasks.list" in the current context. It starts from the current node and traverses upwards and sideways in the hierarchy to find the node. This is useful when you need to access a specific node by name, regardless of its position relative to the current node.
 * 
 * 2. `*`: This iterator retrieves all children nodes of the node found by the previous iterator. It is used to access all direct descendants of a node, which is useful when you want to perform operations on or analyze each child node individually.
 * 
 * Potential use case: This expression can be used to iterate over a list of tasks in a task management system, where each task is a child node of the "tasks.list" node. This allows for operations like displaying all tasks, modifying them, or applying a function to each task.
 */

.:x:@tasks.list/*