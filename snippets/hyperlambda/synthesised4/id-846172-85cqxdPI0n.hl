
// This Hyperlambda code snippet is a conditional logic block that checks if a specific table in a SQLite database has an autoincrement primary key. It first adds a node with a default value of false for the "automatic" field. It then converts the "type" field to lowercase and checks if it equals "integer" and if the "pk" field equals 1. If both conditions are true, it executes an SQL query to check for the presence of an autoincrement attribute in the table's schema. If the query returns results, it sets the "automatic" field to true.
else
   add:x:@.tmp/*
      .
         automatic:bool:false
   strings.to-lower:x:@.dp/#/*/type
   if
      and
         eq:x:@strings.to-lower
            .:integer
         eq:x:@.dp/#/*/pk
            .:long:1
      .lambda
         sqlite.select:"select 1 from sqlite_master where type = 'table' and name = @table and sql like '%AUTOINCREMENT%'"
            @table:x:@.arguments/*/table
         if
            exists:x:@sqlite.select/*/*
            .lambda
               set-value:x:@.tmp/*/*/automatic
                  .:bool:true
