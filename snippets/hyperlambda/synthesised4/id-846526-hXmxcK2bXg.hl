
// This Hyperlambda code iterates over each child node of [words] using [for-each]. For each iteration, it checks if [no] equals zero using [if] and [eq]. If true, it constructs a SQL CASE statement using [strings.concat] and assigns it to [sql]. If false, it appends a similar CASE statement prefixed with a "+" to [sql]. The [math.increment] slot increments [no] by 1 after each iteration.
for-each:x:@.words/*
   if
      eq:x:@.no
         .:int:0
      .lambda
         set-value:x:@.sql
            strings.concat:x:@.sql
               get-value:x:@.sql
               .:" CASE WHEN ((length("
               get-value:x:@.fields
               .:) - length(replace(lower(
               get-value:x:@.fields
               .:), @p
               get-value:x:@.no
               .:", ''))) / length(@p"
               get-value:x:@.no
               .:)) > 0 THEN 1 ELSE 0 END
   else
      set-value:x:@.sql
         strings.concat:x:@.sql
            get-value:x:@.sql
            .:" + CASE WHEN ((length("
            get-value:x:@.fields
            .:) - length(replace(lower(
            get-value:x:@.fields
            .:), @p
            get-value:x:@.no
            .:", ''))) / length(@p"
            get-value:x:@.no
            .:)) > 0 THEN 1 ELSE 0 END
   math.increment:x:@.no
