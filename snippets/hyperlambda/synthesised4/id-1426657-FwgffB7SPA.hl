
/*
 * This Hyperlambda code checks if a query parameter exists in a URL and processes it accordingly. It first verifies the presence of a query in the arguments. If a query exists, it splits the URL at the '?' character and checks if there are multiple parts. If so, it further splits the query string by '&' to isolate each parameter. It then iterates through these parameters to find one that starts with the specified query name followed by '='. If found, it decodes the value and updates the URL. If the query is not found, it sets the URL to an empty value. If no query is provided initially, it directly sets the URL to an empty value.
 * 
 * 1. [if] - Checks if a query parameter exists in the arguments.
 * 2. [strings.split] - Splits the URL at the '?' character.
 * 3. [if] - Checks if there are multiple parts after splitting.
 * 4. [strings.split] - Splits the query string by '&' to isolate parameters.
 * 5. [for-each] - Iterates through each parameter.
 * 6. [if] - Checks if a parameter starts with the specified query name.
 * 7. [set-value] - Updates the found flag to true.
 * 8. [strings.split] - Splits the parameter at '=' to separate name and value.
 * 9. [set-value] - Decodes and updates the URL with the parameter value.
 * 10. [if] - Checks if the query was not found.
 * 11. [set-value] - Sets the URL to an empty value.
 * 12. [else] - Handles the case where no query is provided initially.
 * 13. [set-value] - Sets the URL to an empty value.
 */
if
   exists:x:@.arguments/*/query
   .lambda
      strings.split:x:@.url
         .:?
      if
         mt
            get-count:x:@strings.split/*
            .:int:1
         .lambda
            strings.split:x:@strings.split/1
               .:&
            .found:bool:false
            for-each:x:@strings.split/*
               if
                  strings.starts-with:x:@.dp/#
                     strings.concat
                        get-value:x:@.arguments/*/query
                        .:=
                  .lambda
                     set-value:x:@.found
                        .:bool:true
                     strings.split:x:@.dp/#
                        .:=
                     set-value:x:@.url
                        strings.url-decode:x:@strings.split/1
            if
               not
                  get-value:x:@.found
               .lambda
                  set-value:x:@.url
      else
         set-value:x:@.url
