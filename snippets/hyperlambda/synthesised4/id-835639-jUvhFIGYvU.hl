
// This Hyperlambda code constructs a SQL query string by concatenating various parts to calculate the number of occurrences of a substring within a field. It uses [set-value] to update the [.sql] node, and [strings.concat] to build the SQL expression. The code retrieves values from [.sql], [.fields], and [.no] nodes to dynamically create the SQL statement, which involves using SQL functions like `length` and `replace` to determine the count of a substring in a field.
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" (length("
      get-value:x:@.fields
      .:) - length(replace(lower(
      get-value:x:@.fields
      .:), @p
      get-value:x:@.no
      .:", ''))) / length(@p"
      get-value:x:@.no
      .:)
