
// This Hyperlambda code performs a series of operations based on conditions involving the presence and value of a [max] argument. It constructs a URL from a string, splits it, and checks for specific query parameters. If a parameter is found, it decodes and sets it; otherwise, it sets a default URL. The code also decrements the [max] argument, joins text from specific nodes, and adds results to a collection, including a URL, title, and description.
if
   or
      not-exists:x:@.arguments/*/max
      mt:x:@.arguments/*/max
         .:int:0
   .lambda
      .cur
      set-value:x:@.cur
         strings.concat
            .:"http:"
            get-value:x:"@.dp/#/*/\\@href"
      strings.split:x:@.cur
         .:?
      if
         mt
            get-count:x:@strings.split/*
            .:int:1
         .lambda
            strings.split:x:@strings.split/1
               .:&
            .found:bool:false
            for-each:x:@strings.split/*
               if
                  strings.starts-with:x:@.dp/#
                     strings.concat
                        .:uddg
                        .:=
                  .lambda
                     set-value:x:@.found
                        .:bool:true
                     strings.split:x:@.dp/#
                        .:=
                     set-value:x:@.cur
                        strings.url-decode:x:@strings.split/1
            if
               not
                  get-value:x:@.found
               .lambda
                  set-value:x:@.url
      else
         set-value:x:@.url
      math.decrement:x:@.arguments/*/max
      strings.join:x:"@.dp/#/././**/a/*/\\@class/=result__snippet/./**/\\#text"
         .:
      unwrap:x:+/*/*/*
      add:x:@.result/*/result
         .
            .
               url:x:@.cur
               title:x:"@.dp/#/*/\\#text"
               description:x:@strings.join
