
/*
 * This Hyperlambda code checks if the value of [.no] is equal to 0. If true, it concatenates a SQL string expression to [.sql] that calculates the occurrence of a character in a field. It uses [strings.concat] to build the SQL expression dynamically by retrieving values from [.sql], [.fields], and [.no]. The expression involves SQL functions like length and replace to determine the frequency of a character in a field. 
 * 
 * 1. [if] - Checks if [.no] is equal to 0.
 * 2. [eq] - Compares [.no] with the integer 0.
 * 3. [set-value] - Sets the value of [.sql] to the result of the concatenation.
 * 4. [strings.concat] - Concatenates multiple values to form a SQL string.
 * 5. [get-value] - Retrieves the current value of [.sql].
 * 6. [get-value] - Retrieves the value of [.fields] for SQL field reference.
 * 7. [get-value] - Retrieves the value of [.no] for SQL parameter reference.
 */
if
   eq:x:@.no
      .:int:0
   .lambda
      set-value:x:@.sql
         strings.concat:x:@.sql
            get-value:x:@.sql
            .:" (length("
            get-value:x:@.fields
            .:) - length(replace(lower(
            get-value:x:@.fields
            .:), @p
            get-value:x:@.no
            .:", ''))) / length(@p"
            get-value:x:@.no
            .:)
