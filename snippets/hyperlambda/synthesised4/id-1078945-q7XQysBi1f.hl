
/*
 * 1. `+` - This iterator retrieves the elder sibling (next node) of the current node. It is useful when you want to access the node immediately following the current node in the hierarchy.
 * 2. `*` - This iterator retrieves all children nodes of its previous result set. It allows you to access all direct descendants of the node returned by the previous iterator.
 * 3. `*` - This second `*` iterator retrieves all children nodes of the nodes returned by the previous `*` iterator. It allows you to access the grandchildren of the node returned by the `+` iterator.
 * 
 * Use cases:
 * - This expression can be used to navigate to the next node in a sequence and then access all of its grandchildren. It is useful in scenarios where you need to process or evaluate data that is nested two levels deep from a specific starting point in a sequence.
 */

.:x:+/*/*