
/*
 * This Hyperlambda code manages the invocation of AI functions, handling errors and results, and signaling the session with appropriate messages. It checks for function invocation limits, executes the function if within limits, and processes the result, ensuring it doesn't exceed token limits. It signals success or error messages to the session and constructs a new prompt based on the outcome.
 * 
 * 1. [if] - Checks if the current node contains a function invocation.
 * 2. [try] - Attempts to execute the AI function.
 * 3. [if] - Checks if the number of iterations is less than or equal to one.
 * 4. [log.error] - Logs an error if too many function invocations occur.
 * 5. [sockets.signal] - Sends a signal to the session with error details.
 * 6. [else] - Executes the AI function if within limits.
 * 7. [execute] - Invokes the AI function.
 * 8. [lambda2json] - Converts the result to JSON format.
 * 9. [if] - Checks if the result exceeds the maximum token limit.
 * 10. [throw] - Throws an error if the result is too large.
 * 11. [config.get] - Retrieves a success message from configuration.
 * 12. [unwrap] - Unwraps the configuration result.
 * 13. [sockets.signal] - Sends a success signal to the session.
 * 14. [if] - Checks if the execution result exists.
 * 15. [set-value] - Constructs a new prompt with the function result.
 * 16. [else] - Constructs a success message if no result exists.
 * 17. [.catch] - Handles exceptions during AI function execution.
 * 18. [log.error] - Logs an error message if execution fails.
 * 19. [unwrap] - Unwraps the error message.
 * 20. [sockets.signal] - Sends an error signal to the session.
 * 21. [set-value] - Constructs a new prompt with the error message.
 */
if
   strings.contains:x:@.dp/#
      .:FUNCTION_INVOCATION[/
   .lambda
      try
         if
            lte:x:@.iterations
               .:int:1
            .lambda
               log.error:Too many function invocations
               sockets.signal:x:@.session
                  args
                     function_error:Too many function invocations
               sockets.signal:x:@.session
                  args
                     function_waiting:bool:false
               sockets.signal:x:@.session
                  args
                     error:bool:true
                     status:int:500
                     message:Too many function invocations. Configure your type to handle more invocations or change your prompt.
               sockets.signal:x:@.session
                  args
                     finished:bool:true
         else
            execute:magic.ai.functions.invoke
               type:x:@.type
               session:x:@.session
               user-id:x:@.user-id
               invocation:x:@.dp/#
               extra:x:@.extra
            lambda2json:x:@execute/*/result/*
               format:true
            if
               mt
                  openai.tokenize:x:@lambda2json
                  get-value:x:@.arguments/@.arguments/*/max_context_tokens
               .lambda
                  throw:Result too large, try to limit your result
                     status:int:400
                     public:bool:true
            config.get:"magic:chat:functions:success-message"
               .:Success!
            unwrap:x:+/*/*
            sockets.signal:x:@.session
               args
                  function_result:x:@config.get
                  invocation:x:@execute/*/json
                  file:x:@execute/*/workflow
            if
               exists:x:@execute/*/result/*
               .lambda
                  set-value:x:@.new-prompt
                     strings.concat
                        get-value:x:@.new-prompt
                        .:"Response from '"
                        get-value:x:@execute/*/workflow
                        .:@"' was:
```json
"
                        get-value:x:@lambda2json
                        .:@"
"
                        .:```
                        .:@"
"
                        .:@"
"
                  set-value:x:@.function-result
                     strings.concat
                        get-value:x:@.function-result
                        get-value:x:@lambda2json
                        .:"\n"
            else
               set-value:x:@.new-prompt
                  strings.concat
                     get-value:x:@.new-prompt
                     .:"Invocation of '"
                     get-value:x:@execute/*/workflow
                     .:"' was a success."
                     .:@"
"
                     .:@"
"
      .catch
         log.error:Could not execute AI function
            message:x:@.arguments/*/message
         unwrap:x:+/*/*
         sockets.signal:x:@.session
            args
               function_error:x:@.arguments/*/message
         set-value:x:@.new-prompt
            strings.concat
               get-value:x:@.new-prompt
               .:"Invocation failed, exception message was: '"
               get-value:x:@.arguments/*/message
               .:"'"
               .:@"
"
               .:@"
"
