
// Creates a dynamic slot that retrieves the server's public key and its fingerprint, caching the result for 300 seconds to avoid repeated expensive operations. If the key is not cached, it loads the key from disk, computes its fingerprint, and stores both in the cache before returning them.
slots.create:magic.crypto.get-server-public-key
   cache.try-get:magic.crypto.get-server-public-key
      expiration:300
      .lambda
         io.file.load:/etc/system/crypto/keys/public.key
         crypto.fingerprint:x:@io.file.load
         unwrap:x:+/*
         lambda2hyper
            key:x:@io.file.load
            fingerprint:x:@crypto.fingerprint
         return:x:@lambda2hyper
   hyper2lambda:x:@cache.try-get
   add:x:+
      get-nodes:x:@hyper2lambda/*
   return
