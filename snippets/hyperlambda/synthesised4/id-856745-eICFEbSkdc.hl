
// This Hyperlambda code processes a JSON response by converting it to a lambda object using [json2lambda]. It checks if the "finish_reason" exists and is not null, and if so, it sends a signal with this reason. It also checks if the "content" is not null or empty, concatenates it to a result, and sends it as a message signal. The [unwrap] slot is used to evaluate expressions, and [sockets.signal] sends signals with arguments.
else
   json2lambda:x:@strings.trim
   if
      and
         exists:x:@json2lambda/*/choices/0/*/finish_reason
         not-null:x:@json2lambda/*/choices/0/*/finish_reason
      .lambda
         unwrap:x:+/*/*
         sockets.signal:x:@.session
            args
               finish_reason:x:@json2lambda/*/choices/0/*/finish_reason
   if
      and
         not-null:x:@json2lambda/*/choices/0/*/delta/*/content
         neq:x:@json2lambda/*/choices/0/*/delta/*/content
            .:
      .lambda
         set-value:x:@.result
            strings.concat
               get-value:x:@.result
               get-value:x:@json2lambda/*/choices/0/*/delta/*/content
         unwrap:x:+/*/*
         sockets.signal:x:@.session
            args
               message:x:@json2lambda/*/choices/0/*/delta/*/content
