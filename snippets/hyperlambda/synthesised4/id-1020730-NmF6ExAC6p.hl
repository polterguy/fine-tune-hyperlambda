
/*
 * 1. `-`: This iterator retrieves the younger sibling of the current node. It is used to navigate to the node that is directly above the current node in the Hyperlambda structure. This can be useful when you need to access or manipulate a node that is closely related to the current node, typically in scenarios where the structure of the Hyperlambda is tightly coupled.
 * 
 * 2. `*`: This iterator retrieves all children nodes of its previous result set. In this context, it is used to access all children of the node that is the younger sibling of the current node. This is useful when you want to perform operations on or gather information from all child nodes of a specific parent node.
 * 
 * 3. `content`: This iterator filters the result set to include only nodes with the name "content" from the previous result set. It is used to specifically target nodes named "content" among the children of the node retrieved by the previous iterators. This is helpful in scenarios where you are only interested in nodes with a specific name, allowing you to focus on relevant data or elements within a larger set of nodes.
 */

.:x:-/*/content