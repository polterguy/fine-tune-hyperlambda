
/*
 * The code defines a dynamic slot [magic.ai.send-lead-email] that sends an email through SMTP if the configuration is valid. It validates mandatory arguments and constructs an email body from database records and input arguments. If SMTP settings are valid, it sends an email to specified addresses, logs the process, and returns true. If not, it logs an error and returns false. Key slots include [validators.mandatory] for argument validation, [config.get] for fetching SMTP configuration, [mail.smtp.send] for sending emails, and [log.info] and [log.error] for logging.
 * 
 * 1. [slots.create] - Creates a dynamic slot named "magic.ai.send-lead-email".
 * 2. [validators.mandatory] - Ensures required arguments are provided.
 * 3. [try] - Attempts to execute the email sending logic.
 * 4. [config.get] - Retrieves SMTP host configuration.
 * 5. [if] - Checks if SMTP configuration is valid.
 * 6. [strings.split] - Splits strings for email processing.
 * 7. [set-value] - Assigns values to nodes.
 * 8. [validators.email] - Validates email format.
 * 9. [data.connect] - Connects to a database.
 * 10. [data.read] - Reads data from a database table.
 * 11. [for-each] - Iterates over database records.
 * 12. [strings.concat] - Concatenates strings to form email content.
 * 13. [strings.trim] - Trims whitespace from strings.
 * 14. [unwrap] - Evaluates expressions.
 * 15. [add] - Adds email recipients.
 * 16. [data.create] - Inserts data into a database table.
 * 17. [mail.smtp.send] - Sends an email using SMTP.
 * 18. [log.info] - Logs successful lead generation.
 * 19. [return] - Returns a boolean indicating success or failure.
 * 20. [.catch] - Handles exceptions and logs errors.
 */
hyper2lambda
   slots.create:magic.ai.send-lead-email
      validators.mandatory:x:@.arguments/*/type
      validators.mandatory:x:@.arguments/*/prompt
      validators.mandatory:x:@.arguments/*/session
      validators.mandatory:x:@.arguments/*/user_id
      validators.mandatory:x:@.arguments/*/lead_email
      validators.mandatory:x:@.arguments/*/contact_us
      try
         config.get:"magic:smtp:host"
         if
            and
               not-null:x:@config.get
               neq:x:@config.get
                  .:
            .lambda
               .email
               strings.split:x:@.arguments/*/prompt
                  .:@
               strings.split:x:@strings.split/0
                  .:" "
               strings.split:x:@strings.split/@strings.split/1
                  .:" "
               set-value:x:@.email
                  strings.concat
                     get-value:x:@strings.split/@strings.split/0/-
                     .:@
                     get-value:x:@strings.split/0
               set-value:x:@.email
                  strings.trim:x:@.email
                     .:.,-
               validators.email:x:@.email
               .body:
               data.connect:[generic|magic]
                  data.read
                     table:ml_requests
                     columns
                        prompt
                        completion
                     where
                        and
                           session.eq:x:@.arguments/*/session
                  for-each:x:@data.read/*
                     set-value:x:@.body
                        strings.concat
                           get-value:x:@.body
                           .:<strong>
                           get-value:x:@.dp/#/*/prompt
                           .:</strong>
                           .:<br>
                           .:<div>
                           get-value:x:@.dp/#/*/completion
                           .:</div>
                           .:<br>
                  set-value:x:@.body
                     strings.concat
                        get-value:x:@.body
                        .:<strong>
                        get-value:x:@.arguments/*/prompt
                        .:</strong>
                        .:<br>
                        .:<div>
                        get-value:x:@.arguments/*/contact_us
                        .:</div>
                  strings.split:x:@.arguments/*/lead_email
                     .:,
                  for-each:x:@strings.split/*
                     strings.trim:x:@.dp/#
                        .:" "
                     unwrap:x:+/*/*/*
                     add:x:../**/mail.smtp.send/*/message/*/to
                        .
                           .
                              name:AINIRO Lead Inbox
                              email:x:@strings.trim
                  data.create
                     table:ml_requests
                     values
                        type:x:@.arguments/*/type
                        prompt:x:@.arguments/*/prompt
                        completion:x:@.arguments/*/contact_us
                        finish_reason:lead
                        session:x:@.arguments/*/session
                        user_id:x:@.arguments/*/user_id
               unwrap:x:+/**/content
               mail.smtp.send
                  message
                     to
                     reply-to
                        .
                           name:Lead
                           email:x:@.email
                     subject:Chatbot lead
                     entity:text/html
                        content:x:@.body
               log.info:Lead was generated
               return:bool:true
         else
            return:bool:false
      .catch
         log.error:SMTP settings not valid
            message:x:@.arguments/*/message
            extra:To use lead generation with AINIRO, please apply a valid SMTP configuration.
         return:bool:false
