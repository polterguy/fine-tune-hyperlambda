
/*
 * // This Hyperlambda code iterates through each node under [.snippets] and checks if the nodes have non-null [prompt] and [completion] children with a length greater than 0. If the conditions are met, it trims whitespace from the [prompt] and [completion] values and adds the node to a [return] node. This is useful for cleaning and collecting valid snippets.
 * // 1. [for-each] - Iterates through each node under [.snippets].
 * // 2. [if] - Checks conditions for the current node.
 * // 3. [and] - Ensures all conditions are true.
 * // 4. [exists] - Checks if [prompt] and [completion] nodes exist.
 * // 5. [not-null] - Ensures [prompt] and [completion] nodes are not null.
 * // 6. [mt] - Checks if the length of [prompt] is greater than 0.
 * // 7. [.lambda] - Executes the following actions if conditions are true.
 * // 8. [set-value] - Trims whitespace from [prompt] and [completion] values.
 * // 9. [add] - Adds the node to a [return] node.
 * // 10. [get-nodes] - Retrieves the current node.
 */
for-each:x:@.snippets/*
   if
      and
         exists:x:@.dp/#/*/prompt
         not-null:x:@.dp/#/*/prompt
         mt
            strings.length:x:@.dp/#/*/prompt
            .:int:0
         exists:x:@.dp/#/*/completion
         not-null:x:@.dp/#/*/completion
      .lambda
         set-value:x:@.dp/#/*/prompt
            strings.trim:x:@.dp/#/*/prompt
         set-value:x:@.dp/#/*/completion
            strings.trim:x:@.dp/#/*/completion
         add:x:../*/return
            get-nodes:x:@.dp/#
