
/*
 * The code iterates over each node in the [.arguments] node set using [for-each], retrieves the name of each node with [get-name], and checks if the name does not start with "legend" using [if] and [not]. If the condition is true, it changes the node's name using [set-name], adds a new node structure to [.bars] with [add], and splits the node's value by a comma using [strings.split]. 
 * 
 * 1. [for-each] - Iterates over each node in the [.arguments] node set.
 * 2. [get-name] - Retrieves the name of the current node.
 * 3. [if] - Checks if the node's name does not start with "legend".
 * 4. [not] - Inverts the condition to check for names not starting with "legend".
 * 5. [strings.starts-with] - Checks if the node's name starts with "legend".
 * 6. [set-name] - Changes the name of the node.
 * 7. [add] - Adds a new node structure to [.bars].
 * 8. [strings.split] - Splits the node's value by a comma.
 */
for-each:x:@.arguments/*
   get-name:x:@.dp/#
   if
      not
         strings.starts-with:x:@get-name
            .:legend
      .lambda
         set-name:x:+/*/*
            get-value:x:@get-name
         add:x:@.bars
            .
               .
         add:x:@.bars/0/-
            strings.split:x:@.dp/#
               .:,
