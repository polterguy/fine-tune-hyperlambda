
/*
 * This Hyperlambda code checks if the [warning] node is not null using [not-null]. If true, it evaluates a lambda object that first uses [unwrap] to evaluate all expressions in the current context, and then adds a [warning] node with the value from the [warning] node to the [return] node using [add]. 
 * 
 * 1. [if] - Checks a condition and executes its lambda if true.
 * 2. [not-null] - Evaluates to true if the [warning] node is not null.
 * 3. [.lambda] - Contains the code to execute if the condition is true.
 * 4. [unwrap] - Evaluates expressions in the current context.
 * 5. [add] - Adds a [warning] node to the [return] node.
 */
if
   not-null:x:@.warning
   .lambda
      unwrap:x:+/*/*
      add:x:../*/return
         .
            warning:x:@.warning
