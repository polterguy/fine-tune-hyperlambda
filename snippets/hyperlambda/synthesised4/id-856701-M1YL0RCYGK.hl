
// This Hyperlambda code defines a dynamic slot [magic.auth.captcha-verify] to verify CAPTCHA tokens. It validates mandatory arguments [token], [workload], and [age], setting default values if necessary. The token is split into parts, and its structure is verified. The time challenge is checked for validity, and the workload is verified by appending zeros to match the required length. Finally, the token's hash is compared against a server-generated hash to ensure authenticity, returning true if all checks pass.
slots.create:magic.auth.captcha-verify
   validators.mandatory:x:@.arguments/*/token
   validators.integer:x:@.arguments/*/workload
   validators.integer:x:@.arguments/*/age
   validators.default:x:@.arguments
      workload:int:3
      age:int:10000
   .token
   .time-challenge
   .seed
   strings.split:x:@.arguments/*/token
      .:;
   if
      neq
         get-count:x:@strings.split/*
         .:int:3
      .lambda
         throw:Invalid CAPTCHA token, token did not have 3 parts. A valid Magic CAPTCHA token requires 3 parts; actual token, UNIX time and seed value used to generate token.
            status:int:400
            public:bool:true
   set-value:x:@.token
      strings.to-lower:x:@strings.split/0
   set-value:x:@.time-challenge
      get-value:x:@strings.split/1
   set-value:x:@.seed
      convert:x:@strings.split/2
         type:long
   if
      strings.starts-with:x:@.time-challenge
         .:c_
      .lambda
         if
            neq
               cache.get:x:@.time-challenge
               .:valid
            .lambda
               throw:Invalid CAPTCHA token. Challenge for token was not valid.
                  status:int:400
                  public:bool:true
         cache.set:x:@.time-challenge
   else
      set-value:x:@.time-challenge
         convert:x:@.time-challenge
            type:long
      if
         or
            lt
               math.add
                  get-value:x:@.time-challenge
                  get-value:x:@.arguments/*/age
               date.unix
            mt
               get-value:x:@.time-challenge
               date.unix
         .lambda
            throw:"Invalid CAPTCHA token. Please check your computer's BIOS time if you suspect this is a mistake."
               status:int:400
               public:bool:true
   .endswith:
   while
      lt
         strings.length:x:@.endswith
         get-value:x:@.arguments/*/workload
      .lambda
         set-value:x:@.endswith
            strings.concat
               get-value:x:@.endswith
               .:0
   if
      not
         strings.ends-with:x:@.token
            get-value:x:@.endswith
      .lambda
         throw:Invalid CAPTCHA token. Workload requirements of endpoint was not met.
            status:int:400
            public:bool:true
   config.get:"magic:auth:secret"
   crypto.hash.sha256:x:@config.get
   crypto.hash.sha256:x:-
   strings.concat
      get-value:x:@crypto.hash.sha256
      .:;
      get-value:x:@.time-challenge
      .:;
      get-value:x:@.seed
   if
      neq
         crypto.hash.sha256:x:@strings.concat
         get-value:x:@.token
      .lambda
         throw:Invalid CAPTCHA token. Please verify that public key was generated by server token was submitted to.
            status:int:400
            public:bool:true
   return:bool:true
