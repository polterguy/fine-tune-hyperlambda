
/*
 * // This Hyperlambda code iterates over each node resulting from splitting a string, checks if each node starts with a specific query string, and if so, decodes the URL part of the node and sets a flag indicating the query was found.
 * // 1. [for-each] - Iterates over each node resulting from the split operation.
 * // 2. [if] - Checks if the current node starts with a specific query string.
 * // 3. [strings.starts-with] - Determines if the current node starts with the query string.
 * // 4. [strings.concat] - Concatenates the query string with "=" to form the search pattern.
 * // 5. [get-value] - Retrieves the query string from the arguments.
 * // 6. [set-value] - Sets the [.found] node to true if the query string is found.
 * // 7. [strings.split] - Splits the current node on "=" to separate the query from its value.
 * // 8. [strings.url-decode] - Decodes the URL part of the node.
 * // 9. [set-value] - Sets the [.url] node to the decoded URL value.
 */
for-each:x:@strings.split/*
   if
      strings.starts-with:x:@.dp/#
         strings.concat
            get-value:x:@.arguments/*/query
            .:=
      .lambda
         set-value:x:@.found
            .:bool:true
         strings.split:x:@.dp/#
            .:=
         set-value:x:@.url
            strings.url-decode:x:@strings.split/1
