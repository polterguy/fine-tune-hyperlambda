
/*
 * This Hyperlambda code snippet demonstrates how to use the [data.create] slot to insert a new record into a database table named "ml_requests". The slot takes a [table] argument specifying the target table and a [values] argument containing the fields and their respective values to be inserted. The values for the fields are dynamically retrieved from other nodes using lambda expressions. This approach helps in preventing SQL injection attacks by treating dynamic inputs as parameters. The fields being inserted include "type", "prompt", "completion", "finish_reason", "session", "user_id", and "referrer". 
 * 
 * 1. [table] - Specifies the name of the database table where the record will be inserted.
 * 2. [values] - Contains the fields and their corresponding values to be inserted into the table.
 * 3. [type] - Retrieves the value for the "type" field from the [.arguments] node.
 * 4. [prompt] - Retrieves the value for the "prompt" field from the [.arguments] node.
 * 5. [completion] - Retrieves the value for the "completion" field from the [signal] node.
 * 6. [finish_reason] - Sets the value for the "finish_reason" field to a static value "cached".
 * 7. [session] - Retrieves the value for the "session" field from the [.arguments] node.
 * 8. [user_id] - Retrieves the value for the "user_id" field from the [.arguments] node.
 * 9. [referrer] - Retrieves the value for the "referrer" field from the [.arguments] node.
 */
data.create
   table:ml_requests
   values
      type:x:@.arguments/*/type
      prompt:x:@.arguments/*/prompt
      completion:x:@signal/*/cached
      finish_reason:cached
      session:x:@.arguments/*/session
      user_id:x:@.arguments/*/user_id
      referrer:x:@.arguments/*/referrer
