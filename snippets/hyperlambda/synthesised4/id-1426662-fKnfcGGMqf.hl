
/*
 * // This Hyperlambda code retrieves and caches system information with a 5-minute expiration. It gathers data about the system's version, task count, slot vocabulary, log capabilities, and endpoints. If timeshift capabilities are present, it logs various events. It also counts endpoints, vocabulary slots, dynamic slots, and cache items. The code retrieves configuration settings for the default database and timezone, checks for a task scheduler, and lists modules, counting lines of code and files. Finally, it returns a comprehensive summary of the system's state, including version, task count, log items, cache items, endpoints, slots, dynamic slots, default database, default timezone, recent log items, and module details.
 * 1. [cache.try-get] - Caches the system information with a specified expiration time.
 * 2. [version] - Retrieves the system version.
 * 3. [tasks.count] - Counts the number of tasks in the system.
 * 4. [slots.vocabulary] - Retrieves the vocabulary of slots related to system information.
 * 5. [for-each] - Iterates over nodes to perform operations.
 * 6. [signal] - Invokes a slot and retrieves its results.
 * 7. [add] - Adds nodes or values to a specified location.
 * 8. [log.count] - Counts log items.
 * 9. [log.capabilities] - Retrieves log capabilities.
 * 10. [if] - Checks if timeshift capabilities exist.
 * 11. [endpoints.list] - Lists all endpoints.
 * 12. [set-value] - Sets values for nodes.
 * 13. [vocabulary] - Retrieves vocabulary information.
 * 14. [slots.vocabulary] - Retrieves dynamic slot vocabulary.
 * 15. [config.get] - Retrieves configuration settings.
 * 16. [cache.count] - Counts cache items.
 * 17. [io.folder.list] - Lists folders in a specified path.
 * 18. [strings.split] - Splits strings based on a delimiter.
 * 19. [unwrap] - Evaluates expressions and unwraps nodes.
 * 20. [math.increment] - Increments a value.
 * 21. [set-name] - Sets the name of a node.
 * 22. [lambda2hyper] - Constructs a summary of system information.
 * 23. [return] - Returns the constructed summary.
 */
cache.try-get:system-information
   expiration:300
   .lambda
      version
      tasks.count
      slots.vocabulary:magic.system-information.
      for-each:x:-/*
         signal:x:@.dp/#
         add:x:+/*
            get-nodes:x:@signal/*
         add:x:././*/lambda2hyper
            .
      log.count
      log.capabilities
      if:x:@log.capabilities/*/can-timeshift
         add:x:@.lambda/*/lambda2hyper
            .
               timeshifts
                  logins
                     name:Logins
                     description:Successfully authenticated users
                     items
                  access_denied
                     name:Access denied
                     description:Access denied requests
                     items
                  openai_success
                     name:OpenAI success
                     description:Successful OpenAI API requests
                     items
                  openai_failure
                     name:OpenAI failure
                     description:Failed OpenAI API requests
                     items
                  lead_generated
                     name:Lead
                     description:Lead generated
                     items
         add:x:@.lambda/*/lambda2hyper/*/timeshifts/*/logins/*/items
            log.timeshift:User successfully authenticated
         add:x:@.lambda/*/lambda2hyper/*/timeshifts/*/access_denied/*/items
            log.timeshift:Access denied
         add:x:@.lambda/*/lambda2hyper/*/timeshifts/*/openai_success/*/items
            log.timeshift:Invoking OpenAI was a success
         add:x:@.lambda/*/lambda2hyper/*/timeshifts/*/openai_failure/*/items
            log.timeshift:Something went wrong while invoking OpenAI
         add:x:@.lambda/*/lambda2hyper/*/timeshifts/*/lead_generated/*/items
            log.timeshift:Lead was generated
      endpoints.list
      .no-endpoints
      set-value:x:-
         get-count:x:@endpoints.list/*
      add:x:@.lambda/*/lambda2hyper/*/last_log_items
         log.query
            max:10
      vocabulary
      .no-slots
      set-value:x:-
         get-count:x:@vocabulary/*
      slots.vocabulary
      .no-dynamic-slots
      set-value:x:-
         get-count:x:@slots.vocabulary/*
      .default-db
      set-value:x:-
         config.get:"magic:databases:default"
      .default-timezone
      set-value:x:-
         config.get:"magic:culture:defaultTimeZone"
      cache.count
      .has-scheduler:bool:true
      if
         eq
            config.get:"magic:tasks:scheduler"
            .
         .lambda
            set-value:x:@.has-scheduler
               .:bool:false
      io.folder.list:/modules/
      for-each:x:@io.folder.list/*
         strings.split:x:@.dp/#
            .:/
         unwrap:x:+/*
         signal:magic.io.file.load-recursively
            .:x:@.dp/#
         .loc:int:0
         .files:int:0
         for-each:x:@signal/*
            if
               strings.ends-with:x:@.dp/#
                  .:.hl
               .lambda
                  hyper2lambda:x:@.dp/#/0
                  math.increment:x:@.loc
                     get-count:x:@hyper2lambda/**
                  math.increment:x:@.files
         unwrap:x:+/+/*/*/*
         set-name:x:+/*/*
            get-value:x:@strings.split/0/-
         add:x:@.lambda/*/lambda2hyper/*/modules
            .
               foo
                  loc:x:@.loc
                  files:x:@.files
      unwrap:x:+/*
      lambda2hyper
         version:x:@version
         persisted_tasks:x:@tasks.count
         has_sockets:x:@.has-sockets
         has_scheduler:x:@.has-scheduler
         log_items:x:@log.count
         cache_items:x:@cache.count
         endpoints:x:@.no-endpoints
         slots:x:@.no-slots
         dynamic_slots:x:@.no-dynamic-slots
         default_db:x:@.default-db
         default_timezone:x:@.default-timezone
         last_log_items
         modules
      return:x:@lambda2hyper
