
/*
 * This Hyperlambda code reads data from a SQLite database, specifically from the "leads" table. It performs a left join with the "clients" table, aliasing it as "client_id", based on matching "client_id" fields. The code specifies columns to be selected, including an aggregate function whose result is aliased as "result". It applies a "where" clause with an "and" condition and groups the results by a specified "group_column". 
 * 
 * 1. [data.read] - Initiates a data read operation from a database.
 * 2. [database-type] - Specifies the type of database, here "sqlite".
 * 3. [table] - Indicates the primary table to read from, "leads".
 * 4. [join] - Performs a join operation with another table, "clients".
 * 5. [as] - Aliases the joined table as "client_id".
 * 6. [type] - Specifies the type of join, here "left".
 * 7. [on] - Defines the join condition, matching "client_id" fields.
 * 8. [columns] - Lists the columns to be selected, including an aggregate function.
 * 9. [as] - Aliases the result of the aggregate function as "result".
 * 10. [where] - Applies a filtering condition using "and".
 * 11. [group] - Groups the results by "group_column".
 */
data.read
   database-type:sqlite
   table:leads
      join:clients
         as:client_id
         type:left
         on
            and
               leads.client_id:client_id.client_id
   columns
      aggregate_functor
         as:result
   where
      and
   group
      group_column
