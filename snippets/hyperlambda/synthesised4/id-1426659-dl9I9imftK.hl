
/*
 * The code snippet is a conditional block that checks if a specific node exists, is not null, and has a non-empty value. If these conditions are met, it processes the node's value by splitting and trimming it, and then checks if the processed value does not already exist in a list. If the value is not found in the list, it adds the processed value to the list. The steps are as follows:
 * 
 * 1. [else-if] - Begins a conditional block that is evaluated if previous conditions were false.
 * 2. [and] - Combines multiple conditions that must all be true.
 * 3. [exists] - Checks if a node exists at the specified path.
 * 4. [not-null] - Ensures the node at the specified path is not null.
 * 5. [neq] - Checks if the node's value is not equal to a specified value.
 * 6. [.lambda] - Contains the code to execute if all conditions are true.
 * 7. [strings.split] - Splits the node's value using a specified delimiter.
 * 8. [strings.trim-end] - Trims the specified character from the end of the split result.
 * 9. [if] - Checks if the processed value does not exist in a list.
 * 10. [not-exists] - Evaluates to true if the processed value is not found in the list.
 * 11. [.lambda] - Contains the code to execute if the processed value is not in the list.
 * 12. [unwrap] - Evaluates expressions before reaching the node.
 * 13. [add] - Adds the processed value to the list if it is not already present.
 */
else-if
   and
      exists:x:"@.dp/#/*/\\@href/[0,1]"
      not-null:x:"@.dp/#/*/\\@href/[0,1]"
      neq:x:"@.dp/#/*/\\@href/[0,1]"
         .:#
      neq:x:"@.dp/#/*/\\@href/[0,1]"
         .:
   .lambda
      strings.split:x:"@.dp/#/*/\\@href/[0,1]"
         .:#
      strings.trim-end:x:@strings.split/0
         .:/
      if
         not-exists:x:"@.urls/*/\"{@strings.split/0}\""
         .lambda
            unwrap:x:+/*/*
            add:x:@.urls
               .
                  .:x:@strings.trim-end
