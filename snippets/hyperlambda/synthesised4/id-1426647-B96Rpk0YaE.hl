
/*
 * The code checks if a specific expression does not exist within a nested structure of nodes. If the expression is not found, it unwraps and processes certain nodes, then adds a new entry to a list of candidates with specified attributes, including name, expression, and a completion status set to false.
 * 
 * 1. [if] - Checks a condition and executes its lambda if true.
 * 2. [not-exists] - Evaluates to true if the specified expression does not yield any results.
 * 3. [.lambda] - Contains the code to execute if the condition is true.
 * 4. [unwrap] - Evaluates expressions pointed to by the specified path.
 * 5. [add] - Adds a new node to the specified path.
 * 6. [name] - Sets the name attribute of the new node.
 * 7. [expression] - Sets the expression attribute of the new node.
 * 8. [complete] - Sets the completion status of the new node to false.
 */
if
   not-exists:x:../*/return/*/candidates/*/*/expression/={@.x}
   .lambda
      unwrap:x:+/*/*/*
      add:x:../*/return/*/candidates
         .
            .
               name:x:@.x
               expression:x:@.x
               complete:bool:false
