
/*
 * This Hyperlambda code processes nodes with a name of "a" and a non-null "href" attribute. It constructs a URL based on the "href" value, appending the base URL if necessary. If the "href" starts with "/", it concatenates it with the base URL. If it doesn't start with "http://" or "https://", it adds the base URL and a "/" before the "href". Otherwise, it uses the "href" as is. The final URL is appended to a "completion" string with formatting. 
 * 
 * 1. [if] - Checks if the node name is "a" and "href" exists and is not null.
 * 2. [.lambda] - Contains the logic for constructing the URL.
 * 3. [if] - Checks if "href" starts with "/".
 * 4. [else-if] - Checks if "href" doesn't start with "http://" or "https://".
 * 5. [else] - Uses "href" as is.
 * 6. [set-value] - Sets the constructed URL.
 * 7. [strings.concat] - Concatenates strings to form the URL or completion string.
 * 8. [strings.starts-with] - Checks the beginning of the "href" string.
 * 9. [strings.trim] - Trims whitespace from a string.
 * 10. [strings.replace] - Replaces specified characters in a string.
 */
if
   and
      eq
         get-name:x:@.dp/#/.
         .:a
      exists:x:"@.dp/#/./*/\\@href/[0,1]"
      not-null:x:"@.dp/#/./*/\\@href/[0,1]"
   .lambda
      .url
      if
         strings.starts-with:x:"@.dp/#/./*/\\@href/[0,1]"
            .:/
         .lambda
            set-value:x:@.url
               strings.concat
                  get-value:x:@.base
                  get-value:x:"@.dp/#/./*/\\@href/[0,1]"
      else-if
         and
            not
               strings.starts-with:x:"@.dp/#/./*/\\@href/[0,1]"
                  .:"http://"
            not
               strings.starts-with:x:"@.dp/#/./*/\\@href/[0,1]"
                  .:"https://"
         .lambda
            set-value:x:@.url
               strings.concat
                  get-value:x:@.base
                  .:/
                  get-value:x:"@.dp/#/./*/\\@href/[0,1]"
      else
         set-value:x:@.url
            get-value:x:"@.dp/#/./*/\\@href/[0,1]"
      set-value:x:@.completion
         strings.concat
            get-value:x:@.completion
            .:" "
            .:[
            strings.trim:x:@strings.replace
               .:@"Â  
	"
            .:](
            get-value:x:@.url
            .:)
            .:" "
