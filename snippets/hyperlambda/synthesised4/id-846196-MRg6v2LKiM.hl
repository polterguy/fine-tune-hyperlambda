
// This Hyperlambda code snippet demonstrates a loop that continues as long as the count of nodes under [hyper2lambda] is greater than the value of [convert]. During each iteration, it removes the first node from the [hyper2lambda] node set. The [while] slot ensures the loop condition is checked before each iteration, and [remove-nodes] modifies the node structure by removing the specified node.
while
   mt
      get-count:x:@hyper2lambda/*
      get-value:x:@convert
   .lambda
      remove-nodes:x:@hyper2lambda/0
