
/*
 * The Hyperlambda code defines a SQL query generator that dynamically constructs queries based on provided arguments. It validates mandatory fields and enumerates valid options for grouping and aggregation functions. The code connects to a database, modifies query components like columns, limits, and order, and constructs a SQL query with joins and conditions. It returns the constructed query nodes for execution.
 * 
 * 1. [.arguments] - Defines input arguments for the query.
 * 2. [validators.mandatory] - Ensures required arguments are provided.
 * 3. [validators.enum] - Validates that arguments are within a specified set of values.
 * 4. [data.connect] - Establishes a database connection.
 * 5. [set-name] - Sets the name of nodes dynamically.
 * 6. [insert-before] - Inserts a node before a specified position.
 * 7. [set-value] - Sets the value of a node.
 * 8. [remove-nodes] - Removes specified nodes.
 * 9. [add] - Adds nodes to the structure.
 * 10. [strings.concat] - Concatenates strings to form expressions.
 * 11. [data.read] - Constructs the SQL query with joins and conditions.
 * 12. [return-nodes] - Returns the constructed query nodes.
 */
hyper2lambda
   .arguments
      group_column:string
      limit:long
      offset:long
      order:string
      direction:string
      aggregate_function:string
      aggregate_column:string
      Orders.OrderID.mt:long
      Orders.OrderID.lt:long
      Orders.OrderID.mteq:long
      Orders.OrderID.lteq:long
      Orders.OrderID.neq:long
      Orders.OrderID.eq:long
      Orders.CustomerID.like:string
      Orders.CustomerID.mt:string
      Orders.CustomerID.lt:string
      Orders.CustomerID.mteq:string
      Orders.CustomerID.lteq:string
      Orders.CustomerID.neq:string
      Orders.CustomerID.eq:string
      Orders.EmployeeID.mt:long
      Orders.EmployeeID.lt:long
      Orders.EmployeeID.mteq:long
      Orders.EmployeeID.lteq:long
      Orders.EmployeeID.neq:long
      Orders.EmployeeID.eq:long
      Orders.OrderDate.mt:date
      Orders.OrderDate.lt:date
      Orders.OrderDate.mteq:date
      Orders.OrderDate.lteq:date
      Orders.OrderDate.neq:date
      Orders.OrderDate.eq:date
      Orders.RequiredDate.mt:date
      Orders.RequiredDate.lt:date
      Orders.RequiredDate.mteq:date
      Orders.RequiredDate.lteq:date
      Orders.RequiredDate.neq:date
      Orders.RequiredDate.eq:date
      Orders.ShippedDate.mt:date
      Orders.ShippedDate.lt:date
      Orders.ShippedDate.mteq:date
      Orders.ShippedDate.lteq:date
      Orders.ShippedDate.neq:date
      Orders.ShippedDate.eq:date
      Orders.ShipVia.mt:long
      Orders.ShipVia.lt:long
      Orders.ShipVia.mteq:long
      Orders.ShipVia.lteq:long
      Orders.ShipVia.neq:long
      Orders.ShipVia.eq:long
      Orders.Freight.mt:decimal
      Orders.Freight.lt:decimal
      Orders.Freight.mteq:decimal
      Orders.Freight.lteq:decimal
      Orders.Freight.neq:decimal
      Orders.Freight.eq:decimal
      Orders.ShipName.like:string
      Orders.ShipName.mt:string
      Orders.ShipName.lt:string
      Orders.ShipName.mteq:string
      Orders.ShipName.lteq:string
      Orders.ShipName.neq:string
      Orders.ShipName.eq:string
      Orders.ShipAddress.like:string
      Orders.ShipAddress.mt:string
      Orders.ShipAddress.lt:string
      Orders.ShipAddress.mteq:string
      Orders.ShipAddress.lteq:string
      Orders.ShipAddress.neq:string
      Orders.ShipAddress.eq:string
      Orders.ShipCity.like:string
      Orders.ShipCity.mt:string
      Orders.ShipCity.lt:string
      Orders.ShipCity.mteq:string
      Orders.ShipCity.lteq:string
      Orders.ShipCity.neq:string
      Orders.ShipCity.eq:string
      Orders.ShipRegion.like:string
      Orders.ShipRegion.mt:string
      Orders.ShipRegion.lt:string
      Orders.ShipRegion.mteq:string
      Orders.ShipRegion.lteq:string
      Orders.ShipRegion.neq:string
      Orders.ShipRegion.eq:string
      Orders.ShipPostalCode.like:string
      Orders.ShipPostalCode.mt:string
      Orders.ShipPostalCode.lt:string
      Orders.ShipPostalCode.mteq:string
      Orders.ShipPostalCode.lteq:string
      Orders.ShipPostalCode.neq:string
      Orders.ShipPostalCode.eq:string
      Orders.ShipCountry.like:string
      Orders.ShipCountry.mt:string
      Orders.ShipCountry.lt:string
      Orders.ShipCountry.mteq:string
      Orders.ShipCountry.lteq:string
      Orders.ShipCountry.neq:string
      Orders.ShipCountry.eq:string
      EmployeeID.LastName.eq:string
      EmployeeID.LastName.like:string
      ShipVia.CompanyName.eq:string
      ShipVia.CompanyName.like:string
   validators.mandatory:x:@.arguments/*/group_column
   validators.mandatory:x:@.arguments/*/aggregate_function
   validators.mandatory:x:@.arguments/*/aggregate_column
   validators.enum:x:@.arguments/*/aggregate_function
      .:min
      .:max
      .:sum
      .:avg
      .:count
   validators.enum:x:@.arguments/*/group_column
      .:Orders.OrderID
      .:Orders.CustomerID
      .:Orders.EmployeeID
      .:Orders.OrderDate
      .:Orders.RequiredDate
      .:Orders.ShippedDate
      .:Orders.ShipVia
      .:Orders.Freight
      .:Orders.ShipName
      .:Orders.ShipAddress
      .:Orders.ShipCity
      .:Orders.ShipRegion
      .:Orders.ShipPostalCode
      .:Orders.ShipCountry
      .:EmployeeID.LastName
      .:ShipVia.CompanyName
   validators.enum:x:@.arguments/*/aggregate_column
      .:Orders.OrderID
      .:Orders.CustomerID
      .:Orders.EmployeeID
      .:Orders.OrderDate
      .:Orders.RequiredDate
      .:Orders.ShippedDate
      .:Orders.ShipVia
      .:Orders.Freight
      .:Orders.ShipName
      .:Orders.ShipAddress
      .:Orders.ShipCity
      .:Orders.ShipRegion
      .:Orders.ShipPostalCode
      .:Orders.ShipCountry
      .:EmployeeID.LastName
      .:ShipVia.CompanyName
   data.connect:[generic|northwind]
      database-type:sqlite
      set-name:x:@data.connect/*/data.read/*/group/*/group_column
         get-value:x:@.arguments/*/group_column
      set-name:x:+/*/*
         get-value:x:@.arguments/*/group_column
      insert-before:x:@data.connect/*/data.read/*/columns/0
         .
            group_column
      set-value:x:@data.connect/*/data.read/*/columns/1/*/as
         get-value:x:@.arguments/*/aggregate_function
      remove-nodes:x:@.arguments/*/group_column
      add:x:@data.connect/*/data.read
         get-nodes:x:@.arguments/*/limit
         get-nodes:x:@.arguments/*/offset
      remove-nodes:x:@.arguments/*/limit
      remove-nodes:x:@.arguments/*/offset
      add:x:./*/data.read
         get-nodes:x:@.arguments/*/order
         get-nodes:x:@.arguments/*/direction
      remove-nodes:x:@.arguments/*/order
      remove-nodes:x:@.arguments/*/direction
      set-name:x:./*/data.read/*/columns/*/aggregate_functor
         strings.concat
            get-value:x:@.arguments/*/aggregate_function
            .:(
            get-value:x:@.arguments/*/aggregate_column
            .:)
      remove-nodes:x:@.arguments/*/[0,2]
      add:x:./*/data.read/*/where/*
         get-nodes:x:@.arguments/*
      data.read
         database-type:sqlite
         table:Orders
            join:Employees
               as:EmployeeID
               type:left
               on
                  and
                     Orders.EmployeeID:EmployeeID.EmployeeID
            join:Shippers
               as:ShipVia
               type:left
               on
                  and
                     Orders.ShipVia:ShipVia.ShipperID
         columns
            aggregate_functor
               as:result
         where
            and
         group
            group_column
      return-nodes:x:@data.read/*
