
// This Hyperlambda code defines a process for creating and managing a machine learning model for a chatbot using OpenAI. It verifies and processes input arguments, constructs a URL, and logs information. The code checks if a model already exists, attempts to create a new model, and handles errors. It also manages training data, signals for crawling and vectorization, and schedules tasks for auto-deletion. The code ensures feedback is sent through a specified channel and returns the result of the operation. Key slots include [auth.ticket.verify], [validators.mandatory], [data.connect], [sockets.signal], and [tasks.create].
hyper2lambda
   .arguments
      url:string
      model:string
      flavor:string
      max:int
      autocrawl:bool
      auto_destruct:bool
      feedback-channel:string
      vectorize:bool
      instruction:string
   auth.ticket.verify:root
   if
      not
         strings.starts-with:x:@.arguments/*/url
            .:http
      .lambda
         set-value:x:@.arguments/*/url
            strings.concat
               .:"https://"
               get-value:x:@.arguments/*/url
   set-value:x:@.arguments/*/url
      strings.trim-end:x:@.arguments/*/url
         .:/
   set-value:x:@.arguments/*/url
      strings.to-lower:x:@.arguments/*/url
   validators.mandatory:x:@.arguments/*/model
   validators.mandatory:x:@.arguments/*/url
   validators.url:x:@.arguments/*/url
   validators.default:x:@.arguments
      max:int:1250
      autocrawl:bool:false
      vectorize:bool:true
      auto_destruct:bool:false
   log.info:Crawling URL to generate OpenAI training data for a chatbot
      url:x:@.arguments/*/url
      flavor:x:@.arguments/*/flavor
   try
      strings.concat
         .:"Creating AINIRO machine learning model using "
         get-value:x:@.arguments/*/model
         .:" as our OpenAI base model"
      unwrap:x:+/*/args/**
      sockets.signal:x:@.arguments/*/feedback-channel
         args
            message:x:@strings.concat
            type:info
      sleep:1000
      strings.concat
         .:"Crawling URL "
         get-value:x:@.arguments/*/url
      unwrap:x:+/*/args/**
      sockets.signal:x:@.arguments/*/feedback-channel
         args
            message:x:@strings.concat
            type:info
      sleep:100
      .type
      set-value:x:@.type
         strings.replace:x:@.arguments/*/url
            .:"http://"
            .:
      set-value:x:@.type
         strings.replace:x:@.type
            .:"https://"
            .:
      set-value:x:@.type
         strings.replace:x:@.type
            .:.
            .:_
      set-value:x:@.type
         strings.replace:x:@.type
            .:/
            .:_
      set-value:x:@.type
         strings.replace-not-of:x:@.type
            .:abcdefghijklmnopqrstuvwxyz_0987654321
            .:_
      data.connect:[generic|magic]
         data.read
            table:ml_types
            columns
               type
            where
               and
                  type.eq:x:@.type
         if
            exists:x:@data.read/*
            .lambda
               throw:Model already exists!
         try-signal:magic.ai.can-create-machine-learning-model
         if:x:@.arguments/*/autocrawl
            unwrap:x:+/*/*
            add:x:@data.connect/*/data.create/[0,1]/*/values
               .
                  base_url:x:@.arguments/*/url
         .max-tokens:int:4000
         .max-context-tokens:int:4000
         if
            not
               strings.starts-with:x:@.arguments/*/model
                  .:gpt-4
            .lambda
               set-value:x:@.max-context-tokens
                  .:int:1000
               set-value:x:@.max-tokens
                  .:int:1000
         data.create
            table:ml_types
            values
               type:x:@.type
               model:x:@.arguments/*/model
               max_tokens:x:@.max-tokens
               max_context_tokens:x:@.max-context-tokens
               max_request_tokens:int:1000
               temperature:decimal:0.3
               recaptcha:decimal:0.0
               supervised:int:1
               cached:int:0
               use_embeddings:int:1
               threshold:decimal:0.3
               vector_model:text-embedding-ada-002
               system_message:x:@.arguments/*/flavor
               greeting:Hi there, how can I help you?
               conversation_starters:"* What can I ask you about?\n* How do I contact you?\n* Who created this chatbot?"
      request.host
      add:x:./*/signal
         get-nodes:x:@.arguments/*
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/type
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onafter/*/.type
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onafter/*/.url
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onafter/*/.instruction
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onafter/*/.flavor
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onafter/*/.host
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onafter/*/.feedback-channel
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onafter/*/.auto_destruct
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onafter/*/.vectorize
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onerror/*/.type
      unwrap:x:./*/signal/=magic.ai.crawl-site/*/.onerror/*/.feedback-channel
      signal:magic.ai.crawl-site
         delay:int:1000
         threshold:int:150
         summarize:bool:true
         type:x:@.type
         .onerror
            .type:x:@.type
            .feedback-channel:x:@.arguments/*/feedback-channel
            data.connect:[generic|magic]
               data.delete
                  table:ml_types
                  where
                     and
                        type.eq:x:@.type
         .onafter
            .type:x:@.type
            .url:x:@.arguments/*/url
            .flavor:x:@.arguments/*/flavor
            .instruction:x:@.arguments/*/instruction
            .host:x:@request.host
            .feedback-channel:x:@.arguments/*/feedback-channel
            .vectorize:x:@.arguments/*/vectorize
            .auto_destruct:x:@.arguments/*/auto_destruct
            data.connect:[generic|magic]
               data.read
                  table:ml_training_snippets
                  columns
                     count(*)
                        as:count
                  where
                     and
                        type.eq:x:@.type
            if
               eq
                  convert:x:@data.connect/*/data.read/*/*/count
                     type:int
                  .:int:0
               .lambda
                  sockets.signal:x:@.feedback-channel
                     args
                        message:We could not find any training data on your website
                        type:error
                  data.connect:[generic|magic]
                     data.delete
                        table:ml_types
                        where
                           and
                              type.eq:x:@.type
            else
               strings.concat
                  .:"We found "
                  get-value:x:@data.connect/*/data.read/*/*/count
                  .:" training snippets we could use on website in total"
               unwrap:x:+/**
               sockets.signal:x:@.feedback-channel
                  args
                     message:x:@strings.concat
                     type:info
               sleep:100
               if
                  lt
                     convert:x:@data.connect/*/data.read/*/*/count
                        type:int
                     .:int:10
                  .lambda
                     strings.concat
                        .:"Warning! Only "
                        get-value:x:@data.connect/*/data.read/*/*/count
                        .:" training snippets will provide a poor chatbot experience!"
                     unwrap:x:+/**
                     sockets.signal:x:@.feedback-channel
                        args
                           message:x:@strings.concat
                           type:warning
                     sleep:100
               data.connect:[generic|magic]
                  data.create
                     table:ml_training_snippets
                     values
                        type:x:@.type
                        prompt:Who created this AI chatbot?
                        completion:"This chatbot is a custom AI chatbot powered by OpenAI allowing you to use natural language to ask questions related to the website you're currently visiting. It was created by [AINIRO.IO](https://ainiro.io). If you want a similar AI chatbot for your own site, you can [contact AINIRO here](https://ainiro.io/contact-us)."
                        uri:"https://ainiro.io"
               unwrap:x:+/*
               signal:magic.ai.create-landing-page
                  url:x:@.url
                  type:x:@.type
                  host:x:@.host
                  feedback-channel:x:@.feedback-channel
               if
                  and
                     exists:x:@.arguments/*/instruction
                     neq:x:@.arguments/*/instruction
                        .:
                  .lambda
                     sockets.signal:x:@.feedback-channel
                        args
                           message:Invoking OpenAI to create a custom system message. Notice, this might take some time ...
                           type:info
                     try
                        execute:magic.ai.create-system-message
                           url:x:@.url
                           template:x:@.flavor
                           instruction:x:@.instruction
                        data.connect:[generic|magic]
                           data.update
                              table:ml_types
                              values
                                 system_message:x:@execute
                              where
                                 and
                                    type.eq:x:@.type
                        sockets.signal:x:@.feedback-channel
                           args
                              message:------------------------------------------------------------------------------------------------------------------------
                              type:info
                     .catch
                        log.error:x:@.arguments/*/message
                        sockets.signal:x:@.feedback-channel
                           args
                              message:We could not create a custom system message, check your log for details
                              type:warning
               if
                  eq:x:@.vectorize
                     .:bool:true
                  .lambda
                     unwrap:x:+/*
                     signal:magic.ai.vectorise
                        type:x:@.type
                        feedback-channel:x:@.feedback-channel
               else
                  sockets.signal:x:@.feedback-channel
                     args
                        message:Remember to vectorize before attempting to use your model
                        type:info
               if:x:@.auto_destruct
                  sockets.signal:x:@.feedback-channel
                     args
                        message:Creating scheduled task that deletes chatbot 7 days from now
                        type:info
                  sleep:100
                  math.add
                     date.now
                     time
                        days:7
                  strings.concat
                     .:delete-chatbot-
                     get-value:x:@.type
                  unwrap:x:+/+/*/.lambda/*/.task
                  unwrap:x:+/*/.lambda/*/.type
                  tasks.create:x:@strings.concat
                     description:Deletes demo chatbot 7 days after creating it
                     due:x:@math.add
                     .lambda
                        .type:x:@.type
                        data.connect:[generic|magic]
                           data.execute:"\ndelete from vss_ml_training_snippets\n   where rowid in (select id as rowid from ml_training_snippets where type = @type)"
                              type:x:@.type
                        .task:x:@strings.concat
                        data.connect:[generic|magic]
                           data.delete
                              table:ml_types
                              where
                                 and
                                    type.eq:x:@.type
                        strings.concat
                           .:/etc/www/
                           get-value:x:@.type
                           .:.html
                        io.file.delete:x:@strings.concat
                        log.info:Demo chatbot was deleted
                           type:x:@.type
                        tasks.delete:x:@.task
               sockets.signal:x:@.arguments/*/feedback-channel
                  args
                     message:Done!
                     type:success
      unwrap:x:+/*
      return
         result:x:@.type
   .catch
      unwrap:x:+/*/args/**
      sockets.signal:x:@.arguments/@.arguments/*/feedback-channel
         roles:root
         args
            message:x:@.arguments/*/message
            type:error
      response.status.set:400
      return
         result:failure
