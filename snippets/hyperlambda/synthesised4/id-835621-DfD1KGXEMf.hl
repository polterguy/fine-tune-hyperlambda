
// This Hyperlambda code connects to a SQLite database named "northwind" and performs a read operation on the "Orders" table. It includes left joins with "Employees" and "Shippers" tables, selecting various columns from these tables. The code also dynamically adds and removes nodes related to ordering, direction, limit, and offset from the arguments, and returns the result of the read operation.
data.connect:[generic|northwind]
   database-type:sqlite
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Orders
         join:Employees
            as:EmployeeID
            type:left
            on
               and
                  Orders.EmployeeID:EmployeeID.EmployeeID
         join:Shippers
            as:ShipVia
            type:left
            on
               and
                  Orders.ShipVia:ShipVia.ShipperID
      columns
         Orders.OrderID
         Orders.CustomerID
         Orders.EmployeeID
         Orders.OrderDate
         Orders.RequiredDate
         Orders.ShippedDate
         Orders.ShipVia
         Orders.Freight
         Orders.ShipName
         Orders.ShipAddress
         Orders.ShipCity
         Orders.ShipRegion
         Orders.ShipPostalCode
         Orders.ShipCountry
         EmployeeID.LastName
            as:EmployeeID.LastName
         ShipVia.CompanyName
            as:ShipVia.CompanyName
      where
         and
   return-nodes:x:@data.read/*
