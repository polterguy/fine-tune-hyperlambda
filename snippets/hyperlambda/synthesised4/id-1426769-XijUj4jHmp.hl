
/*
 * This Hyperlambda code checks if the [connection-string] argument is not null or empty. If true, it concatenates the [connection-string] and [database] arguments with a "|" separator, and assigns the result to the [.connection] node.
 * 
 * 1. [if] - Evaluates a condition to determine if the subsequent lambda should be executed.
 * 2. [and] - Ensures both child conditions must be true for the lambda to execute.
 * 3. [not] - Inverts the result of the child condition.
 * 4. [eq] - Checks if the [connection-string] argument is null.
 * 5. [get-value] - Retrieves the value of the [connection-string] argument.
 * 6. [not] - Inverts the result of the child condition.
 * 7. [eq] - Checks if the [connection-string] argument is an empty string.
 * 8. [get-value] - Retrieves the value of the [connection-string] argument.
 * 9. [.lambda] - Contains the operations to execute if the condition is true.
 * 10. [set-value] - Assigns a new value to the [.connection] node.
 * 11. [strings.concat] - Concatenates multiple strings.
 * 12. [.] - Static string "[".
 * 13. [get-value] - Retrieves the value of the [connection-string] argument.
 * 14. [.] - Static string "|".
 * 15. [get-value] - Retrieves the value of the [database] argument.
 * 16. [.] - Static string "]".
 */
if
   and
      not
         eq
            get-value:x:@.arguments/*/connection-string
            .
      not
         eq
            get-value:x:@.arguments/*/connection-string
            .:
   .lambda
      set-value:x:@.connection
         strings.concat
            .:[
            get-value:x:@.arguments/*/connection-string
            .:|
            get-value:x:@.arguments/*/database
            .:]
