
/*
 * The provided Hyperlambda code demonstrates how to execute a lambda object in a separate thread using the [fork] slot. The [fork] slot creates a new thread of execution, allowing for concurrent processing. Inside the [fork], the [eval] slot is used to execute the lambda object referred to by the [.invoke] node. This approach is useful for parallel processing or executing tasks asynchronously without blocking the main thread. The [eval] slot ensures that the lambda object is executed, while the [fork] slot allows it to run independently in a separate thread. 
 * 
 * 1. [fork] - Initiates a new thread of execution for concurrent processing.
 * 2. [eval:x:@.invoke] - Executes the lambda object referred to by the [.invoke] node within the forked thread.
 */
fork
   eval:x:@.invoke
