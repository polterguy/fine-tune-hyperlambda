
/*
 * 1. `..` - Retrieves the root node of the currently executed Hyperlambda.
 * 2. `*` - Retrieves all children nodes of the root node.
 * 3. `.invoke` - Filters out all nodes not having the name [.invoke] from the previous result set.
 * 4. `*` - Retrieves all children nodes of each [.invoke] node.
 * 5. `while` - Filters out all nodes not having the name [while] from the previous result set.
 * 6. `*` - Retrieves all children nodes of each [while] node.
 * 7. `.lambda` - Filters out all nodes not having the name [.lambda] from the previous result set.
 * 8. `*` - Retrieves all children nodes of each [.lambda] node.
 * 9. `http.post` - Filters out all nodes not having the name [http.post] from the previous result set.
 * 10. `*` - Retrieves all children nodes of each [http.post] node.
 * 11. `payload` - Filters out all nodes not having the name [payload] from the previous result set.
 * 
 * This expression returns all [payload] nodes that are children of [http.post] nodes, which are themselves children of [.lambda] nodes, which are children of [while] nodes, which are children of [.invoke] nodes, which are children of the root node.
 */

.:x:../*/.invoke/*/while/*/.lambda/*/http.post/*/payload