
/*
 * This Hyperlambda code connects to a SQLite database and dynamically constructs a SQL query with grouping and aggregation based on provided arguments. It modifies node names and values to reflect the specified group and aggregate functions, inserts nodes for grouping and aggregation, and removes unnecessary argument nodes. The code then reads data from the "Shippers" table, applying the constructed query, and returns the result nodes. 
 * 
 * 1. [data.connect] - Establishes a connection to the specified database.
 * 2. [database-type] - Specifies the database type as SQLite.
 * 3. [set-name] - Sets the name of nodes based on the group column argument.
 * 4. [insert-before] - Inserts a node before the first column node.
 * 5. [set-value] - Sets the value of the "as" node for aggregation.
 * 6. [remove-nodes] - Removes nodes for group column, limit, offset, order, and direction.
 * 7. [add] - Adds nodes for limit, offset, order, and direction to the query.
 * 8. [strings.concat] - Concatenates strings to form the aggregate function.
 * 9. [data.read] - Reads data from the "Shippers" table with the constructed query.
 * 10. [return-nodes] - Returns the result nodes from the data read operation.
 */
data.connect:[generic|northwind]
   database-type:sqlite
   set-name:x:@data.connect/*/data.read/*/group/*/group_column
      get-value:x:@.arguments/*/group_column
   set-name:x:+/*/*
      get-value:x:@.arguments/*/group_column
   insert-before:x:@data.connect/*/data.read/*/columns/0
      .
         group_column
   set-value:x:@data.connect/*/data.read/*/columns/1/*/as
      get-value:x:@.arguments/*/aggregate_function
   remove-nodes:x:@.arguments/*/group_column
   add:x:@data.connect/*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   set-name:x:./*/data.read/*/columns/*/aggregate_functor
      strings.concat
         get-value:x:@.arguments/*/aggregate_function
         .:(
         get-value:x:@.arguments/*/aggregate_column
         .:)
   remove-nodes:x:@.arguments/*/[0,2]
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Shippers
      columns
         aggregate_functor
            as:result
      where
         and
      group
         group_column
   return-nodes:x:@data.read/*
