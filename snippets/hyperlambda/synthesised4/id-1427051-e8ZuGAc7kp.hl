
/*
 * The Hyperlambda code demonstrates how to perform a SQL read operation on a SQLite database, specifically targeting the "Employees" table. It includes a left join on the same "Employees" table, aliased as "ReportsTo", based on a condition where the "ReportsTo" column in the "Employees" table matches the "EmployeeID" in the "ReportsTo" alias. The code specifies an aggregate function to be executed, with its result being aliased as "result". Additionally, it includes a placeholder for a "where" condition and limits the query to return only one result. The code is structured to generate SQL that is compatible with SQLite syntax. 
 * 
 * 1. [database-type] - Specifies the type of database being used, in this case, SQLite.
 * 2. [table] - Indicates the main table being queried, which is "Employees".
 * 3. [join] - Performs a left join on the "Employees" table, aliased as "ReportsTo".
 * 4. [type] - Specifies the type of join, which is a left join.
 * 5. [on] - Defines the join condition, matching "Employees.ReportsTo" with "ReportsTo.EmployeeID".
 * 6. [columns] - Lists the columns to be selected, including an aggregate function.
 * 7. [aggregate_functor] - Represents an aggregate function to be executed, with its result aliased as "result".
 * 8. [where] - Placeholder for additional filtering conditions.
 * 9. [limit] - Restricts the query to return only one result.
 */
data.read
   database-type:sqlite
   table:Employees
      join:Employees
         as:ReportsTo
         type:left
         on
            and
               Employees.ReportsTo:ReportsTo.EmployeeID
   columns
      aggregate_functor
         as:result
   where
      and
   limit:long:1
