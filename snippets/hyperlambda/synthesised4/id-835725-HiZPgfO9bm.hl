
/*
 * The Hyperlambda code connects to a SQLite database and dynamically constructs a SQL query. It processes arguments to set group columns, aggregate functions, and other query parameters, then reads data from the "Appointments" table with left joins to "Patients" and "Doctors" tables. The query aggregates data based on specified columns and returns the results.
 * 
 * 1. [data.connect] - Connects to a SQLite database.
 * 2. [database-type] - Specifies the database type as SQLite.
 * 3. [set-name] - Sets the name of nodes based on group columns.
 * 4. [insert-before] - Inserts a node before the first column.
 * 5. [set-value] - Sets the value of an alias for the aggregate function.
 * 6. [remove-nodes] - Removes nodes related to group columns, limits, and offsets.
 * 7. [add] - Adds nodes for limit, offset, order, and direction.
 * 8. [strings.concat] - Concatenates strings to form aggregate functions.
 * 9. [data.read] - Reads data from the "Appointments" table with joins.
 * 10. [return-nodes] - Returns the nodes from the data read operation.
 */
data.connect:[generic|hospital]
   database-type:sqlite
   set-name:x:@data.connect/*/data.read/*/group/*/group_column
      get-value:x:@.arguments/*/group_column
   set-name:x:+/*/*
      get-value:x:@.arguments/*/group_column
   insert-before:x:@data.connect/*/data.read/*/columns/0
      .
         group_column
   set-value:x:@data.connect/*/data.read/*/columns/1/*/as
      get-value:x:@.arguments/*/aggregate_function
   remove-nodes:x:@.arguments/*/group_column
   add:x:@data.connect/*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   set-name:x:./*/data.read/*/columns/*/aggregate_functor
      strings.concat
         get-value:x:@.arguments/*/aggregate_function
         .:(
         get-value:x:@.arguments/*/aggregate_column
         .:)
   remove-nodes:x:@.arguments/*/[0,2]
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Appointments
         join:Patients
            as:PatientID
            type:left
            on
               and
                  Appointments.PatientID:PatientID.PatientID
         join:Doctors
            as:DoctorID
            type:left
            on
               and
                  Appointments.DoctorID:DoctorID.DoctorID
      columns
         aggregate_functor
            as:result
      where
         and
      group
         group_column
   return-nodes:x:@data.read/*
