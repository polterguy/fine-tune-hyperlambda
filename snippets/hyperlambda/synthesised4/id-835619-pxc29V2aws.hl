
/*
 * This Hyperlambda code snippet demonstrates how to construct a SQL query string dynamically by concatenating various string segments. It uses the [set-value] slot to update the [.sql] node with a concatenated string that includes a table name and a condition. The [strings.concat] slot is used to combine the existing SQL string with additional segments to form a complete SQL query. The [get-value] slot retrieves the current SQL string, and static strings are added to specify the table and condition.
 * 
 * 1. [set-value] - Updates the value of the [.sql] node with the result of the concatenation.
 * 2. [strings.concat] - Concatenates multiple string segments to form a SQL query.
 * 3. [get-value] - Retrieves the current value of the [.sql] node.
 * 4. [.] - Represents static string segments to be concatenated, such as " from ", "Orders", and " where keyword_count > 0".
 */
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" from "
      .:Orders
      .:" where keyword_count > 0"
