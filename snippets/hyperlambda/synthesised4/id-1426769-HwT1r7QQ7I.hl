
/*
 * // The following Hyperlambda code demonstrates the use of the [case] slot to perform a switch-case operation on a bigint value.
 * // It evaluates the value of the [bigint] node and executes the corresponding case block based on its value.
 * // The [case] slot is used to define different cases, and the [default] slot is used to define the default action if no case matches.
 * // This approach is useful for executing different logic based on the value of a bigint variable.
 * //
 * // 1. [bigint] - A node representing a bigint value that will be used in the switch-case operation.
 * // 2. [switch] - Initiates the switch-case operation on the value of the [bigint] node.
 * // 3. [case] - Defines a case block for a specific bigint value (e.g., 1000000) and executes its children if the value matches.
 * // 4. [log.info] - Logs a message indicating that the bigint value is one million.
 * // 5. [case] - Defines another case block for a different bigint value (e.g., 2000000) and executes its children if the value matches.
 * // 6. [log.info] - Logs a message indicating that the bigint value is two million.
 * // 7. [default] - Defines the default action to be executed if no case matches the bigint value.
 * // 8. [log.info] - Logs a message indicating that the bigint value is neither one million nor two million.
 * 
 * bigint:bigint:1000000
 * switch:x:@bigint
 *    case:bigint:1000000
 *       log.info:Bigint value is one million
 *    case:bigint:2000000
 *       log.info:Bigint value is two million
 *    default
 *       log.info:Bigint value is neither one million nor two million
 */
case:bigint
