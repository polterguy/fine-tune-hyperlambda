
// This Hyperlambda code checks if a file ends with ".hl", loads it, and converts it to a lambda structure. It iterates through each node in the lambda, checking if its name exists in a vocabulary. If it does, it increments a count in a result node, or adds a new entry if it doesn't exist. The code uses slots like [if], [for-each], [strings.ends-with], and [math.add] to achieve this.
if
   strings.ends-with:x:@.dp/#
      .:.hl
   .lambda
      io.file.load:x:@.dp/#
      hyper2lambda:x:@io.file.load
         comments:true
      for-each:x:@hyper2lambda/*/**
         get-name:x:@.dp/#
         if
            exists:x:@vocabulary/*/={@get-name}
            .lambda
               if
                  not-exists:x:@.result/*/{@get-name}
                  .lambda
                     set-name:x:+/*/*
                        get-value:x:@get-name
                     add:x:@.result
                        .
                           .:int:1
               else
                  set-value:x:@.result/*/{@get-name}
                     math.add
                        get-value:x:@.result/*/{@get-name}
                        .:int:1
