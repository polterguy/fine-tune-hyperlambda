
/*
 * 1. `@.no`: This iterator looks for the first node with the name "no" starting from the current node and moving upwards in the hierarchy. It does not traverse siblings, only direct ancestors. This is useful when you want to find a specific ancestor node with a known name, regardless of how deep it is in the hierarchy.
 * 
 * Potential use case: If you are within a deeply nested structure and need to access a configuration or setting node named "no" that is defined higher up in the hierarchy, this iterator can help you locate it efficiently.
 */

.:x:@.no