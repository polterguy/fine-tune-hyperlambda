
/*
 * This Hyperlambda code checks if a node named [done_reason] exists and is not null within the [json2lambda] node. If both conditions are true, it sets the value of [.finish_reason] to the value of [done_reason], unwraps the next sibling node, and sends a signal through a web socket using the session value, with the finish reason as an argument. 
 * 
 * 1. [if] - Initiates a conditional statement.
 * 2. [and] - Combines two conditions that must both be true.
 * 3. [exists] - Checks if the [done_reason] node exists within [json2lambda].
 * 4. [not-null] - Checks if the [done_reason] node is not null.
 * 5. [.lambda] - Contains the code to execute if the conditions are true.
 * 6. [set-value] - Sets the value of [.finish_reason] to [done_reason].
 * 7. [unwrap] - Evaluates the next sibling node.
 * 8. [sockets.signal] - Sends a signal through a web socket using the session value.
 * 9. [args] - Contains arguments for the signal.
 * 10. [finish_reason] - Argument passed in the signal containing the finish reason.
 */
if
   and
      exists:x:@json2lambda/*/done_reason
      not-null:x:@json2lambda/*/done_reason
   .lambda
      set-value:x:@.finish_reason
         get-value:x:@json2lambda/*/done_reason
      unwrap:x:+/*/*
      sockets.signal:x:@.session
         args
            finish_reason:x:@.finish_reason
