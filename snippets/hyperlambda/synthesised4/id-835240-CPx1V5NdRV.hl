
// This Hyperlambda code reads an XML stream, converts it to a lambda object, and iterates over its nodes. For each node, it unwraps and renames specific child nodes to 'prompt' and 'completion' based on arguments provided, then adds these nodes to a file data structure. The process involves using [io.stream.read] to read the stream, [xml2lambda] to convert XML to lambda, and [for-each] to iterate and manipulate nodes.
case:xml
   io.stream.read:x:@.arguments/*/file/*/stream
   xml2lambda:x:@io.stream.read
   for-each:x:@xml2lambda/*/*
      unwrap:x:./*/add/*/*/*
      set-name:x:./*/add/*/*/*/prompt
         get-value:x:@.arguments/*/prompt
      set-name:x:./*/add/*/*/*/completion
         get-value:x:@.arguments/*/completion
      add:x:@.file-data
         .
            .
               prompt:x:"@.dp/#/*/\"{@.arguments/*/prompt}\"/*/\\#text"
               completion:x:"@.dp/#/*/\"{@.arguments/*/completion}\"/*/\\#text"
