
// This Hyperlambda code connects to a SQLite database named "northwind" and performs a distinct selection on a specified column from the "Regions" table. It constructs a distinct SQL function using the [strings.concat] slot, removes unnecessary nodes like [distinct_column], [order], [direction], [limit], and [offset], and adds these parameters to the [data.read] node. The code then executes a [data.read] operation with the constructed distinct function and returns the resulting nodes.
data.connect:[generic|northwind]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/distinct_functor
      strings.concat
         .:distinct(
         get-value:x:@.arguments/*/distinct_column
         .:)
   remove-nodes:x:@.arguments/*/distinct_column
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Regions
      columns
         distinct_functor
            as:.
      where
         and
   return-nodes:x:@data.read/*/*
