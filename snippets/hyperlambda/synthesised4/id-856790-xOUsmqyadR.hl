
// This Hyperlambda code is a complex database metadata retrieval and transformation process. It begins by verifying user authentication and validating input arguments for database type and connection string. The code then constructs cache keys and attempts to retrieve cached database metadata. If not cached, it signals to retrieve database, table, and column metadata, filtering out system databases for specific database types. The metadata is transformed into a structured format, including tables, columns, foreign keys, and indexes, and is cached for future use. Finally, it converts the metadata to Hyperlambda format and returns it.
hyper2lambda
   .arguments
      databaseType:string
      connectionString:string
   auth.ticket.verify:root
   validators.mandatory:x:@.arguments/*/databaseType
   validators.mandatory:x:@.arguments/*/connectionString
   validators.enum:x:@.arguments/*/databaseType
      .:mysql
      .:pgsql
      .:mssql
      .:sqlite
   strings.concat
      .:magic.sql.databases.
      get-value:x:@.arguments/*/databaseType
      :.
      get-value:x:@.arguments/*/connectionString
   unwrap:x:../*/cache.try-get/**/.databaseType
   unwrap:x:../*/cache.try-get/**/.connection-string
   cache.try-get:x:@strings.concat
      expiration:36000
      .lambda
         .databaseType:x:@.arguments/*/databaseType
         .connection-string:x:@.arguments/*/connectionString
         strings.concat
            .:magic.db.
            get-value:x:@.databaseType
            .:.databases
         unwrap:x:+/*
         signal:x:@strings.concat
            connection-string:x:@.connection-string
         switch:x:@.databaseType
            case:mssql
               remove-nodes:x:@signal/*/*/db/=master
               remove-nodes:x:@signal/*/*/db/=tempdb
               remove-nodes:x:@signal/*/*/db/=model
               remove-nodes:x:@signal/*/*/db/=msdb
            case:mysql
               remove-nodes:x:@signal/*/*/db/=information_schema
               remove-nodes:x:@signal/*/*/db/=mysql
               remove-nodes:x:@signal/*/*/db/=performance_schema
               remove-nodes:x:@signal/*/*/db/=sys
            case:pgsql
               remove-nodes:x:@signal/*/*/db/=template1
               remove-nodes:x:@signal/*/*/db/=template0
         .result
         for-each:x:@signal/*/*
            set-name:x:@.dp/#
               .:database
            unwrap:x:+/*/*/*
            add:x:@.result
               .
                  .
                     name:x:@.dp/#
                     tables
         for-each:x:@.result/*
            strings.concat
               .:magic.db.
               get-value:x:@.databaseType
               .:.tables
            unwrap:x:+/*
            signal:x:@strings.concat
               connection-string:x:@.connection-string
               database:x:@.dp/#/*/name
            for-each:x:@signal/*
               unwrap:x:+/*/*/*
               add:x:@for-each/@.dp/#/*/tables
                  .
                     .
                        name:x:@.dp/#/*/table
                        columns
               strings.concat
                  .:magic.db.
                  get-value:x:@.databaseType
                  .:.columns
               unwrap:x:+/*
               signal:x:@strings.concat
                  connection-string:x:@.connection-string
                  database:x:@for-each/@.dp/#/*/name
                  table:x:@.dp/#/*/table
               for-each:x:@signal/*
                  unwrap:x:+/*/*/*
                  add:x:@for-each/@for-each/@.dp/#/*/tables/0/-/*/columns
                     .
                        .
                           name:x:@.dp/#/*/name
                           db:x:@.dp/#/*/db
                           nullable:x:@.dp/#/*/nullable
                           primary:x:@.dp/#/*/primary
                           automatic:x:@.dp/#/*/automatic
                           hl:x:@.dp/#/*/hl
               add:x:@for-each/@for-each/@.dp/#/*/tables/0/-
                  .
                     foreign_keys
               strings.concat
                  .:magic.db.
                  get-value:x:@.databaseType
                  .:.foreign_keys
               unwrap:x:+/*
               signal:x:@strings.concat
                  connection-string:x:@.connection-string
                  database:x:@for-each/@for-each/@.dp/#/*/name
                  table:x:@.dp/#/*/table
               for-each:x:@signal/*
                  add:x:+/*/*
                     get-nodes:x:@.dp/#/*
                  add:x:@for-each/@for-each/@for-each/@.dp/#/*/tables/0/-/*/foreign_keys
                     .
                        .
               add:x:@for-each/@for-each/@for-each/@.dp/#/*/tables/0/-
                  .
                     indexes
               strings.concat
                  .:magic.db.
                  get-value:x:@.databaseType
                  .:.indexes
               unwrap:x:+/*
               signal:x:@strings.concat
                  connection-string:x:@.connection-string
                  database:x:@for-each/@for-each/@for-each/@.dp/#/*/name
                  table:x:@.dp/#/*/table
               for-each:x:@signal/*
                  add:x:+/*/*
                     get-nodes:x:@.dp/#/*
                  add:x:@for-each/@for-each/@for-each/@for-each/@.dp/#/*/tables/0/-/*/indexes
                     .
                        .
         lambda2hyper:x:@.result/*
         return:x:@lambda2hyper
   hyper2lambda:x:@cache.try-get
   add:x:../*/return-nodes/*/databases
      get-nodes:x:@hyper2lambda/*
   return-nodes
      databases
