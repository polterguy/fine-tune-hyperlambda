
// This Hyperlambda code establishes a SQLite database connection and performs a data read operation on the "opportunities" table, joining it with the "clients" table using a left join. It dynamically manages query parameters like order, direction, limit, and offset by adding and removing nodes as necessary. The code specifies the columns to retrieve from both tables and returns the resulting nodes from the data read operation.
data.connect:[generic|crm]
   database-type:sqlite
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:opportunities
         join:clients
            as:client_id
            type:left
            on
               and
                  opportunities.client_id:client_id.client_id
      columns
         opportunities.opportunity_id
         opportunities.client_id
         opportunities.description
         opportunities.value
         opportunities.stage
         opportunities.close_date
         client_id.name
            as:client_id.name
      where
         and
   return-nodes:x:@data.read/*
