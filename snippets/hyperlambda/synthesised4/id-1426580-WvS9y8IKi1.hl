
/*
 * // This Hyperlambda code connects to a database and iterates over a list of files, executing SQL scripts if they end with ".sql". It logs the success or failure of each script execution.
 * // 1. [data.connect] - Connects to a specified database.
 * // 2. [for-each] - Iterates over each file in the list.
 * // 3. [if] - Checks if the file name ends with ".sql".
 * // 4. [strings.ends-with] - Determines if the current file name ends with ".sql".
 * // 5. [io.file.load] - Loads the content of the current file.
 * // 6. [try] - Attempts to execute the SQL script.
 * // 7. [if] - Checks if the database type is "mssql".
 * // 8. [eq] - Compares the database type to "mssql".
 * // 9. [set-name] - Renames the node to "mssql.execute-batch" if the condition is true.
 * // 10. [data.execute] - Executes the SQL script.
 * // 11. [strings.concat] - Concatenates strings to create a success message.
 * // 12. [console.log] - Logs the success message to the console.
 * // 13. [.catch] - Catches any exceptions that occur during script execution.
 * // 14. [strings.concat] - Concatenates strings to create a failure message.
 * // 15. [console.log] - Logs the failure message to the console.
 * // 16. [console.log] - Logs the exception message to the console.
 */
data.connect:[generic|magic]
   for-each:x:@io.file.list/*
      if
         strings.ends-with:x:@.dp/#
            .:.sql
         .lambda
            io.file.load:x:@.dp/#
            try
               if
                  eq
                     get-value:x:@.db-type
                     .:mssql
                  .lambda
                     set-name:x:@if/./*/data.execute
                        .:mssql.execute-batch
               data.execute:x:@io.file.load
               strings.concat
                  .:"Script '"
                  get-value:x:@.dp/#
                  .:"' succeeded"
               console.log:x:@strings.concat
            .catch
               strings.concat
                  .:"Script '"
                  get-value:x:@.dp/#
                  .:"' failed"
               console.log:x:@strings.concat
               console.log:x:@.arguments/*/message
