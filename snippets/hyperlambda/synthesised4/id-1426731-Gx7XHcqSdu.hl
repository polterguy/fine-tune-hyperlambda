
/*
 * // This Hyperlambda code iterates through a list of URLs extracted from an XML structure and processes each URL. 
 * // It checks if the number of URLs is less than 10,000, then processes each URL to ensure it starts with "http://" or "https://". 
 * // If not, it prepends a domain to the URL. It then checks if the URL is unique before adding it to a collection of URLs.
 * // [for-each] iterates through each URL node in the XML structure.
 * // [if] checks if the count of URLs is less than 10,000.
 * // [set-value] assigns the current URL to a temporary node.
 * // [strings.starts-with] checks if the URL starts with "http://" or "https://".
 * // [strings.concat] concatenates the domain with the URL if it doesn't start with "http://" or "https://".
 * // [not-exists] checks if the URL is already in the collection of URLs.
 * // [unwrap] evaluates the expressions to prepare for adding the URL.
 * // [add] adds the processed URL to the collection if it is unique.
 */
for-each:x:"@xml2lambda/*/urlset/*/url/*/loc/*/\\#cdata-section"
   if
      lt
         get-count:x:@.urls/*
         .:int:10000
      .lambda
         .url
         set-value:x:@.url
            get-value:x:@.dp/#
         if
            and
               not
                  strings.starts-with:x:@.dp/#
                     .:"http://"
               not
                  strings.starts-with:x:@.dp/#
                     .:"https://"
            .lambda
               set-value:x:@.url
                  strings.concat
                     get-value:x:@.domain
                     get-value:x:@.dp/#
         if
            not-exists:x:@.urls/*/={@.url}
            .lambda
               unwrap:x:+/*/*
               add:x:@.urls
                  .
                     .:x:@.url
