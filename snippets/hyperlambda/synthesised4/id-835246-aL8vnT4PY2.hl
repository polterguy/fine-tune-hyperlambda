
/*
 * The code checks if there are any nodes under [data.read] and if the [cached] value is equal to 1. If both conditions are true, it unwraps the next sibling nodes and returns the [completion] node's value along with a [finish_reason] of "cached". 
 * 1. [if] - Checks whether the specified conditions are true.
 * 2. [and] - Ensures both child conditions must be true.
 * 3. [exists] - Checks if there are any nodes under [data.read].
 * 4. [eq] - Compares the converted [cached] value to 1.
 * 5. [convert] - Converts the [cached] node value to an integer.
 * 6. [.lambda] - Executes the contained nodes if conditions are met.
 * 7. [unwrap] - Evaluates the next sibling nodes.
 * 8. [return] - Returns the [completion] value and [finish_reason].
 */
if
   and
      exists:x:@data.read/*/*
      eq
         convert:x:@data.read/*/*/cached
            type:int
         .:int:1
   .lambda
      unwrap:x:+/*
      return
         result:x:@data.read/*/*/completion
         finish_reason:cached
