
/*
 * 1. `@.cur` - This iterator starts by finding the first ancestor node named `.cur`. It looks for a node named `.cur` starting from the current node and moving upwards in the hierarchy. This is useful for referencing a specific parent node within a nested structure.
 * 
 * 2. `*` - This iterator retrieves all children nodes of the `.cur` node. It expands the search to include every direct child node under `.cur`, regardless of their names.
 * 
 * 3. `fork` - This iterator filters the previously retrieved children nodes to only include those named `fork`. It narrows down the selection to nodes specifically named `fork` among the children of `.cur`.
 * 
 * 4. `*` - This iterator again retrieves all children nodes, but this time it operates on the nodes named `fork`. It gathers all direct children of each `fork` node.
 * 
 * 5. `.reference` - This iterator filters the children of `fork` nodes to only include those named `.reference`. It selects nodes specifically named `.reference` from the children of `fork` nodes, allowing access to these nodes' values or further children.
 */

.:x:@.cur/*/fork/*/.reference