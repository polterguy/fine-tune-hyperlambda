
// This Hyperlambda code constructs a SQL CASE statement to check if a specific pattern exists within a field. It concatenates parts of the SQL query using [strings.concat] and [get-value] to dynamically build the SQL string. The logic calculates the occurrence of a pattern by comparing the length of the field with and without the pattern, and sets the result to 1 if the pattern exists, otherwise 0. The code uses [set-value] to assign the constructed SQL string to the [.sql] node.
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" CASE WHEN ((length("
      get-value:x:@.fields
      .:) - length(replace(lower(
      get-value:x:@.fields
      .:), @p
      get-value:x:@.no
      .:", ''))) / length(@p"
      get-value:x:@.no
      .:)) > 0 THEN 1 ELSE 0 END
