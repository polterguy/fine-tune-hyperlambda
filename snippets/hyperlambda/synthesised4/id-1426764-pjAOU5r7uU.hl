
/*
 * This Hyperlambda code processes a data type conversion and classification logic. It first performs a regex replacement on a type string to remove numeric sequences, then removes the word "unsigned". Based on the cleaned type string, it uses a switch-case structure to classify the type into categories like date, decimal, long, string, or bool, setting the resulting type accordingly. If no cases match, it defaults to checking if the type starts with "enum" to set it as a string, otherwise defaults to string.
 * 
 * 1. [else] - Executes if previous conditions are false.
 * 2. [strings.regex-replace] - Removes numeric sequences from the type string.
 * 3. [strings.replace] - Removes "unsigned" from the type string.
 * 4. [switch] - Classifies the type string into predefined categories.
 * 5. [case] - Matches specific type strings to set the type.
 * 6. [set-value] - Assigns the determined type to a node.
 * 7. [default] - Handles unmatched cases, checking for "enum" prefix.
 * 8. [if] - Checks if the string starts with "enum".
 * 9. [else] - Defaults to setting the type as string if no conditions match.
 */
else
   strings.regex-replace:x:@.dp/#/*/Type
      .:"\\([0-9,]+\\)"
      .:
   strings.replace:x:@strings.regex-replace
      .:" unsigned"
      .:
   switch:x:@strings.replace
      case:date
      case:datetime
      case:timestamp
         set-value:x:@.type
            .:date
      case:float
      case:double
      case:double precision
      case:decimal
      case:dec
         set-value:x:@.type
            .:decimal
      case:bit
      case:tinyint
      case:bool
      case:boolean
      case:smallint
      case:mediumint
      case:integer
      case:bigint
      case:int
      case:int unsigned
         set-value:x:@.type
            .:long
      case:char
      case:varchar
      case:binary
      case:varbinary
      case:tinyblob
      case:tinytext
      case:text
      case:blob
      case:mediumtext
      case:mediumblob
      case:longtext
      case:longblob
      case:enum
      case:set
         set-value:x:@.type
            .:string
      case:tinyint
         set-value:x:@.type
            .:bool
      default
         if
            strings.starts-with:x:@strings.replace
               .:enum
            .lambda
               set-value:x:@.type
                  .:string
         else
            set-value:x:@.type
               .:string
