
// This Hyperlambda code connects to a SQLite database and performs a data read operation on the "opportunities" table, joining it with the "clients" table using a left join. It constructs an aggregate function using the provided arguments, removes certain nodes, and adds nodes to the where clause. The result is limited to one record, with the aggregate function result being aliased as "result". The final result set is returned.
data.connect:[generic|crm]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/aggregate_functor
      strings.concat
         get-value:x:@.arguments/*/aggregate_function
         .:(
         get-value:x:@.arguments/*/aggregate_column
         .:)
   remove-nodes:x:@.arguments/*/[0,2]
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:opportunities
         join:clients
            as:client_id
            type:left
            on
               and
                  opportunities.client_id:client_id.client_id
      columns
         aggregate_functor
            as:result
      where
         and
      limit:long:1
   return-nodes:x:@data.read/*/*
