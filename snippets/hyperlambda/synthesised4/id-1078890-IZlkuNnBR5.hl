
/*
 * 1. `@html2lambda` - This iterator starts by finding the first node with the name "html2lambda" in the current context. It is used to locate the specific node from which the expression will begin its traversal. This is useful when you need to start your search from a specific node within a larger structure.
 * 
 * 2. `*` - This iterator retrieves all children nodes of the previously found node. In this case, it will get all children of the "html2lambda" node. This is useful when you want to explore all possible paths from a starting node.
 * 
 * 3. `html` - This iterator filters the result set to only include nodes named "html". It is used to narrow down the search to specific nodes that match the given name, which is essential when working with structured data like HTML documents.
 * 
 * 4. `*` - Again, this iterator retrieves all children nodes of the previously found "html" node. This step is necessary to continue the traversal deeper into the HTML structure.
 * 
 * 5. `body` - This iterator filters the result set to only include nodes named "body". It is used to focus on the body section of an HTML document, which typically contains the main content.
 * 
 * 6. `**` - This iterator retrieves all descendant nodes of the current node, including the node itself. It is a breadth-first search that explores all levels of the hierarchy. This is useful when you want to search through an entire subtree for a specific node.
 * 
 * 7. `main` - This iterator filters the result set to only include nodes named "main". It is used to locate the main content area within the body of an HTML document, which is often where the primary content resides.
 * 
 * Potential use cases for this expression include extracting or manipulating the main content from an HTML document, such as when converting HTML to another format or analyzing the content for data processing purposes.
 */

.:x:@html2lambda/*/html/*/body/**/main