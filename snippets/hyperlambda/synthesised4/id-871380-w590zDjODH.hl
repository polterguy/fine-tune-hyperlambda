
/*
 * This Hyperlambda code connects to a SQLite database named "northwind" and constructs a SQL query to count distinct values in a specified column from the "Products" table. It uses left joins with "Categories" and "Suppliers" tables and dynamically builds the "distinct_functor" column using a concatenated string. The code removes the "distinct_column" argument after use and adds additional conditions from the arguments to the "where" clause. Finally, it returns the results of the SQL query execution. 
 * 
 * 1. [data.connect] - Connects to the SQLite database named "northwind".
 * 2. [database-type] - Specifies the database type as SQLite.
 * 3. [set-name] - Constructs a SQL function to count distinct values in a specified column.
 * 4. [strings.concat] - Concatenates strings to form the SQL "count(distinct ...)" function.
 * 5. [get-value] - Retrieves the value of the "distinct_column" argument.
 * 6. [remove-nodes] - Removes the "distinct_column" argument after use.
 * 7. [add] - Adds conditions from arguments to the "where" clause.
 * 8. [get-nodes] - Retrieves nodes from arguments to add to the "where" clause.
 * 9. [data.read] - Executes the SQL query on the "Products" table.
 * 10. [join] - Joins "Categories" and "Suppliers" tables using left joins.
 * 11. [columns] - Specifies the columns to select, including the "distinct_functor".
 * 12. [where] - Adds conditions to the SQL query.
 * 13. [return-nodes] - Returns the results of the SQL query execution.
 */
data.connect:[generic|northwind]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/distinct_functor
      strings.concat
         .:"count(distinct "
         get-value:x:@.arguments/*/distinct_column
         .:)
   remove-nodes:x:@.arguments/*/distinct_column
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Products
         join:Categories
            as:ProductID
            type:left
            on
               and
                  Products.ProductID:ProductID.CategoryID
         join:Suppliers
            as:SupplierID
            type:left
            on
               and
                  Products.SupplierID:SupplierID.SupplierID
      columns
         distinct_functor
            as:count
      where
         and
   return-nodes:x:@data.read/*/*
