
/*
 * 1. `@.lambda` - Finds the first ancestor node named [.lambda] relative to the current node.
 * 2. `@.lambda` - From the previously found [.lambda] node, finds its first ancestor node named [.lambda] (i.e., the grandparent [.lambda] node if nested).
 * 3. `*` - Retrieves all children of the second [.lambda] ancestor node.
 * 4. `http.post` - Filters the children nodes to only those named [http.post].
 * 5. `*` - Retrieves all children of the [http.post] node(s).
 * 6. `payload` - Filters the children nodes to only those named [payload].
 * 7. `*` - Retrieves all children of the [payload] node(s).
 * 8. `max_tokens` - Filters the children nodes to only those named [max_tokens].
 * 
 * This expression ultimately finds all [max_tokens] nodes that are descendants of a [payload] node, which is a child of a [http.post] node, itself a child of the grandparent [.lambda] node relative to the current node.
 */

.:x:@.lambda/@.lambda/*/http.post/*/payload/*/max_tokens