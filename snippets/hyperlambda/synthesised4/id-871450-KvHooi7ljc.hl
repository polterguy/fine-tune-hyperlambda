
// This Hyperlambda code connects to a SQLite database and performs a data read operation on the "documents" table, joining it with the "clients" table. It constructs a distinct function for a specified column, removes certain nodes from the arguments, and adds limit, offset, order, and direction nodes to the data read operation. The code then removes these nodes from the arguments and adds all remaining argument nodes to the where clause of the data read operation. Finally, it returns the nodes from the data read operation.
data.connect:[generic|crm]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/distinct_functor
      strings.concat
         .:distinct(
         get-value:x:@.arguments/*/distinct_column
         .:)
   remove-nodes:x:@.arguments/*/distinct_column
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:documents
         join:clients
            as:client_id
            type:left
            on
               and
                  documents.client_id:client_id.client_id
      columns
         distinct_functor
            as:.
      where
         and
   return-nodes:x:@data.read/*/*
