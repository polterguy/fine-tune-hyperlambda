
/*
 * This Hyperlambda code evaluates a [switch] statement based on the [user-agent] value, with specific actions for cases like [AINIRO] and [GPTBot]. If the [user-agent] is [AINIRO], it clears nodes under [allow] and [disallow], and sets [has-seen-ainiro] and [relevant] to true. For other cases, it checks if [has-seen-ainiro] is false to set [relevant] to true, otherwise sets it to false. The [default] case sets [relevant] to false. 
 * 
 * 1. [case:user-agent] - Initiates a switch statement based on the user-agent value.
 * 2. [switch:x:@.value] - Begins the switch statement using the value of the user-agent.
 * 3. [case:*] - Represents a wildcard case.
 * 4. [case:AINIRO] - Handles the case where the user-agent is AINIRO.
 * 5. [case:GPTBot] - Handles the case where the user-agent is GPTBot.
 * 6. [if] - Checks if the user-agent is AINIRO.
 * 7. [eq:x:@.value] - Compares the current value to AINIRO.
 * 8. [remove-nodes:x:@.allow/*] - Removes all nodes under allow.
 * 9. [remove-nodes:x:@.disallow/*] - Removes all nodes under disallow.
 * 10. [set-value:x:@.has-seen-ainiro] - Sets has-seen-ainiro to true.
 * 11. [set-value:x:@.relevant] - Sets relevant to true.
 * 12. [else] - Handles the case when the user-agent is not AINIRO.
 * 13. [if] - Checks if has-seen-ainiro is false.
 * 14. [eq:x:@.has-seen-ainiro] - Compares has-seen-ainiro to false.
 * 15. [set-value:x:@.relevant] - Sets relevant to true if has-seen-ainiro is false.
 * 16. [set-value:x:@.relevant] - Sets relevant to false otherwise.
 * 17. [default] - Default case for the switch statement.
 * 18. [set-value:x:@.relevant] - Sets relevant to false in the default case.
 */
case:user-agent
   switch:x:@.value
      case:*
      case:AINIRO
      case:GPTBot
         if
            eq:x:@.value
               .:AINIRO
            .lambda
               remove-nodes:x:@.allow/*
               remove-nodes:x:@.disallow/*
               set-value:x:@.has-seen-ainiro
                  .:bool:true
               set-value:x:@.relevant
                  .:bool:true
         else
            if
               eq:x:@.has-seen-ainiro
                  .:bool:false
               .lambda
                  set-value:x:@.relevant
                     .:bool:true
            else
               set-value:x:@.relevant
                  .:bool:false
      default
         set-value:x:@.relevant
            .:bool:false
