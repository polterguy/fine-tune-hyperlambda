
/*
 * // This Hyperlambda code snippet demonstrates how to use the [data.create] slot to insert a new record into a database table named "ml_requests". It specifies the fields to be inserted and their corresponding values, which are dynamically retrieved using lambda expressions. The values are extracted from the [.arguments] and [.result] nodes, ensuring that the data is correctly mapped to the respective columns in the database. This approach is useful for logging or tracking machine learning requests, capturing details such as the type of request, prompt, completion result, finish reason, session, user ID, and referrer.
 * // 1. [data.create] - Initiates the creation of a new record in the specified database table.
 * // 2. [table] - Specifies the name of the table ("ml_requests") where the record will be inserted.
 * // 3. [values] - Contains the fields and their corresponding values to be inserted into the table.
 * // 4. [type] - Retrieves the value for the "type" field from the [.arguments] node.
 * // 5. [prompt] - Retrieves the value for the "prompt" field from the [.arguments] node.
 * // 6. [completion] - Retrieves the value for the "completion" field from the [.result] node.
 * // 7. [finish_reason] - Retrieves the value for the "finish_reason" field from the [.result] node.
 * // 8. [session] - Retrieves the value for the "session" field from the [.arguments] node.
 * // 9. [user_id] - Retrieves the value for the "user_id" field from the [.arguments] node.
 * // 10. [referrer] - Retrieves the value for the "referrer" field from the [.arguments] node.
 */
data.create
   table:ml_requests
   values
      type:x:@.arguments/*/type
      prompt:x:@.arguments/*/prompt
      completion:x:@.result/*/result
      finish_reason:x:@.result/*/finish_reason
      session:x:@.arguments/*/session
      user_id:x:@.arguments/*/user_id
      referrer:x:@.arguments/*/referrer
