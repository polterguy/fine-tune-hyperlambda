
// This Hyperlambda code iterates over each node resulting from splitting a string and trims whitespace and tabs from each node's value. It then checks if the trimmed value exists in the user's roles and does not exist in a specific model type. If both conditions are true, it adds the node to the models collection. The slots used include [for-each] for iteration, [strings.trim] for trimming, [exists] and [not-exists] for conditional checks, and [add] for appending nodes.
for-each:x:@strings.split/*
   strings.trim:x:@.dp/#
      .:" \t"
   if
      and
         exists:x:@auth.ticket.get/*/roles/*/={@strings.trim}
         not-exists:x:"@.models/*/*/type/\"={@for-each/@.dp/#/*/type}\""
      .lambda
         add:x:@.models
            get-nodes:x:@for-each/@.dp/#
