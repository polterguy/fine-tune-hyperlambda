
/*
 * This Hyperlambda code checks if a session exists and is not null or empty. If the session is valid, it retrieves the session data from the cache. If the cached session data is not null, it converts the maximum session items to an integer and converts the cached session data to a Hyperlambda string. It then enters a loop to remove nodes from the session data until the count of nodes is less than or equal to the maximum session items. Finally, it adds the processed session nodes to a [.session] node.
 * 
 * 1. [if] - Checks if the session exists, is not null, and is not empty.
 * 2. [cache.get] - Retrieves session data from the cache using the session key.
 * 3. [if] - Checks if the cached session data is not null.
 * 4. [convert] - Converts the maximum session items to an integer.
 * 5. [hyper2lambda] - Converts the cached session data to a Hyperlambda string.
 * 6. [while] - Loops while the count of nodes in the session data is greater than the maximum session items.
 * 7. [remove-nodes] - Removes the first node from the session data.
 * 8. [add] - Adds the processed session nodes to a [.session] node.
 */
if
   and
      exists:x:@.arguments/*/session
      not-null:x:@.arguments/*/session
      neq:x:@.arguments/*/session
         .:
   .lambda
      cache.get:x:@.arguments/*/session
      if
         not-null:x:@cache.get
         .lambda
            convert:x:@.arguments/*/max_session_items
               type:int
            hyper2lambda:x:@cache.get
            while
               mt
                  get-count:x:@hyper2lambda/*
                  get-value:x:@convert
               .lambda
                  remove-nodes:x:@hyper2lambda/0
            add:x:@.session
               get-nodes:x:@hyper2lambda/*
