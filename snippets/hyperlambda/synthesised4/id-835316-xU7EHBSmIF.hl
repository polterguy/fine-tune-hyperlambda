
// The code checks if the [stream] argument is either false or does not exist using [or] with [eq] and [not-exists]. If either condition is true, it executes the [.lambda] block, which unwraps the next sibling's children and adds a [return] node with the [result] and [finish_reason] from the [invoke] node.
if
   or
      eq:x:@.arguments/*/stream
         .:bool:false
      not-exists:x:@.arguments/*/stream
   .lambda
      unwrap:x:+/*/*
      add:x:../*/return
         .
            result:x:@.invoke/*/.result
            finish_reason:x:@.invoke/*/.finish_reason
