
// This Hyperlambda code attempts to retrieve cached database metadata, or fetches it if not cached, for a specified database type and connection string. It constructs a signal to retrieve database information, removes system databases, iterates over databases to gather tables, columns, foreign keys, and indexes, and finally returns the metadata as a Hyperlambda object. Key slots include [cache.try-get] for caching, [strings.concat] for constructing signal names, [remove-nodes] for excluding system databases, and [for-each] for iterating over database components.
cache.try-get:x:@strings.concat
   expiration:36000
   .lambda
      .databaseType:x:@.arguments/*/databaseType
      .connection-string:x:@.arguments/*/connectionString
      strings.concat
         .:magic.db.
         get-value:x:@.databaseType
         .:.databases
      unwrap:x:+/*
      signal:x:@strings.concat
         connection-string:x:@.connection-string
      switch:x:@.databaseType
         case:mssql
            remove-nodes:x:@signal/*/*/db/=master
            remove-nodes:x:@signal/*/*/db/=tempdb
            remove-nodes:x:@signal/*/*/db/=model
            remove-nodes:x:@signal/*/*/db/=msdb
         case:mysql
            remove-nodes:x:@signal/*/*/db/=information_schema
            remove-nodes:x:@signal/*/*/db/=mysql
            remove-nodes:x:@signal/*/*/db/=performance_schema
            remove-nodes:x:@signal/*/*/db/=sys
         case:pgsql
            remove-nodes:x:@signal/*/*/db/=template1
            remove-nodes:x:@signal/*/*/db/=template0
      .result
      for-each:x:@signal/*/*
         set-name:x:@.dp/#
            .:database
         unwrap:x:+/*/*/*
         add:x:@.result
            .
               .
                  name:x:@.dp/#
                  tables
      for-each:x:@.result/*
         strings.concat
            .:magic.db.
            get-value:x:@.databaseType
            .:.tables
         unwrap:x:+/*
         signal:x:@strings.concat
            connection-string:x:@.connection-string
            database:x:@.dp/#/*/name
         for-each:x:@signal/*
            unwrap:x:+/*/*/*
            add:x:@for-each/@.dp/#/*/tables
               .
                  .
                     name:x:@.dp/#/*/table
                     columns
            strings.concat
               .:magic.db.
               get-value:x:@.databaseType
               .:.columns
            unwrap:x:+/*
            signal:x:@strings.concat
               connection-string:x:@.connection-string
               database:x:@for-each/@.dp/#/*/name
               table:x:@.dp/#/*/table
            for-each:x:@signal/*
               unwrap:x:+/*/*/*
               add:x:@for-each/@for-each/@.dp/#/*/tables/0/-/*/columns
                  .
                     .
                        name:x:@.dp/#/*/name
                        db:x:@.dp/#/*/db
                        nullable:x:@.dp/#/*/nullable
                        primary:x:@.dp/#/*/primary
                        automatic:x:@.dp/#/*/automatic
                        hl:x:@.dp/#/*/hl
            add:x:@for-each/@for-each/@.dp/#/*/tables/0/-
               .
                  foreign_keys
            strings.concat
               .:magic.db.
               get-value:x:@.databaseType
               .:.foreign_keys
            unwrap:x:+/*
            signal:x:@strings.concat
               connection-string:x:@.connection-string
               database:x:@for-each/@for-each/@.dp/#/*/name
               table:x:@.dp/#/*/table
            for-each:x:@signal/*
               add:x:+/*/*
                  get-nodes:x:@.dp/#/*
               add:x:@for-each/@for-each/@for-each/@.dp/#/*/tables/0/-/*/foreign_keys
                  .
                     .
            add:x:@for-each/@for-each/@for-each/@.dp/#/*/tables/0/-
               .
                  indexes
            strings.concat
               .:magic.db.
               get-value:x:@.databaseType
               .:.indexes
            unwrap:x:+/*
            signal:x:@strings.concat
               connection-string:x:@.connection-string
               database:x:@for-each/@for-each/@for-each/@.dp/#/*/name
               table:x:@.dp/#/*/table
            for-each:x:@signal/*
               add:x:+/*/*
                  get-nodes:x:@.dp/#/*
               add:x:@for-each/@for-each/@for-each/@for-each/@.dp/#/*/tables/0/-/*/indexes
                  .
                     .
      lambda2hyper:x:@.result/*
      return:x:@lambda2hyper
