
// This Hyperlambda code connects to a SQLite database named "hospital" and performs a read operation on the "Treatments" table, joining it with the "Patients" table using a left join on the "PatientID" field. It dynamically adds and removes nodes for ordering, direction, limit, and offset based on arguments, and retrieves specific columns from both tables. The result of the read operation is returned.
data.connect:[generic|hospital]
   database-type:sqlite
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Treatments
         join:Patients
            as:PatientID
            type:left
            on
               and
                  Treatments.PatientID:PatientID.PatientID
      columns
         Treatments.TreatmentID
         Treatments.PatientID
         Treatments.TreatmentDate
         Treatments.Description
         PatientID.FirstName
            as:PatientID.FirstName
      where
         and
   return-nodes:x:@data.read/*
