
// This Hyperlambda code defines a dynamic slot [magic.workflows.actions.execute] that executes a workflow action. It requires mandatory arguments [name] and [filename]. If the user is in the "root" role, it signals the start of an action and records the current time. It then attempts to execute a file specified by [filename], adding any arguments provided. Upon successful execution, it signals the result with execution time and output if the user is in the "root" role. If an error occurs, it signals an error message and throws an exception with status and public visibility based on the provided arguments.
slots.create:magic.workflows.actions.execute
   validators.mandatory:x:@.arguments/*/name
   validators.mandatory:x:@.arguments/*/filename
   .time
   if
      auth.ticket.in-role:root
      .lambda
         add:x:./*/sockets.signal/*/args/*/input
            get-nodes:x:@.arguments/*/arguments/*
         unwrap:x:+/**
         sockets.signal:magic.workflows.action
            roles:root
            args
               type:action
               name:x:@.arguments/*/name
               input
         set-value:x:@.time
            date.now
   try
      add:x:./*/execute-file
         get-nodes:x:@.arguments/*/arguments/*
      execute-file:x:@.arguments/*/filename
      if
         auth.ticket.in-role:root
         .lambda
            add:x:./*/sockets.signal/*/args/*/output
               get-nodes:x:@execute-file/*
            math.subtract
               date.now
               get-value:x:@.time
            unwrap:x:+/**
            sockets.signal:magic.workflows.action
               roles:root
               args
                  type:result
                  time:x:@math.subtract
                  output
      set-value:x:./*/return
         get-value:x:@.arguments/*/name
      add:x:./*/return
         get-nodes:x:@execute-file/*
      return
   .catch
      if
         auth.ticket.in-role:root
         .lambda
            unwrap:x:+/**
            sockets.signal:magic.workflows.action
               roles:root
               args
                  type:error
                  message:x:@.arguments/*/message
      throw:x:@.arguments/*/message
         status:x:@.arguments/*/status
         public:x:@.arguments/*/public
