
/*
 * This Hyperlambda code processes product data from an HTTP GET request, creating training snippets for machine learning. It checks if products are in stock and have a description, then constructs a prompt and completion using product details like price, URL, and images. The snippets are stored in a database table for training purposes.
 * 
 * 1. [data.connect] - Connects to a data source.
 * 2. [for-each] - Iterates over each product in the HTTP response.
 * 3. [if] - Checks conditions such as stock status and description presence.
 * 4. [.lambda] - Executes code if conditions are met.
 * 5. [set-value] - Sets values for prompt and completion.
 * 6. [strings.concat] - Concatenates strings for prompt and completion.
 * 7. [html2markdown] - Converts HTML to Markdown format.
 * 8. [exists] - Checks if images exist for a product.
 * 9. [data.create] - Inserts the training snippet into the database.
 */
data.connect:[generic|magic]
   for-each:x:@http.get/*/content/*
      if
         and
            eq:x:@.dp/#/*/stock_status
               .:instock
            not-null:x:@.dp/#/*/description
            neq:x:@.dp/#/*/description
               .:
         .lambda
            .prompt
            .completion
            set-value:x:@.prompt
               strings.concat
                  html2markdown:x:@.dp/#/*/description
            set-value:x:@.completion
               strings.concat
                  .:"Price: "
                  get-value:x:@.dp/#/*/price
                  .:@"

"
                  .:"URL: "
                  get-value:x:@.dp/#/*/permalink
            if
               and
                  not-null:x:@.dp/#/*/short_description
                  neq:x:@.dp/#/*/short_description
                     .:
               .lambda
                  set-value:x:@.completion
                     strings.concat
                        get-value:x:@.completion
                        .:@"

"
                        .:"Short description: "
                        html2markdown:x:@.dp/#/*/short_description
            if
               exists:x:@.dp/#/*/images/*
               .lambda
                  set-value:x:@.completion
                     strings.concat
                        get-value:x:@.completion
                        .:@"

Images of product:"
                  for-each:x:@.dp/#/*/images/*
                     set-value:x:@.completion
                        strings.concat
                           get-value:x:@.completion
                           .:@"

"
                           .:![
                           get-value:x:@.dp/#/*/name
                           .:](
                           get-value:x:@.dp/#/*/src
                           .:)
            data.create
               table:ml_training_snippets
               values
                  type:x:@.arguments/*/type
                  prompt:x:@.prompt
                  completion:x:@.completion
                  uri:x:@.uri
                  meta:woocommerce-import
