
/*
 * This Hyperlambda code snippet demonstrates the use of the [else-if] slot to conditionally execute a lambda object if multiple conditions are met. It checks for the existence and non-nullity of [username] and [password] in the [.arguments] node. If these conditions are true, it unwraps the next sibling node and adds [token_type], [username], and [password] to the [arguments] node of an [execute] slot. 
 * 
 * 1. [else-if] - Evaluates the following conditions only if the previous [if] or [else-if] slots evaluated to false.
 * 2. [and] - Ensures all child conditions must be true for the [else-if] to execute its lambda.
 * 3. [exists] - Checks if [username] and [password] nodes exist in [.arguments].
 * 4. [not-null] - Ensures [username] and [password] are not null.
 * 5. [neq] - Confirms [username] and [password] are not empty strings.
 * 6. [.lambda] - Contains the actions to execute if all conditions are met.
 * 7. [unwrap] - Evaluates and executes the next sibling node.
 * 8. [add] - Adds [token_type], [username], and [password] to the [arguments] node of an [execute] slot.
 */
else-if
   and
      exists:x:@.arguments/*/username
      not-null:x:@.arguments/*/username
      neq:x:@.arguments/*/username
         .:
      exists:x:@.arguments/*/password
      not-null:x:@.arguments/*/password
      neq:x:@.arguments/*/password
         .:
   .lambda
      unwrap:x:+/*/*
      add:x:../*/execute/*/arguments
         .
            token_type:x:@.arguments/*/token_type
            username:x:@.arguments/*/username
            password:x:@.arguments/*/password
