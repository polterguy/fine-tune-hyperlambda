
// This Hyperlambda code connects to a database and attempts to read from the "users_extra" table to check if a record exists for a given username and type (either "name" or "email"). If such a record exists, it updates the email and name values for the user. If no record is found, it creates new entries for the email and name in the "users_extra" table. The code uses conditional logic to determine whether to update existing records or create new ones based on the presence of data.
data.connect:[generic|magic]
   data.read
      table:users_extra
      where
         and
            user.eq:x:@.arguments/*/username
            or
               type.eq:name
               type.eq:email
      limit:1
   if
      exists:x:@data.read/*/*
      .lambda
         data.update
            table:users_extra
            values
               value:x:@.arguments/*/email
               user:x:@.arguments/*/username
               type:email
            where
               and
                  user.eq:x:@.arguments/*/username
                  type.eq:email
         data.update
            table:users_extra
            values
               value:x:@.arguments/*/subject
               user:x:@.arguments/*/username
               type:name
            where
               and
                  user.eq:x:@.arguments/*/username
                  type.eq:name
   else
      data.create
         table:users_extra
         values
            value:x:@.arguments/*/email
            user:x:@.arguments/*/username
            type:email
      data.create
         table:users_extra
         values
            value:x:@.arguments/*/subject
            user:x:@.arguments/*/username
            type:name
