
// This Hyperlambda code snippet is designed to perform a SQL query on a SQLite database, specifically targeting the "Order Details" table. It utilizes left joins to associate data from the "Orders" and "Products" tables, ensuring that all records from "Order Details" are included, even if there are no matching records in the joined tables. The join conditions are specified using the "OrderID" and "ProductID" fields to link the tables appropriately. The query also includes a column selection with an alias "result" for an aggregated value, and it groups the results based on a specified column. The final result of the query is returned using the [return-nodes] slot, which extracts and returns all nodes from the [data.read] operation. This setup is useful for generating reports or summaries that require data aggregation and joining from multiple related tables.
data.read
   database-type:sqlite
   table:Order Details
      join:Orders
         as:OrderID
         type:left
         on
            and
               Order Details.OrderID:OrderID.OrderID
      join:Products
         as:ProductID
         type:left
         on
            and
               Order Details.ProductID:ProductID.ProductID
   columns
      aggregate_functor
         as:result
   where
      and
   group
      group_column
return-nodes:x:@data.read/*
