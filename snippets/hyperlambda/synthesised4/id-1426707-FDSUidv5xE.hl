
/*
 * This Hyperlambda code reads an XML file stream, converts it into a lambda object, iterates over each node, and modifies specific nodes by setting their names to "prompt" and "completion" based on provided arguments. It then adds these modified nodes to a [.file-data] node. The code is structured as follows:
 * 
 * 1. [case] - Defines a case block for handling specific logic.
 * 2. [io.stream.read] - Reads a file stream from the provided arguments.
 * 3. [xml2lambda] - Converts the XML stream into a lambda object.
 * 4. [for-each] - Iterates over each node in the lambda object.
 * 5. [unwrap] - Evaluates expressions within the current node.
 * 6. [set-name] - Changes the name of specific nodes to "prompt" and "completion".
 * 7. [add] - Adds the modified nodes to a [.file-data] node.
 */
case:xml
   io.stream.read:x:@.arguments/*/file/*/stream
   xml2lambda:x:@io.stream.read
   for-each:x:@xml2lambda/*/*
      unwrap:x:./*/add/*/*/*
      set-name:x:./*/add/*/*/*/prompt
         get-value:x:@.arguments/*/prompt
      set-name:x:./*/add/*/*/*/completion
         get-value:x:@.arguments/*/completion
      add:x:@.file-data
         .
            .
               prompt:x:"@.dp/#/*/\"{@.arguments/*/prompt}\"/*/\\#text"
               completion:x:"@.dp/#/*/\"{@.arguments/*/completion}\"/*/\\#text"
