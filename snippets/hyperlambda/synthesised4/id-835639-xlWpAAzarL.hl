
/*
 * This Hyperlambda code checks if the value of [.no] is equal to 0, and if so, it constructs a SQL string by concatenating various parts. The [set-value] slot updates the [.sql] node with this concatenated string, which includes SQL functions for calculating the length of a field and replacing characters. The [strings.concat] slot is used to build this SQL expression dynamically by combining existing values and static strings. 
 * 
 * 1. [if] - Checks if [.no] is equal to 0.
 * 2. [eq] - Compares the value of [.no] to 0.
 * 3. [.lambda] - Executes the following block if the condition is true.
 * 4. [set-value] - Updates the value of [.sql].
 * 5. [strings.concat] - Concatenates multiple strings to form a SQL expression.
 * 6. [get-value:x:@.sql] - Retrieves the current value of [.sql].
 * 7. [get-value:x:@.fields] - Retrieves the value of [.fields].
 * 8. [get-value:x:@.no] - Retrieves the value of [.no].
 */
if
   eq:x:@.no
      .:int:0
   .lambda
      set-value:x:@.sql
         strings.concat:x:@.sql
            get-value:x:@.sql
            .:" (length("
            get-value:x:@.fields
            .:) - length(replace(lower(
            get-value:x:@.fields
            .:), @p
            get-value:x:@.no
            .:", ''))) / length(@p"
            get-value:x:@.no
            .:)
