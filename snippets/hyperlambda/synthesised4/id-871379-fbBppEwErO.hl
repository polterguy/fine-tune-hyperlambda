
// This Hyperlambda code connects to a SQLite database and performs a SQL query on the "Products" table with left joins to "Categories" and "Suppliers". It dynamically constructs an aggregate function using [strings.concat] and removes unnecessary nodes with [remove-nodes]. The query retrieves a single result using a specified aggregate function on a column, and the result is returned using [return-nodes]. The [add] slot is used to append conditions to the query's [where] clause.
data.connect:[generic|northwind]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/aggregate_functor
      strings.concat
         get-value:x:@.arguments/*/aggregate_function
         .:(
         get-value:x:@.arguments/*/aggregate_column
         .:)
   remove-nodes:x:@.arguments/*/[0,2]
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Products
         join:Categories
            as:ProductID
            type:left
            on
               and
                  Products.ProductID:ProductID.CategoryID
         join:Suppliers
            as:SupplierID
            type:left
            on
               and
                  Products.SupplierID:SupplierID.SupplierID
      columns
         aggregate_functor
            as:result
      where
         and
      limit:long:1
   return-nodes:x:@data.read/*/*
