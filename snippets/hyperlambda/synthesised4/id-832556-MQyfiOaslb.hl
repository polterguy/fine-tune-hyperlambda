
/*
 * This Hyperlambda code connects to a SQLite database named "northwind" and performs a distinct query on the "CustomerCustomerDemo" table. It constructs a distinct function using a specified column, removes unnecessary nodes, and adds limit, offset, order, and direction parameters to the query. The final result is returned as nodes from the data read operation. 
 * 
 * 1. [data.connect] - Connects to the "northwind" database using SQLite.
 * 2. [database-type] - Specifies the database type as SQLite.
 * 3. [set-name] - Constructs a distinct function using a specified column.
 * 4. [remove-nodes] - Removes nodes for distinct column, order, direction, limit, and offset.
 * 5. [add] - Adds limit, offset, order, and direction parameters to the data read operation.
 * 6. [data.read] - Reads data from the "CustomerCustomerDemo" table with specified parameters.
 * 7. [return-nodes] - Returns the result of the data read operation.
 */
data.connect:[generic|northwind]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/distinct_functor
      strings.concat
         .:distinct(
         get-value:x:@.arguments/*/distinct_column
         .:)
   remove-nodes:x:@.arguments/*/distinct_column
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:CustomerCustomerDemo
      columns
         distinct_functor
            as:.
      where
         and
   return-nodes:x:@data.read/*/*
