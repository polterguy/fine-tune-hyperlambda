
// This Hyperlambda code defines a dynamic slot [magic.modules.ensure-database] that ensures a specified database exists for a given module. It validates mandatory arguments [module] and [database], sets default values, and constructs paths for database creation and migration scripts. The code checks if the database exists, and if not, it loads and executes the appropriate SQL script based on the database type (MySQL, PostgreSQL, MSSQL, SQLite). It logs success or error messages and processes migration scripts if they exist. The slot returns a boolean indicating the operation's success.
slots.create:magic.modules.ensure-database
   validators.mandatory:x:@.arguments/*/module
   validators.mandatory:x:@.arguments/*/database
   .result:bool:true
   cache.clear
   .database-type:x:@.arguments/*/database-type
   unwrap:x:-
   if
      null:x:@.database-type
      .lambda
         set-value:x:@.database-type
            config.get:"magic:databases:default"
   .create-database-script
   .migration-script-folder
   set-value:x:@.create-database-script
      strings.concat
         .:/modules/
         get-value:x:@.arguments/*/module
         .:/magic.startup/
         get-value:x:@.arguments/*/module
         .:.
         get-value:x:@.database-type
         .:.sql
   set-value:x:@.migration-script-folder
      strings.concat
         .:/modules/
         get-value:x:@.arguments/*/module
         .:/magic.startup/db-migrations/
         get-value:x:@.database-type
         .:/
   strings.concat
      .:magic.db.
      get-value:x:@.database-type
      .:.databases
   signal:x:-
   strings.concat
      .:@signal/*/*/db/=
      get-value:x:@.arguments/*/database
   set-x:x:+/*/*/exists
      convert:x:@strings.concat
         type:x
   if
      not
         exists
      .lambda
         try
            io.file.load:x:@.create-database-script
            switch:x:@.database-type
               case:mysql
                  mysql.connect:sys
                     mysql.execute:x:@io.file.load
               case:pgsql
                  pgsql.connect:postgres
                     strings.concat
                        .:"create database "
                        get-value:x:@.arguments/*/database
                     pgsql.execute:x:-
                        database:x:@.arguments/*/database
                  pgsql.connect:x:@.arguments/*/database
                     pgsql.execute:x:@io.file.load
               case:mssql
                  mssql.connect:master
                     mssql.execute-batch:x:@io.file.load
               case:sqlite
                  strings.concat
                     .:/data/
                     get-value:x:@.arguments/*/database
                     .:.db
                  io.file.save:x:-
                     .:
                  sqlite.connect:x:@.arguments/*/database
                     sqlite.execute:x:@io.file.load
            log.info:Successfully created database
               database_name:x:@.arguments/*/database
         .catch
            log.error:Something went wrong when creating database
               database:x:@.arguments/@.arguments/*/database
               script:x:@.create-database-script
               error:x:@.arguments/*/message
   if
      not
         io.folder.exists:x:@.migration-script-folder
      .lambda
         return:bool:true
   io.file.list:x:@.migration-script-folder
   for-each:x:@io.file.list/*
      if
         strings.ends-with:x:@.dp/#
            .:.sql
         .lambda
            io.file.load:x:@.dp/#
            try
               data.connect:x:@.arguments/*/database
                  if
                     eq
                        get-value:x:@.database-type
                        .:mssql
                     .lambda
                        set-name:x:@data.connect/*/data.execute
                           .:mssql.execute-batch
                  data.execute:x:@io.file.load
                  log.info:Database migration script successfully executed
                     script:x:@.dp/#
            .catch
               log.error:Something went wrong as we tried to execute plugin database migration script
                  script:x:@.dp/#
                  error:x:@.arguments/*/message
               set-value:x:@.result
                  .:bool:false
   return
