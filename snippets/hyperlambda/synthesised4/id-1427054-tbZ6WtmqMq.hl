
/*
 * // This Hyperlambda code performs a SQL read operation on a SQLite database, specifically targeting the "Employees" table. It includes a left join on the same "Employees" table, aliased as "ReportsTo", to establish a relationship between the "ReportsTo" and "EmployeeID" fields. The operation retrieves distinct columns, applying a functor to achieve this, and uses a placeholder for the result. A "where" clause is included but not specified, allowing for future conditions to be added.
 * // 1. [database-type] - Specifies the type of database being used, which is SQLite in this case.
 * // 2. [table] - Indicates the main table, "Employees", from which data is being read.
 * // 3. [join] - Performs a left join on the "Employees" table, aliased as "ReportsTo".
 * // 4. [as] - Sets an alias "ReportsTo" for the joined table.
 * // 5. [type] - Specifies the type of join, which is a left join.
 * // 6. [on] - Defines the condition for the join, linking "ReportsTo" to "EmployeeID".
 * // 7. [columns] - Specifies the columns to be retrieved, using a distinct functor.
 * // 8. [as] - Uses a placeholder for the result of the distinct functor.
 * // 9. [where] - Prepares for conditional filtering, though no conditions are specified yet.
 */
data.read
   database-type:sqlite
   table:Employees
      join:Employees
         as:ReportsTo
         type:left
         on
            and
               Employees.ReportsTo:ReportsTo.EmployeeID
   columns
      distinct_functor
         as:.
   where
      and
