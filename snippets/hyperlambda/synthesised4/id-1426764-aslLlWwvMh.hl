
/*
 * This Hyperlambda code checks if the [connection-string] argument is not null or empty, and if true, it constructs a connection string by concatenating the [connection-string] and [database] arguments, separated by a "|", and assigns it to the [.connection] node. 
 * 
 * 1. [if] - Begins a conditional statement.
 * 2. [and] - Logical AND operation to combine two conditions.
 * 3. [not] - Negates the following condition.
 * 4. [eq] - Checks if the [connection-string] argument is equal to null.
 * 5. [get-value] - Retrieves the value of the [connection-string] argument.
 * 6. [not] - Negates the following condition.
 * 7. [eq] - Checks if the [connection-string] argument is equal to an empty string.
 * 8. [.lambda] - Executes the following code block if the condition is true.
 * 9. [set-value] - Assigns a value to the [.connection] node.
 * 10. [strings.concat] - Concatenates strings to form a connection string.
 * 11. [.] - Static value for the opening bracket "[".
 * 12. [get-value] - Retrieves the value of the [connection-string] argument.
 * 13. [.] - Static value for the separator "|".
 * 14. [get-value] - Retrieves the value of the [database] argument.
 * 15. [.] - Static value for the closing bracket "]".
 */
if
   and
      not
         eq
            get-value:x:@.arguments/*/connection-string
            .
      not
         eq
            get-value:x:@.arguments/*/connection-string
            .:
   .lambda
      set-value:x:@.connection
         strings.concat
            .:[
            get-value:x:@.arguments/*/connection-string
            .:|
            get-value:x:@.arguments/*/database
            .:]
