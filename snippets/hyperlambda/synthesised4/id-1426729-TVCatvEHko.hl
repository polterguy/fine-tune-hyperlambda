
/*
 * This Hyperlambda code defines a dynamic slot named [magic.ai.html.extract] that processes HTML content to extract structured data and convert it to Markdown. It requires mandatory arguments [html] and [url], validates the URL, and sets default values for [images], [lists], and [code]. The slot converts HTML to Markdown, extracts metadata like [title] and [description], and gathers URLs. It creates prompts and snippets based on headings and lists in the HTML, and returns the extracted data, snippets, and metadata.
 * 
 * 1. [slots.create] - Creates a new dynamic slot named [magic.ai.html.extract].
 * 2. [validators.mandatory] - Ensures the [html] and [url] arguments are provided.
 * 3. [validators.url] - Validates the [url] argument.
 * 4. [validators.default] - Sets default values for [images], [lists], and [code].
 * 5. [.meta] - Initializes metadata with a [main] node.
 * 6. [.snippets] - Initializes an empty node for storing snippets.
 * 7. [.title] - Initializes an empty node for storing the title.
 * 8. [.description] - Initializes an empty node for storing the description.
 * 9. [.markdown] - Initializes an empty node for storing Markdown content.
 * 10. [.urls] - Initializes an empty node for storing URLs.
 * 11. [html2markdown] - Converts HTML to Markdown using the provided arguments.
 * 12. [if] - Checks if the conversion result is null or empty.
 * 13. [or] - Logical OR condition for checking null or empty result.
 * 14. [null] - Checks if the conversion result is null.
 * 15. [eq] - Checks if the conversion result is empty.
 * 16. [.lambda] - Returns early if the conversion result is null or empty.
 * 17. [return] - Returns the [urls], [snippets], and [meta] nodes.
 * 18. [set-value] - Sets the value of [title] and [description] nodes.
 * 19. [get-value] - Retrieves values from the [html2markdown] result.
 * 20. [add] - Adds nodes to [urls] and [snippets].
 * 21. [.prompt] - Initializes an empty node for storing the prompt.
 * 22. [set-value] - Sets the value of the [prompt] node.
 * 23. [get-first-value] - Retrieves the first available value from [title] or [description].
 * 24. [.remaining] - Initializes an empty node for storing remaining content.
 * 25. [.tmp-prompt] - Initializes an empty node for storing a temporary prompt.
 * 26. [markdown2html] - Converts Markdown back to HTML.
 * 27. [html2lambda] - Converts HTML to a lambda object.
 * 28. [for-each] - Iterates over the lambda object nodes.
 * 29. [get-name] - Retrieves the name of the current node.
 * 30. [switch] - Switches based on the node name.
 * 31. [case] - Handles specific cases for headings and lists.
 * 32. [strings.concat] - Concatenates strings to build a prompt.
 * 33. [lambda2html] - Converts a lambda object back to HTML.
 * 34. [unwrap] - Evaluates and unwraps expressions.
 * 35. [default] - Handles default cases for remaining nodes.
 * 36. [add] - Adds nodes to [snippets] and [remaining].
 * 37. [set-value] - Sets the value of the [markdown] node.
 * 38. [.completion] - Initializes an empty node for storing completion content.
 * 39. [get-value] - Retrieves the value of the [markdown] node.
 * 40. [add] - Adds nodes to the return [snippets], [meta], and [urls].
 * 41. [return] - Returns the [urls], [snippets], and [meta] nodes.
 */
slots.create:magic.ai.html.extract
   validators.mandatory:x:@.arguments/*/html
   validators.mandatory:x:@.arguments/*/url
   validators.url:x:@.arguments/*/url
   validators.default:x:@.arguments
      images:bool:true
      lists:bool:true
      code:bool:true
   .meta
      main:int:0
   .snippets
   .title
   .description
   .markdown
   .urls
   html2markdown:x:@.arguments/*/html
      url:x:@.arguments/*/url
      images:x:@.arguments/*/images
      lists:x:@.arguments/*/lists
      code:x:@.arguments/*/code
   if
      or
         null:x:@html2markdown
         eq:x:@html2markdown
            .:
      .lambda
         return
            urls
            snippets
            meta
               main:int:0
   set-value:x:@.title
      get-value:x:@html2markdown/*/title/[0,1]
   set-value:x:@.description
      get-value:x:@html2markdown/*/description/[0,1]
   add:x:@.urls
      get-nodes:x:@html2markdown/*/urls/*
   set-value:x:@.markdown
      get-value:x:@html2markdown
   .prompt
   set-value:x:@.prompt
      get-first-value
         get-value:x:@.title
         get-value:x:@.description
         .:Page
   .remaining
   .tmp-prompt
   set-value:x:@.tmp-prompt
      get-value:x:@.prompt
   markdown2html:x:@html2markdown
   html2lambda:x:@markdown2html
   for-each:x:@html2lambda/*
      get-name:x:@.dp/#
      switch:x:@get-name
         case:h1
         case:h2
         case:h3
         case:h4
         case:h5
         case:h6
            set-value:x:@.tmp-prompt
               strings.concat
                  get-value:x:@.prompt
                  .:" | "
                  get-value:x:"@.dp/#/*/\\#text"
         case:ul
         case:ol
         case:pre
            lambda2html:x:@.dp/#
            html2markdown:x:@lambda2html
               url:x:@.arguments/*/url
            unwrap:x:+/*/*/*
            add:x:@.snippets
               .
                  .
                     prompt:x:@.tmp-prompt
                     completion:x:@html2markdown
         default
            add:x:@.remaining
               get-nodes:x:@.dp/#
   lambda2html:x:@.remaining/*
   set-value:x:@.markdown
      html2markdown:x:@lambda2html
         url:x:@.arguments/*/url
   .completion
   set-value:x:@.completion
      get-value:x:@.markdown
   unwrap:x:+/*/*/*
   add:x:@.snippets
      .
         .
            prompt:x:@.prompt
            completion:x:@.completion
   add:x:./*/return/*/snippets
      get-nodes:x:@.snippets/*
   add:x:./*/return/*/meta
      get-nodes:x:@.meta/*
   add:x:./*/return/*/urls
      get-nodes:x:@.urls/*
   return
      urls
      snippets
      meta
