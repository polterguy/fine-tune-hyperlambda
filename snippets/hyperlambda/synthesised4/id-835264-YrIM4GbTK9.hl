
/*
 * The code checks if the number of nodes under [.urls] is less than 10,000, and if true, it adds a signal node with headers from [.arguments]. It then unwraps and executes a signal to load a sitemap, adding its URLs to [.urls]. If the signal indicates no sitemap and [.urls] is empty, it sets [.has-sitemap] to false. 
 * 
 * 1. [if] - Checks if the number of nodes under [.urls] is less than 10,000.
 * 2. [lt] - Compares the count of [.urls] nodes to 10,000.
 * 3. [get-count] - Retrieves the number of nodes under [.urls].
 * 4. [.lambda] - Executes its children if the [if] condition is true.
 * 5. [add] - Adds a signal node with headers from [.arguments].
 * 6. [get-nodes] - Retrieves nodes from [.arguments] headers.
 * 7. [unwrap] - Unwraps and executes the signal node.
 * 8. [signal] - Loads a sitemap with specified parameters.
 * 9. [add] - Adds URLs from the signal to [.urls].
 * 10. [if] - Checks if the sitemap is absent and [.urls] is empty.
 * 11. [and] - Combines two conditions to check.
 * 12. [eq] - Compares if the signal has no sitemap and [.urls] is empty.
 * 13. [set-value] - Sets [.has-sitemap] to false if conditions are met.
 */
if
   lt
      get-count:x:@.urls/*
      .:int:10000
   .lambda
      add:x:./*/signal
         get-nodes:x:@.arguments/*/headers
      unwrap:x:+/**
      signal:magic.ai.load-sitemap
         max:int:10000
         feedback-channel:x:@.arguments/*/feedback-channel
         filter-on-url:x:@.arguments/*/filter-on-url
         sitemap
            .:x:@.dp/#
      add:x:@.urls
         get-nodes:x:@signal/*/urls/*
      if
         and
            eq:x:@signal/*/has-sitemap
               .:bool:false
            eq
               get-count:x:@.urls/*
               .:int:0
         .lambda
            set-value:x:@.has-sitemap
               .:bool:false
