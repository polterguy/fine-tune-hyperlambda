
/*
 * 1. `@.lambda` - Finds the first ancestor or self node named [.lambda] relative to the current node.
 * 2. `@.lambda` - From the previous result, finds the first ancestor or self node named [.lambda] again (this will go up another level in the hierarchy to the next [.lambda] node).
 * 3. `*` - Retrieves all child nodes of the current [.lambda] node.
 * 4. `http.post` - Filters the children to only those named [http.post].
 * 5. `*` - Retrieves all child nodes of the [http.post] node.
 * 6. `payload` - Filters the children to only those named [payload].
 * 7. `*` - Retrieves all child nodes of the [payload] node.
 * 8. `temperature` - Filters the children to only those named [temperature].
 * 
 * This expression navigates up the hierarchy to the second ancestor [.lambda] node, then drills down through its children to find a [http.post] node, then its [payload] child, and finally retrieves all [temperature] nodes within [payload].
 */

.:x:@.lambda/@.lambda/*/http.post/*/payload/*/temperature