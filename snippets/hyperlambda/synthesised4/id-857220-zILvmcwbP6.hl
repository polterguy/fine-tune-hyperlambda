
/*
 * This Hyperlambda code defines a dynamic slot that processes SQL-like operations with various parameters for filtering, grouping, and aggregating data. It validates mandatory arguments and ensures they are within allowed values, sets HTTP response headers, verifies authentication, and connects to a SQLite database to execute a query. The query involves joining tables, applying aggregate functions, and grouping results based on specified columns. The final data is returned after executing the read operation.
 * 
 * 1. [.arguments] - Declares the expected arguments for the slot.
 * 2. [validators.mandatory] - Ensures required arguments are provided.
 * 3. [validators.enum] - Validates that certain arguments are within specified enum values.
 * 4. [response.headers.set] - Sets HTTP response headers for caching.
 * 5. [auth.ticket.verify] - Verifies user authentication.
 * 6. [data.connect] - Connects to a SQLite database and prepares the query.
 * 7. [set-name] - Modifies node names for grouping and aggregation.
 * 8. [insert-before] - Inserts nodes before a specified position.
 * 9. [set-value] - Sets values for nodes.
 * 10. [remove-nodes] - Removes specified nodes.
 * 11. [add] - Adds nodes to the structure.
 * 12. [strings.concat] - Concatenates strings for function names.
 * 13. [data.read] - Executes the database read operation with joins, columns, and conditions.
 * 14. [return-nodes] - Returns the result of the data read operation.
 */
hyper2lambda
   .arguments
      group_column:string
      limit:long
      offset:long
      order:string
      direction:string
      aggregate_function:string
      aggregate_column:string
      leads.lead_id.mt:long
      leads.lead_id.lt:long
      leads.lead_id.mteq:long
      leads.lead_id.lteq:long
      leads.lead_id.neq:long
      leads.lead_id.eq:long
      leads.client_id.mt:long
      leads.client_id.lt:long
      leads.client_id.mteq:long
      leads.client_id.lteq:long
      leads.client_id.neq:long
      leads.client_id.eq:long
      leads.source.like:string
      leads.source.mt:string
      leads.source.lt:string
      leads.source.mteq:string
      leads.source.lteq:string
      leads.source.neq:string
      leads.source.eq:string
      leads.status.like:string
      leads.status.mt:string
      leads.status.lt:string
      leads.status.mteq:string
      leads.status.lteq:string
      leads.status.neq:string
      leads.status.eq:string
      leads.created_date.mt:date
      leads.created_date.lt:date
      leads.created_date.mteq:date
      leads.created_date.lteq:date
      leads.created_date.neq:date
      leads.created_date.eq:date
      client_id.name.eq:string
      client_id.name.like:string
   validators.mandatory:x:@.arguments/*/group_column
   validators.mandatory:x:@.arguments/*/aggregate_function
   validators.mandatory:x:@.arguments/*/aggregate_column
   validators.enum:x:@.arguments/*/aggregate_function
      .:min
      .:max
      .:sum
      .:avg
      .:count
   validators.enum:x:@.arguments/*/group_column
      .:leads.lead_id
      .:leads.client_id
      .:leads.source
      .:leads.status
      .:leads.created_date
      .:client_id.name
   validators.enum:x:@.arguments/*/aggregate_column
      .:leads.lead_id
      .:leads.client_id
      .:leads.source
      .:leads.status
      .:leads.created_date
      .:client_id.name
   response.headers.set
      Cache-Control:public, max-age=300
   auth.ticket.verify:guest
   data.connect:[generic|crm]
      database-type:sqlite
      set-name:x:@data.connect/*/data.read/*/group/*/group_column
         get-value:x:@.arguments/*/group_column
      set-name:x:+/*/*
         get-value:x:@.arguments/*/group_column
      insert-before:x:@data.connect/*/data.read/*/columns/0
         .
            group_column
      set-value:x:@data.connect/*/data.read/*/columns/1/*/as
         get-value:x:@.arguments/*/aggregate_function
      remove-nodes:x:@.arguments/*/group_column
      add:x:@data.connect/*/data.read
         get-nodes:x:@.arguments/*/limit
         get-nodes:x:@.arguments/*/offset
      remove-nodes:x:@.arguments/*/limit
      remove-nodes:x:@.arguments/*/offset
      add:x:./*/data.read
         get-nodes:x:@.arguments/*/order
         get-nodes:x:@.arguments/*/direction
      remove-nodes:x:@.arguments/*/order
      remove-nodes:x:@.arguments/*/direction
      set-name:x:./*/data.read/*/columns/*/aggregate_functor
         strings.concat
            get-value:x:@.arguments/*/aggregate_function
            .:(
            get-value:x:@.arguments/*/aggregate_column
            .:)
      remove-nodes:x:@.arguments/*/[0,2]
      add:x:./*/data.read/*/where/*
         get-nodes:x:@.arguments/*
      data.read
         database-type:sqlite
         table:leads
            join:clients
               as:client_id
               type:left
               on
                  and
                     leads.client_id:client_id.client_id
         columns
            aggregate_functor
               as:result
         where
            and
         group
            group_column
      return-nodes:x:@data.read/*
