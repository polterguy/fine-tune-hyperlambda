
// This Hyperlambda code connects to a SQLite database and performs a SQL query on the "comments" table. It includes left joins with the "posts" and "users" tables, using "post_id" and "user_id" as aliases, respectively. The query selects specific columns from these tables, with some columns being aliased for clarity. The [where] clause is prepared for additional conditions to filter the results. The [database-type] slot specifies the database type, while [table] and [join] slots define the tables and join conditions. The [columns] slot lists the columns to be retrieved, and the [as] slot is used for aliasing.
data.read
   database-type:sqlite
   table:comments
      join:posts
         as:post_id
         type:left
         on
            and
               comments.post_id:post_id.id
      join:users
         as:user_id
         type:left
         on
            and
               comments.user_id:user_id.id
   columns
      comments.id
      comments.post_id
      comments.user_id
      comments.content
      comments.created_at
      post_id.title
         as:post_id.title
      user_id.username
         as:user_id.username
   where
      and
