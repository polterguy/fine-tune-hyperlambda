
// The code snippet uses [strings.concat] to build a dynamic SQL string by concatenating several parts. It retrieves values from nodes [sql], [fields], and [no], and incorporates them into the SQL expression that calculates the occurrence of a pattern in a field. The expression involves calculating the difference in length before and after replacing the pattern with an empty string, divided by the pattern's length.
strings.concat:x:@.sql
   get-value:x:@.sql
   .:" (length("
   get-value:x:@.fields
   .:) - length(replace(lower(
   get-value:x:@.fields
   .:), @p
   get-value:x:@.no
   .:", ''))) / length(@p"
   get-value:x:@.no
   .:)
