
// This Hyperlambda code connects to a SQLite database and updates records in the "Regions" table based on provided arguments. It checks if any records were updated; if none, it sets the response status to 404 with a "Record not found" message. If records are updated, it sets the response status to 202, signals a socket event, and returns the number of affected records. The code also manages socket signal arguments and verifies authentication roles.
data.connect:[generic|northwind]
   database-type:sqlite
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]
   data.update
      database-type:sqlite
      table:Regions
      values
      where
         and
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found
   response.status.set:202
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   add:x:./*/sockets.signal
      get-nodes:x:@auth.ticket.verify
   set-name:x:./*/sockets.signal/*/auth.ticket.verify
      .:roles
   sockets.signal:northwind.Regions.put
      args
   unwrap:x:+/*
   return
      affected:x:@data.update
