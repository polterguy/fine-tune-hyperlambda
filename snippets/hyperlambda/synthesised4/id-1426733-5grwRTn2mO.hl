
/*
 * // This Hyperlambda code snippet demonstrates how to read specific columns from a database table named "ml_types" with a conditional filter applied. The [data.read] slot is used to specify the table and columns to retrieve, and a [where] clause is used to filter results based on a condition. The [where] clause uses an [and] logical operator to ensure that only rows where the "type" column equals a specified argument value are returned. This is useful for querying specific data from a table based on dynamic conditions.
 * // 1. [data.read] - Initiates a read operation from the specified database table.
 * // 2. [table] - Specifies the database table "ml_types" to read data from.
 * // 3. [columns] - Lists the columns to be retrieved from the table: "max_context_tokens", "api_key", and "model".
 * // 4. [where] - Starts a conditional filter to apply to the data retrieval.
 * // 5. [and] - Logical operator to combine multiple conditions; here it ensures all conditions must be true.
 * // 6. [type.eq] - Compares the "type" column in the table to the value provided in the "type" argument, filtering the results accordingly.
 */
data.read
   table:ml_types
   columns
      max_context_tokens
      api_key
      model
   where
      and
         type.eq:x:@.arguments/*/type
