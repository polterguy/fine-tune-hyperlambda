
/*
 * /*
 *  * This Hyperlambda code snippet evaluates the value of a [user-agent] node using a [switch] statement to determine its relevance. It checks if the user-agent is "AINIRO" or "GPTBot" and sets the [relevant] node's value accordingly. If the user-agent is "AINIRO", it removes nodes under [allow] and [disallow], sets [has-seen-ainiro] to true, and marks it as relevant. If the user-agent is not "AINIRO", it checks if [has-seen-ainiro] is false to mark it as relevant. Otherwise, it sets [relevant] to false.
 *  * 1. [case:user-agent] - Initiates a switch statement to evaluate the [user-agent] value.
 *  * 2. [switch] - Switches based on the value of the [user-agent].
 *  * 3. [case:*] - Matches any user-agent.
 *  * 4. [case:AINIRO] - Matches the "AINIRO" user-agent.
 *  * 5. [case:GPTBot] - Matches the "GPTBot" user-agent.
 *  * 6. [if] - Checks if the user-agent is "AINIRO".
 *  * 7. [eq] - Compares the user-agent value to "AINIRO".
 *  * 8. [.lambda] - Executes if the user-agent is "AINIRO".
 *  * 9. [remove-nodes] - Removes nodes under [allow] and [disallow].
 *  * 10. [set-value:has-seen-ainiro] - Sets [has-seen-ainiro] to true.
 *  * 11. [set-value:relevant] - Sets [relevant] to true.
 *  * 12. [else] - Executes if the user-agent is not "AINIRO".
 *  * 13. [if] - Checks if [has-seen-ainiro] is false.
 *  * 14. [eq] - Compares [has-seen-ainiro] to false.
 *  * 15. [.lambda] - Executes if [has-seen-ainiro] is false.
 *  * 16. [set-value:relevant] - Sets [relevant] to true.
 *  * 17. [else] - Executes if [has-seen-ainiro] is true.
 *  * 18. [set-value:relevant] - Sets [relevant] to false.
 *  * 19. [default] - Default case for the switch statement.
 *  * 20. [set-value:relevant] - Sets [relevant] to false for the default case.
 *  */
 */
case:user-agent
   switch:x:@.value
      case:*
      case:AINIRO
      case:GPTBot
         if
            eq:x:@.value
               .:AINIRO
            .lambda
               remove-nodes:x:@.allow/*
               remove-nodes:x:@.disallow/*
               set-value:x:@.has-seen-ainiro
                  .:bool:true
               set-value:x:@.relevant
                  .:bool:true
         else
            if
               eq:x:@.has-seen-ainiro
                  .:bool:false
               .lambda
                  set-value:x:@.relevant
                     .:bool:true
            else
               set-value:x:@.relevant
                  .:bool:false
      default
         set-value:x:@.relevant
            .:bool:false
