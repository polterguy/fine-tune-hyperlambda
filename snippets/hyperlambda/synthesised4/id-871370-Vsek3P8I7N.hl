
// This Hyperlambda code connects to a SQLite database and performs a SQL query on the "Orders" table, joining it with "Employees" and "Shippers" tables using left joins. It dynamically constructs a "count(distinct ...)" SQL function based on a provided "distinct_column" argument, removes the "distinct_column" node, and adds any additional conditions from the arguments to the "where" clause. The result of the query is returned using [return-nodes]. The code is designed to count distinct values in a specified column and allows for additional filtering conditions.
data.connect:[generic|northwind]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/distinct_functor
      strings.concat
         .:"count(distinct "
         get-value:x:@.arguments/*/distinct_column
         .:)
   remove-nodes:x:@.arguments/*/distinct_column
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Orders
         join:Employees
            as:EmployeeID
            type:left
            on
               and
                  Orders.EmployeeID:EmployeeID.EmployeeID
         join:Shippers
            as:ShipVia
            type:left
            on
               and
                  Orders.ShipVia:ShipVia.ShipperID
      columns
         distinct_functor
            as:count
      where
         and
   return-nodes:x:@data.read/*/*
