
// This Hyperlambda code checks if a specific text node exists and appends its trimmed content to a completion node if it exists, or creates a new completion node with the text if it doesn't. It uses [if] and [exists] to verify node presence, [strings.concat] to concatenate strings, and [strings.trim] to remove whitespace. The code also utilizes [unwrap] and [add] to handle node manipulation and insertion.
case:pre
   if
      exists:x:"@.dp/#/**/\\#text"
      .lambda
         if
            exists:x:@.snippets/0/-/*/completion
            .lambda
               set-value:x:@.snippets/0/-/*/completion
                  strings.concat
                     get-value:x:@.snippets/0/-/*/completion
                     .:@"

```
"
                     strings.trim:x:"@.dp/#/**/\\#text/[0,1]"
                        .:@"  
	"
                     .:@"
```"
         else
            strings.concat
               .:@"```
"
               strings.trim:x:"@.dp/#/**/\\#text/[0,1]"
                  .:@"  
	"
               .:@"
```"
            unwrap:x:+/*/*
            add:x:@.snippets/0/-
               .
                  completion:x:@strings.concat
