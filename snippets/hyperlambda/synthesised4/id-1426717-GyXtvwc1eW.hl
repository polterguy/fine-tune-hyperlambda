
/*
 * This code checks if the number of nodes resulting from a [strings.split] operation is more than or equal to 20. If true, it removes nodes from the 16th to the 35th position and then joins the remaining nodes into a single string, separated by commas, assigning the result to [.value]. 
 * 
 * 1. [if] - Initiates a conditional statement.
 * 2. [mte] - Compares if the count of nodes is more than or equal to 20.
 * 3. [get-count] - Retrieves the number of nodes from the [strings.split] operation.
 * 4. [.lambda] - Executes the following block if the condition is true.
 * 5. [remove-nodes] - Removes nodes from the 16th to the 35th position.
 * 6. [set-value] - Assigns a new value to [.value].
 * 7. [strings.join] - Joins the remaining nodes into a single string with commas.
 */
if
   mte
      get-count:x:@strings.split/*
      .:int:20
   .lambda
      remove-nodes:x:@strings.split/*/[15,20]
      set-value:x:@.value
         strings.join:x:@strings.split/*
            .:,
