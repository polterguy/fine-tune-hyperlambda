
/*
 * This Hyperlambda code snippet demonstrates how to perform a SQL query with a left join using the [data.read] slot. It connects to an SQLite database and selects columns from the "documents" table, joining it with the "clients" table. The join is aliased as "client_id" and uses a left join type. The query retrieves specific columns from both tables and renames the "name" column from the "clients" table using an alias. The [where] clause is prepared for additional filtering conditions. 
 * 
 * 1. [data.read] - Initiates a read operation from a database.
 * 2. [database-type] - Specifies the type of database being used, in this case, SQLite.
 * 3. [table] - Specifies the main table to read from, here "documents".
 * 4. [join] - Defines a join operation with another table, "clients".
 * 5. [as] - Aliases the joined table as "client_id".
 * 6. [type] - Specifies the type of join, here "left".
 * 7. [on] - Defines the condition for the join operation.
 * 8. [columns] - Lists the columns to be selected from the tables.
 * 9. [as] - Aliases the "name" column from the "clients" table.
 * 10. [where] - Prepares for additional filtering conditions in the query.
 */
data.read
   database-type:sqlite
   table:documents
      join:clients
         as:client_id
         type:left
         on
            and
               documents.client_id:client_id.client_id
   columns
      documents.document_id
      documents.client_id
      documents.title
      documents.file_path
      documents.uploaded_date
      client_id.name
         as:client_id.name
   where
      and
