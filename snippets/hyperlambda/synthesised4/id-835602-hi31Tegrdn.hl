
/*
 * This Hyperlambda code constructs a SQL CASE statement dynamically by concatenating strings and values. It uses [strings.concat] to build a SQL expression that checks if a specific pattern exists within a field. The [set-value] slot assigns the resulting SQL expression to the [.sql] node. The code calculates the occurrence of a pattern in a field by comparing the length of the field before and after replacing the pattern with an empty string. If the pattern exists, the CASE statement returns 1; otherwise, it returns 0.
 * 
 * 1. [set-value] - Assigns a new value to the [.sql] node.
 * 2. [strings.concat] - Concatenates multiple strings and values to form a SQL expression.
 * 3. [get-value:x:@.sql] - Retrieves the current value of the [.sql] node.
 * 4. [.] - Static string parts of the SQL expression.
 * 5. [get-value:x:@.fields] - Retrieves the field name for the SQL expression.
 * 6. [get-value:x:@.no] - Retrieves a pattern or number used in the SQL expression.
 */
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" CASE WHEN ((length("
      get-value:x:@.fields
      .:) - length(replace(lower(
      get-value:x:@.fields
      .:), @p
      get-value:x:@.no
      .:", ''))) / length(@p"
      get-value:x:@.no
      .:)) > 0 THEN 1 ELSE 0 END
