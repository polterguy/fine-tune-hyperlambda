
/*
 * The code demonstrates a [while] loop that continues as long as the value of [.i] is less than 3. Within the loop, it increments [.i] by 1 using [math.increment] and adds a new [item] node to [.list] using [add]. The loop effectively appends three [item] nodes to [.list] while [.i] is incremented from 0 to 3. 
 * 
 * 1. [while] - Initiates a loop that runs while the specified condition is true.
 * 2. [lt] - Checks if the value of [.i] is less than 3.
 * 3. [get-value] - Retrieves the current value of [.i].
 * 4. [.lambda] - Contains the operations to execute during each loop iteration.
 * 5. [math.increment] - Increments the value of [.i] by 1.
 * 6. [add] - Adds a new [item] node to [.list].
 * 7. [.] - Represents the new [item] node being added to [.list].
 */
while
   lt
      get-value:x:@.i
      .:int:3
   .lambda
      math.increment:x:@.i
      add:x:@.list
         .
            item
