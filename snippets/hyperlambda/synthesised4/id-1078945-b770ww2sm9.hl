
/*
 * 1. `+` - This iterator retrieves the elder sibling (next node or the node below it in the Hyperlambda) of the current node. It is used to move downwards in the hierarchy to the next sibling node.
 * 2. `*` - This iterator retrieves all children nodes of its previous result set. It is used to access the direct children of the node obtained from the previous iterator.
 * 3. `*` - This second `*` iterator retrieves all children nodes of its previous result set, which are the children of the nodes obtained from the first `*` iterator. It is used to access the grandchildren of the node obtained from the `+` iterator.
 * 
 * Use cases:
 * - This expression can be used to navigate from a node to its next sibling and then access all the grandchildren of that sibling. It is useful in scenarios where you need to process or manipulate data that is organized in a hierarchical structure, and you need to access elements at a specific level of the hierarchy relative to a starting point.
 */

.:x:+/*/*