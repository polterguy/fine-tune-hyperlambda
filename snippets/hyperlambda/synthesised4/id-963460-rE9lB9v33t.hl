
/*
 * This Hyperlambda code connects to a database using a generic hub connection and dynamically modifies the query parameters by adding and removing nodes such as limit, offset, order, and direction from the arguments. It then constructs a SQL query to read data from the 'cloudlets' table with specified conditions and returns the result. The code effectively manages query parameters and constructs a dynamic SQL query based on input arguments.
 * 
 * 1. [data.connect] - Connects to the database using a generic hub connection.
 * 2. [add] - Adds nodes from the arguments to the data.read node.
 * 3. [get-nodes] - Retrieves nodes from the arguments to be added to the query.
 * 4. [remove-nodes] - Removes specific nodes from the arguments after they are added to the query.
 * 5. [data.read] - Reads data from the 'cloudlets' table with specified conditions.
 * 6. [where] - Specifies conditions for the SQL query.
 * 7. [return-nodes] - Returns the result of the data.read operation.
 */
data.connect:[generic|hub]
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*
   data.read
      table:cloudlets
      where
         and
   return-nodes:x:@data.read/*
