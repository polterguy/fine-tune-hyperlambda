
/*
 * This Hyperlambda code defines a dynamic slot [magic.ai.html.extract] that processes HTML content. It validates input arguments, converts HTML to Markdown, and extracts metadata like title, description, and URLs. The slot also generates prompts and completions for AI models, creating structured snippets from HTML elements. It returns a structured response containing URLs, snippets, and metadata.
 * 
 * 1. [slots.create] - Defines a new dynamic slot named [magic.ai.html.extract].
 * 2. [validators.mandatory] - Ensures required arguments [html] and [url] are provided.
 * 3. [validators.url] - Validates that [url] is a valid URL.
 * 4. [validators.default] - Sets default values for optional arguments [images], [lists], and [code].
 * 5. [.meta], [.snippets], [.title], [.description], [.markdown], [.urls] - Initializes metadata and content nodes.
 * 6. [html2markdown] - Converts HTML to Markdown using specified arguments.
 * 7. [if] - Checks if [html2markdown] result is null or empty, returning early if true.
 * 8. [set-value] - Assigns values to [title] and [description] from [html2markdown].
 * 9. [add] - Appends URLs from [html2markdown] to [.urls].
 * 10. [.prompt], [.remaining], [.tmp-prompt] - Initializes and manipulates prompt-related nodes.
 * 11. [markdown2html] - Converts Markdown back to HTML.
 * 12. [html2lambda] - Converts HTML to a lambda object.
 * 13. [for-each] - Iterates over HTML elements, generating prompts and snippets.
 * 14. [switch] - Handles different HTML tags, appending to prompts or snippets.
 * 15. [lambda2html] - Converts remaining lambda elements back to HTML.
 * 16. [.completion] - Sets the final Markdown completion.
 * 17. [unwrap] - Processes nested nodes for final output.
 * 18. [add] - Aggregates snippets, metadata, and URLs for the return value.
 * 19. [return] - Returns the structured response with URLs, snippets, and metadata.
 */
hyper2lambda
   slots.create:magic.ai.html.extract
      validators.mandatory:x:@.arguments/*/html
      validators.mandatory:x:@.arguments/*/url
      validators.url:x:@.arguments/*/url
      validators.default:x:@.arguments
         images:bool:true
         lists:bool:true
         code:bool:true
      .meta
         main:int:0
      .snippets
      .title
      .description
      .markdown
      .urls
      html2markdown:x:@.arguments/*/html
         url:x:@.arguments/*/url
         images:x:@.arguments/*/images
         lists:x:@.arguments/*/lists
         code:x:@.arguments/*/code
      if
         or
            null:x:@html2markdown
            eq:x:@html2markdown
               .:
         .lambda
            return
               urls
               snippets
               meta
                  main:int:0
      set-value:x:@.title
         get-value:x:@html2markdown/*/title/[0,1]
      set-value:x:@.description
         get-value:x:@html2markdown/*/description/[0,1]
      add:x:@.urls
         get-nodes:x:@html2markdown/*/urls/*
      set-value:x:@.markdown
         get-value:x:@html2markdown
      .prompt
      set-value:x:@.prompt
         get-first-value
            get-value:x:@.title
            get-value:x:@.description
            .:Page
      .remaining
      .tmp-prompt
      set-value:x:@.tmp-prompt
         get-value:x:@.prompt
      markdown2html:x:@html2markdown
      html2lambda:x:@markdown2html
      for-each:x:@html2lambda/*
         get-name:x:@.dp/#
         switch:x:@get-name
            case:h1
            case:h2
            case:h3
            case:h4
            case:h5
            case:h6
               set-value:x:@.tmp-prompt
                  strings.concat
                     get-value:x:@.prompt
                     .:" | "
                     get-value:x:"@.dp/#/*/\\#text"
            case:ul
            case:ol
            case:pre
               lambda2html:x:@.dp/#
               html2markdown:x:@lambda2html
                  url:x:@.arguments/*/url
               unwrap:x:+/*/*/*
               add:x:@.snippets
                  .
                     .
                        prompt:x:@.tmp-prompt
                        completion:x:@html2markdown
            default
               add:x:@.remaining
                  get-nodes:x:@.dp/#
      lambda2html:x:@.remaining/*
      set-value:x:@.markdown
         html2markdown:x:@lambda2html
            url:x:@.arguments/*/url
      .completion
      set-value:x:@.completion
         get-value:x:@.markdown
      unwrap:x:+/*/*/*
      add:x:@.snippets
         .
            .
               prompt:x:@.prompt
               completion:x:@.completion
      add:x:./*/return/*/snippets
         get-nodes:x:@.snippets/*
      add:x:./*/return/*/meta
         get-nodes:x:@.meta/*
      add:x:./*/return/*/urls
         get-nodes:x:@.urls/*
      return
         urls
         snippets
         meta
