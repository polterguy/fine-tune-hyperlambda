
/*
 * This Hyperlambda code snippet performs a database read operation on the "users_extra" table, filtering records based on specific conditions. It checks if the "user" field equals the email obtained from the "auth.token.verify" process and includes records where the "type" field is either "name" or "email". The [data.read] slot initiates the read operation, [table] specifies the table name, and [where] defines the filtering conditions using logical operators [and] and [or]. The [eq] slots perform equality checks for the specified fields.
 * 
 * 1. [data.read] - Initiates a read operation from a database.
 * 2. [table] - Specifies the table "users_extra" to read from.
 * 3. [where] - Defines the filtering conditions for the read operation.
 * 4. [and] - Combines multiple conditions that must all be true.
 * 5. [user.eq] - Checks if the "user" field equals the email from "auth.token.verify".
 * 6. [or] - Allows for multiple alternative conditions.
 * 7. [type.eq] - Checks if the "type" field equals "name".
 * 8. [type.eq] - Checks if the "type" field equals "email".
 */
data.read
   table:users_extra
   where
      and
         user.eq:x:@auth.token.verify/*/email
         or
            type.eq:name
            type.eq:email
