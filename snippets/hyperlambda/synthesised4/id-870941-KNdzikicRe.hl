
// This Hyperlambda code defines a dynamic slot named [magic.workflows.actions.execute] that executes a file specified by [filename] and logs actions for users with the "root" role. It validates the presence of [name] and [filename] arguments, executes the file, and logs the execution time and result. If an error occurs, it logs the error message and rethrows it. The slot uses [validators.mandatory] to enforce argument presence, [auth.ticket.in-role] to check user roles, [sockets.signal] to log actions, and [execute-file] to run the specified file.
slots.create:magic.workflows.actions.execute
   validators.mandatory:x:@.arguments/*/name
   validators.mandatory:x:@.arguments/*/filename
   .time
   if
      auth.ticket.in-role:root
      .lambda
         add:x:./*/sockets.signal/*/args/*/input
            get-nodes:x:@.arguments/*/arguments/*
         unwrap:x:+/**
         sockets.signal:magic.workflows.action
            roles:root
            args
               type:action
               name:x:@.arguments/*/name
               input
         set-value:x:@.time
            date.now
   try
      add:x:./*/execute-file
         get-nodes:x:@.arguments/*/arguments/*
      execute-file:x:@.arguments/*/filename
      if
         auth.ticket.in-role:root
         .lambda
            add:x:./*/sockets.signal/*/args/*/output
               get-nodes:x:@execute-file/*
            math.subtract
               date.now
               get-value:x:@.time
            unwrap:x:+/**
            sockets.signal:magic.workflows.action
               roles:root
               args
                  type:result
                  time:x:@math.subtract
                  output
      set-value:x:./*/return
         get-value:x:@.arguments/*/name
      add:x:./*/return
         get-nodes:x:@execute-file/*
      return
   .catch
      if
         auth.ticket.in-role:root
         .lambda
            unwrap:x:+/**
            sockets.signal:magic.workflows.action
               roles:root
               args
                  type:error
                  message:x:@.arguments/*/message
      throw:x:@.arguments/*/message
         status:x:@.arguments/*/status
         public:x:@.arguments/*/public
