
/*
 * This Hyperlambda code snippet demonstrates how to create a new record in a database table named "ml_requests" using the [data.create] slot. The slot takes a [table] argument specifying the table name and a [values] argument containing the fields and their corresponding values to be inserted into the table. The values for each field are dynamically retrieved from the current context using lambda expressions. The fields being inserted include "type", "prompt", "completion", "finish_reason", "session", "user_id", and "referrer". This approach ensures that the data is safely parameterized to prevent SQL injection attacks. Below is a breakdown of each slot:
 * 
 * 1. [table] - Specifies the name of the table where the record will be inserted.
 * 2. [values] - Contains the fields and their corresponding values to be inserted into the table.
 * 3. [type] - Retrieves the value for the "type" field from the arguments.
 * 4. [prompt] - Retrieves the value for the "prompt" field from the current context.
 * 5. [completion] - Retrieves the value for the "completion" field from the current context.
 * 6. [finish_reason] - Retrieves the value for the "finish_reason" field from the current context.
 * 7. [session] - Retrieves the value for the "session" field from the arguments.
 * 8. [user_id] - Retrieves the value for the "user_id" field from the arguments.
 * 9. [referrer] - Retrieves the value for the "referrer" field from the arguments.
 */
data.create
   table:ml_requests
   values
      type:x:@.arguments/*/type
      prompt:x:@.prompt
      completion:x:@.tmp-completion
      finish_reason:x:@.finish_reason
      session:x:@.arguments/*/session
      user_id:x:@.arguments/*/user_id
      referrer:x:@.arguments/*/referrer
