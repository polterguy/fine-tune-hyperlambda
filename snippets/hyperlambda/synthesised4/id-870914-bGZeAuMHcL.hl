
/*
 * This Hyperlambda code connects to a database and performs an update operation on the "ml_types" table. It first prepares the update by adding values and conditions from the arguments, and checks if the "twilio_account_id" is missing or null, removing it if so. The update is executed, and if no records are affected, it sets a 404 status with a "Record not found" message. Otherwise, it sets a 202 status and returns the number of affected records. 
 * 
 * 1. [data.connect] - Connects to the specified database.
 * 2. [add] - Adds nodes to the update values and where conditions from the arguments.
 * 3. [if] - Checks conditions for the presence and value of "twilio_account_id".
 * 4. [remove-nodes] - Removes the "twilio_account_id" node if conditions are met.
 * 5. [unwrap] - Evaluates expressions in the specified node.
 * 6. [data.update] - Executes the update operation on the "ml_types" table.
 * 7. [response.status.set] - Sets the HTTP response status based on the update result.
 * 8. [return] - Returns the result of the operation, either a message or affected records count.
 */
data.connect:[generic|magic]
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]
   if
      or
         not-exists:x:@.arguments/*/twilio_account_id
         null:x:@.arguments/*/twilio_account_id
         eq:x:@.arguments/*/twilio_account_id
            .:
      .lambda
         remove-nodes:x:@data.connect/*/data.create/*/values/*/twilio_account_id
         unwrap:x:+/*/*
         add:x:@data.connect/*/data.update/*/values
            .
               twilio_account_id:x:@.arguments/*/type
   data.update
      table:ml_types
      values
      where
         and
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found
   response.status.set:202
   unwrap:x:+/*
   return
      affected:x:@data.update
