
// This Hyperlambda code connects to a SQLite database named "hospital" and reads data from the "Patients" table. It constructs a distinct SQL function using a specified column and appends additional query parameters like limit, offset, order, and direction. It then removes these parameters from the arguments and adds them to the data read operation. The code returns the nodes from the data read operation, effectively executing a distinct query on the specified column with additional filtering and ordering options.
data.connect:[generic|hospital]
   database-type:sqlite
   set-name:x:./*/data.read/*/columns/*/distinct_functor
      strings.concat
         .:distinct(
         get-value:x:@.arguments/*/distinct_column
         .:)
   remove-nodes:x:@.arguments/*/distinct_column
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:Patients
      columns
         distinct_functor
            as:.
      where
         and
   return-nodes:x:@data.read/*/*
