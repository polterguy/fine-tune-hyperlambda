
// This Hyperlambda code checks if a file path meets specific conditions and processes it if true. It verifies the file's extension, location, and other criteria, then loads and converts the file content to a lambda hierarchy. If the file is public or private, it processes arguments and adds metadata to a result node. The code uses slots like [strings.ends-with], [strings.contains], [strings.starts-with], [io.file.load], [hyper2lambda], and [remove-nodes] to achieve this.
if
   and
      strings.ends-with:x:@.dp/#
         .:.hl
      not
         strings.contains:x:@.dp/#
            .:/magic.startup/
      or
         eq:x:@.arguments/*/private
            .:bool:true
         strings.contains:x:@.dp/#
            .:/workflows/workflows/
         strings.starts-with:x:@.dp/#
            .:/modules/
         and
            strings.contains:x:@.dp/#
               .:/workflows/
            not
               strings.contains:x:@.dp/#
                  .:/workflows/actions/
            not
               strings.starts-with:x:@.dp/#
                  .:/system/workflows/
   .lambda
      strings.split:x:@.dp/#
         .:/
      strings.split:x:@strings.split/0/-
         .:.
      io.file.load:x:@.dp/#
      hyper2lambda:x:@io.file.load
         comments:true
      if
         and
            eq
               get-name:x:@hyper2lambda/0
               .:..
            or
               eq:x:@.arguments/*/private
                  .:bool:true
               eq:x:@hyper2lambda/*/.type
                  .:public
               strings.starts-with:x:@hyper2lambda/*/.type
                  .:crud-
         .lambda
            remove-nodes:x:"@hyper2lambda/*/.arguments/*/\\.."
            add:x:+/+/*/*/*/arguments
               get-nodes:x:@hyper2lambda/*/.arguments/*
            unwrap:x:+/*/*/*
            add:x:@.result
               .
                  .
                     description:x:"@hyper2lambda/*/\\../[0,1]"
                     name:x:@strings.split/0
                     file:x:@.dp/#
                     arguments
