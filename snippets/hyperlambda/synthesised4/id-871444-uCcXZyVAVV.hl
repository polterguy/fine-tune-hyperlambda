
// This Hyperlambda code establishes a connection to a SQLite database and performs a read operation on the "contacts" table, joining it with the "clients" table using a left join. It dynamically adds and removes nodes related to ordering, limiting, and offsetting from the arguments, and retrieves specific columns from both tables. The results are returned from the data read operation.
data.connect:[generic|crm]
   database-type:sqlite
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:sqlite
      table:contacts
         join:clients
            as:client_id
            type:left
            on
               and
                  contacts.client_id:client_id.client_id
      columns
         contacts.contact_id
         contacts.client_id
         contacts.name
         contacts.email
         contacts.phone
         contacts.position
         client_id.name
            as:client_id.name
      where
         and
   return-nodes:x:@data.read/*
