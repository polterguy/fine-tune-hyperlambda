
/*
 * The code snippet performs a loop that continues as long as the token count of a JSON string exceeds a specified maximum. Within the loop, it calculates 90% of the length of a result string and truncates the result string to this length. Finally, it updates the JSON string with the modified result. 
 * 
 * 1. [while] - Initiates a loop that continues while the condition is true.
 * 2. [mt] - Checks if the token count of the JSON string is more than the maximum allowed tokens.
 * 3. [openai.tokenize] - Calculates the token count of the JSON string.
 * 4. [get-value] - Retrieves the maximum token limit.
 * 5. [math.multiply] - Calculates 90% of the result string's length.
 * 6. [strings.length] - Retrieves the length of the result string.
 * 7. [set-value] - Updates the result string to its truncated version.
 * 8. [strings.substring] - Extracts a substring from the result string.
 * 9. [convert] - Converts the calculated length to an integer.
 * 10. [lambda2json] - Converts the modified result back to a JSON string.
 */
while
   mt
      openai.tokenize:x:@.json
      get-value:x:@.max-tokens
   .lambda
      math.multiply
         strings.length:x:@execute/*/result
         .:decimal:0.9
      set-value:x:@execute/*/result
         strings.substring:x:@execute/*/result
            .:int:0
            convert:x:@math.multiply
               type:int
      set-value:x:@.json
         lambda2json:x:@execute/*
