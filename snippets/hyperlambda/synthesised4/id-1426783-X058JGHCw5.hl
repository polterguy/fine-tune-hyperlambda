
/*
 * This Hyperlambda code snippet demonstrates a loop that continues to execute as long as the value of the [.tmp] node is greater than zero. Within each iteration of the loop, it removes the first node under [.cache-session] and decrements the value of [.tmp] by one. The loop ensures that nodes are removed from [.cache-session] while [.tmp] is greater than zero, effectively counting down the [.tmp] value to zero.
 * 
 * 1. [while] - Initiates a loop that continues as long as the specified condition is true.
 * 2. [mt] - Checks if the value of [.tmp] is greater than zero.
 * 3. [remove-nodes] - Removes the first node under [.cache-session].
 * 4. [math.decrement] - Decreases the value of [.tmp] by one.
 */
while
   mt:x:@.tmp
      .:int:0
   .lambda
      remove-nodes:x:@.cache-session/0
      math.decrement:x:@.tmp
