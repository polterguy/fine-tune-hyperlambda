
// The code attempts to create a database using different database types based on the [switch] statement. It loads a database creation script using [io.file.load], then connects to the appropriate database system using slots like [mysql.connect], [pgsql.connect], [mssql.connect], and [sqlite.connect]. It executes the script with slots like [mysql.execute], [pgsql.execute], [mssql.execute-batch], and [sqlite.execute]. Finally, it logs a success message with [log.info] including the database name.
try
   io.file.load:x:@.create-database-script
   switch:x:@.database-type
      case:mysql
         mysql.connect:sys
            mysql.execute:x:@io.file.load
      case:pgsql
         pgsql.connect:postgres
            strings.concat
               .:"create database "
               get-value:x:@.arguments/*/database
            pgsql.execute:x:-
               database:x:@.arguments/*/database
         pgsql.connect:x:@.arguments/*/database
            pgsql.execute:x:@io.file.load
      case:mssql
         mssql.connect:master
            mssql.execute-batch:x:@io.file.load
      case:sqlite
         strings.concat
            .:/data/
            get-value:x:@.arguments/*/database
            .:.db
         io.file.save:x:-
            .:
         sqlite.connect:x:@.arguments/*/database
            sqlite.execute:x:@io.file.load
   log.info:Successfully created database
      database_name:x:@.arguments/*/database
