
/*
 * This Hyperlambda code demonstrates how to read data from an SQLite database, specifically from the "Appointments" table, while performing left joins with the "Patients" and "Doctors" tables. It specifies columns to be aggregated and grouped, using placeholders for the aggregate function and grouping column. The code also includes a "where" clause for filtering conditions, allowing for complex data retrieval and aggregation. 
 * 
 * 1. [data.read] - Initiates reading data from a specified database.
 * 2. [database-type] - Specifies the type of database, here it is SQLite.
 * 3. [table] - Indicates the main table to read data from, "Appointments".
 * 4. [join] - Specifies left joins with "Patients" and "Doctors" tables.
 * 5. [as] - Aliases for joined tables, "PatientID" and "DoctorID".
 * 6. [type] - Specifies the type of join, here it is a left join.
 * 7. [on] - Defines the join condition based on matching IDs.
 * 8. [columns] - Lists columns to be selected, including an aggregate function.
 * 9. [aggregate_functor] - Placeholder for an aggregate function.
 * 10. [where] - Placeholder for filtering conditions.
 * 11. [group] - Specifies columns for grouping the results.
 * 12. [group_column] - Placeholder for the column used in grouping.
 */
data.read
   database-type:sqlite
   table:Appointments
      join:Patients
         as:PatientID
         type:left
         on
            and
               Appointments.PatientID:PatientID.PatientID
      join:Doctors
         as:DoctorID
         type:left
         on
            and
               Appointments.DoctorID:DoctorID.DoctorID
   columns
      aggregate_functor
         as:result
   where
      and
   group
      group_column
