
/*
 * 1. `@hyper2lambda` - This iterator searches for the first node named "hyper2lambda" in the current hierarchy. It starts from the context where the expression is evaluated and moves upwards and sideways until it finds a node with this name. This is useful for targeting a specific section of a Hyperlambda script that is identified by the "hyper2lambda" node.
 * 
 * 2. `**` - This iterator retrieves all descendant nodes of the "hyper2lambda" node, including the node itself. It uses a "breadth-first" algorithm to traverse the hierarchy. This is useful for scenarios where you need to process or analyze every node under a specific section of your Hyperlambda script.
 * 
 * 3. `[yield|return|return-nodes]` - This pipe-separated list of names filters the descendants to include only those nodes named "yield", "return", or "return-nodes". This is particularly useful for identifying and processing nodes that are responsible for returning values or node sets in a Hyperlambda script, which can be critical for debugging or understanding the flow of data.
 * 
 * 4. `*` - This iterator retrieves all children of the nodes that matched the previous filter. This is useful for accessing the immediate contents or parameters of "yield", "return", or "return-nodes" nodes, which might include the actual data or expressions being returned.
 * 
 * Potential use cases for this expression include debugging or analyzing a Hyperlambda script to understand how data is returned from various parts of the script, or extracting all return-related nodes for logging or documentation purposes.
 */

.:x:@hyper2lambda/**/[yield|return|return-nodes]/*