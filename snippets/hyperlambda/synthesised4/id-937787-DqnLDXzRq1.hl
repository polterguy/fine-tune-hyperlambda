
// This Hyperlambda code connects to a generic database hub and performs an update operation on the "clusters" table. It adds conditions and values to the update query using arguments, and executes the update. If no records are updated, it sets the HTTP response status to 404 with a "Record not found" message. Otherwise, it sets the response status to 202 and returns the number of affected records. The code uses slots like [data.connect], [add], [data.update], [if], [eq], [response.status.set], and [yield] to achieve its functionality.
data.connect:[generic|hub]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   data.update
      table:clusters
      values
      where
         and
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found
   response.status.set:202
   yield
      affected:x:@data.update
