
// This code constructs a SQL CASE statement using the [strings.concat] slot to dynamically build a string. It evaluates whether a specific pattern exists within a given field by comparing the length of the field before and after replacing the pattern, and sets the result to 1 if the pattern is found, otherwise 0. The slots used are: [set-value] to assign the result, [strings.concat] to concatenate strings, and [get-value] to retrieve values for dynamic parts of the SQL string.
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" CASE WHEN ((length("
      get-value:x:@.fields
      .:) - length(replace(lower(
      get-value:x:@.fields
      .:), @p
      get-value:x:@.no
      .:", ''))) / length(@p"
      get-value:x:@.no
      .:)) > 0 THEN 1 ELSE 0 END
