
/*
 * This Hyperlambda code checks if both [.key] and [.secret] nodes are not null and not empty using [not-null] and [neq] slots. If true, it validates the presence of a [recaptcha_response] argument using [validators.mandatory], and then verifies it with [validators.recaptcha], using the [min], [site-key], and [secret] values. The [min] value is dynamically retrieved using a [convert] expression. 
 * 
 * 1. [if] - Initiates a conditional block.
 * 2. [and] - Ensures all conditions within are true.
 * 3. [not-null] - Checks if [.key] is not null.
 * 4. [neq] - Verifies [.key] is not empty.
 * 5. [not-null] - Checks if [.secret] is not null.
 * 6. [neq] - Verifies [.secret] is not empty.
 * 7. [.lambda] - Executes if all conditions are met.
 * 8. [validators.mandatory] - Ensures [recaptcha_response] is provided.
 * 9. [validators.recaptcha] - Validates the [recaptcha_response].
 * 10. [min] - Sets the minimum score for reCAPTCHA.
 * 11. [site-key] - Uses [.key] for reCAPTCHA validation.
 * 12. [secret] - Uses [.secret] for reCAPTCHA validation.
 */
if
   and
      not-null:x:@.key
      neq:x:@.key
         .:
      not-null:x:@.secret
      neq:x:@.secret
         .:
   .lambda
      validators.mandatory:x:@.arguments/*/recaptcha_response
      validators.recaptcha:x:@.arguments/*/recaptcha_response
         min:x:@convert
         site-key:x:@.key
         secret:x:@.secret
