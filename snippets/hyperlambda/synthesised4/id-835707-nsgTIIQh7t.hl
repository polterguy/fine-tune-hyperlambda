
/*
 * The code snippet demonstrates how to concatenate strings to build an SQL query dynamically. It uses [set-value] to assign a concatenated string to the [.sql] node, combining the current SQL query with additional ordering and limiting clauses. The [strings.concat] slot is used to append the existing SQL query with a static string specifying the order and limit, followed by retrieving the limit value from the [.arguments] node using [get-value]. This approach allows for dynamically constructing SQL queries based on input parameters. 
 * 
 * 1. [set-value] - Assigns a new value to the [.sql] node.
 * 2. [strings.concat] - Concatenates strings to form a complete SQL query.
 * 3. [get-value] - Retrieves the current value of the [.sql] node.
 * 4. [.] - Static string specifying order and limit clauses for the SQL query.
 * 5. [get-value] - Retrieves the limit value from the [.arguments] node.
 */
set-value:x:@.sql
   strings.concat:x:@.sql
      get-value:x:@.sql
      .:" order by keyword_count desc, keyword_density desc limit "
      get-value:x:@.arguments/*/limit
