
// This Hyperlambda code processes an image node by constructing a URL based on the presence and format of its source attribute. It first checks if the source attribute exists and is not null or empty. Depending on whether the source starts with "http://", "https://", "://", or "/", it constructs the URL differently. If the source is a relative path, it concatenates it with a base URL. Finally, it appends or creates a Markdown image link in a snippets node, using the constructed URL and an optional alt text.
case:img
   if
      and
         exists:x:"@.dp/#/*/\\@src/[0,1]"
         not-null:x:"@.dp/#/*/\\@src/[0,1]"
         neq:x:"@.dp/#/*/\\@src/[0,1]"
            .:
      .lambda
         .url
         if
            and
               not
                  strings.starts-with:x:"@.dp/#/*/\\@src/[0,1]"
                     .:"http://"
               not
                  strings.starts-with:x:"@.dp/#/*/\\@src/[0,1]"
                     .:"https://"
            .lambda
               if
                  strings.starts-with:x:"@.dp/#/*/\\@src/[0,1]"
                     .://
                  .lambda
                     strings.split:x:@.base
                        .:"://"
                     set-value:x:@.url
                        strings.concat
                           get-value:x:@strings.split/0
                           .:":"
                           get-value:x:"@.dp/#/*/\\@src/[0,1]"
               else-if
                  strings.starts-with:x:"@.dp/#/*/\\@src/[0,1]"
                     .:/
                  .lambda
                     set-value:x:@.url
                        strings.concat
                           get-value:x:@.base
                           get-value:x:"@.dp/#/*/\\@src/[0,1]"
               else
                  set-value:x:@.url
                     strings.concat
                        get-value:x:@.base
                        .:/
                        get-value:x:"@.dp/#/*/\\@src/[0,1]"
         else
            set-value:x:@.url
               get-value:x:"@.dp/#/*/\\@src/[0,1]"
         if
            exists:x:@.snippets/0/-/*/completion
            .lambda
               set-value:x:@.snippets/0/-/*/completion
                  strings.concat
                     get-value:x:@.snippets/0/-/*/completion
                     .:@"

!["
                     get-first-value
                        get-value:x:"@.dp/#/*/\\@alt/[0,1]"
                        .:"Image "
                     .:](
                     get-value:x:@.url
                     .:)
         else
            strings.concat
               .:![
               get-first-value
                  get-value:x:"@.dp/#/*/\\@alt/[0,1]"
                  .:"Image "
               .:](
               get-value:x:@.url
               .:)
            unwrap:x:+/*/*
            add:x:@.snippets/0/-
               .
                  completion:x:@strings.concat
