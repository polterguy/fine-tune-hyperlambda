
/*
 * This Hyperlambda code snippet demonstrates how to insert a new record into a database table named "ml_requests" using the [data.create] slot. The slot specifies the table name and a set of values to be inserted into the corresponding columns. The values are dynamically retrieved from the current context using lambda expressions, such as [type], [prompt], [session], [user_id], and [referrer] from the [.arguments] node, and [completion] from the [signal] node. The [finish_reason] is statically set to "cached". This approach ensures that the data is inserted securely, preventing SQL injection attacks by treating dynamic inputs as parameters.
 * 
 * 1. [data.create] - Initiates the creation of a new record in the specified database table.
 * 2. [table] - Specifies the name of the table where the record will be inserted, in this case, "ml_requests".
 * 3. [values] - Contains the fields and their corresponding values to be inserted into the table.
 * 4. [type] - Retrieves the value for the "type" field from the [.arguments] node.
 * 5. [prompt] - Retrieves the value for the "prompt" field from the [.arguments] node.
 * 6. [completion] - Retrieves the value for the "completion" field from the [signal] node.
 * 7. [finish_reason] - Sets the value for the "finish_reason" field to the static string "cached".
 * 8. [session] - Retrieves the value for the "session" field from the [.arguments] node.
 * 9. [user_id] - Retrieves the value for the "user_id" field from the [.arguments] node.
 * 10. [referrer] - Retrieves the value for the "referrer" field from the [.arguments] node.
 */
data.create
   table:ml_requests
   values
      type:x:@.arguments/*/type
      prompt:x:@.arguments/*/prompt
      completion:x:@signal/*/cached
      finish_reason:cached
      session:x:@.arguments/*/session
      user_id:x:@.arguments/*/user_id
      referrer:x:@.arguments/*/referrer
