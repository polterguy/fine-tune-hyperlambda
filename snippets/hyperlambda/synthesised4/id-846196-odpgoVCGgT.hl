
/*
 * This Hyperlambda code snippet checks if a cache item exists, and if so, it converts a maximum session items argument to an integer. It then retrieves the cached data, iterating through it while its count exceeds the maximum session items, removing nodes until the condition is met. Finally, it adds the remaining nodes to a session node. 
 * 
 * 1. [if] - Checks if the cache item exists.
 * 2. [not-null] - Ensures the cache item is not null.
 * 3. [.lambda] - Executes the following code if the condition is true.
 * 4. [convert] - Converts the max session items argument to an integer.
 * 5. [hyper2lambda] - Retrieves the cached data.
 * 6. [while] - Iterates while the count of nodes exceeds the maximum session items.
 * 7. [mt] - Checks if the node count is greater than the maximum session items.
 * 8. [get-count] - Retrieves the count of nodes.
 * 9. [get-value] - Gets the converted maximum session items value.
 * 10. [.lambda] - Executes the following code during each iteration.
 * 11. [remove-nodes] - Removes the first node from the cached data.
 * 12. [add] - Adds the remaining nodes to the session node.
 * 13. [get-nodes] - Retrieves nodes from the cached data.
 */
if
   not-null:x:@cache.get
   .lambda
      convert:x:@.arguments/*/max_session_items
         type:int
      hyper2lambda:x:@cache.get
      while
         mt
            get-count:x:@hyper2lambda/*
            get-value:x:@convert
         .lambda
            remove-nodes:x:@hyper2lambda/0
      add:x:@.session
         get-nodes:x:@hyper2lambda/*
