
// This Hyperlambda code demonstrates how to perform a SQL read operation with multiple left joins on a SQLite database. The [data.read] slot is used to specify the database type as SQLite and to define the main table as "Products". Two left joins are performed: one with the "Categories" table and another with the "Suppliers" table. The joins are specified using the [join] slot, where the [type] is set to "left", indicating a left join. The join conditions are defined using the [on] slot, with the [and] slot specifying the conditions for matching columns between the tables. The [columns] slot is used to specify the columns to be retrieved, with a distinct function applied, and the result is aliased as ".". The [where] slot is included but does not specify any conditions, indicating that all records should be retrieved. Finally, the [return-nodes] slot is used to return the nodes from the [data.read] operation, effectively retrieving the results of the SQL query. This code is useful for performing complex SQL queries with joins and retrieving the results in a structured format.
data.read
   database-type:sqlite
   table:Products
      join:Categories
         as:ProductID
         type:left
         on
            and
               Products.ProductID:ProductID.CategoryID
      join:Suppliers
         as:SupplierID
         type:left
         on
            and
               Products.SupplierID:SupplierID.SupplierID
   columns
      distinct_functor
         as:.
   where
      and
return-nodes:x:@data.read/*/*
