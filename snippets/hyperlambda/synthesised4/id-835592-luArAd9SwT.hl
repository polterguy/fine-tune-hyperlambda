
/*
 * This Hyperlambda code checks if the value of [.no] is equal to 0. If true, it updates the [.sql] node by concatenating its current value with a dynamically constructed SQL string. The SQL string calculates the frequency of a substring within a field by using string length and replace functions. The concatenation involves multiple parts, including field names and parameters, to form a complete SQL expression. 
 * 
 * 1. [if] - Checks if the condition is true.
 * 2. [eq] - Compares [.no] to 0.
 * 3. [.lambda] - Executes the block if the condition is true.
 * 4. [set-value] - Updates the [.sql] node.
 * 5. [strings.concat] - Concatenates strings to form a SQL expression.
 * 6. [get-value] - Retrieves values from nodes like [.sql], [.fields], and [.no].
 */
if
   eq:x:@.no
      .:int:0
   .lambda
      set-value:x:@.sql
         strings.concat:x:@.sql
            get-value:x:@.sql
            .:" (length("
            get-value:x:@.fields
            .:) - length(replace(lower(
            get-value:x:@.fields
            .:), @p
            get-value:x:@.no
            .:", ''))) / length(@p"
            get-value:x:@.no
            .:)
