
/*
 * // This Hyperlambda code processes a list of strings, performing various operations based on specific conditions and values. It first checks if the list has more than one element, then trims and joins the strings. Depending on the first element's value, it executes different actions using a switch-case structure. It handles cases for "Crawl-Delay", "User-Agent", "Sitemap", "Disallow", and "Allow", performing operations like setting values, signaling warnings, and adding URLs to lists. The code ensures that URLs are properly formatted and handles exceptions for invalid values.
 * // 1. [if] - Checks if the number of elements in the list is more than or equal to 2.
 * // 2. [mte] - Compares the count of elements to 2.
 * // 3. [.lambda] - Executes the following operations if the condition is true.
 * // 4. [.value] - A node to store the joined and trimmed string values.
 * // 5. [set-value] - Sets the value of a node, used multiple times for different purposes.
 * // 6. [strings.join] - Joins string elements with a colon.
 * // 7. [strings.trim] - Trims whitespace from string elements.
 * // 8. [switch] - Switch-case structure to handle different string values.
 * // 9. [case] - Handles specific string values and executes corresponding actions.
 * // 10. [try] - Attempts to execute code that might throw exceptions.
 * // 11. [.catch] - Handles exceptions thrown in the try block.
 * // 12. [sockets.signal] - Sends a warning message through a feedback channel.
 * // 13. [math.multiply] - Multiplies values, used for converting seconds to milliseconds.
 * // 14. [strings.replace-not-of] - Replaces characters not in a specified set.
 * // 15. [convert] - Converts a string to an integer.
 * // 16. [strings.starts-with] - Checks if a string starts with a specified prefix.
 * // 17. [unwrap] - Evaluates and executes expressions.
 * // 18. [add] - Adds a value to a list.
 * // 19. [strings.concat] - Concatenates multiple strings.
 * // 20. [strings.replace] - Replaces parts of a string with another string.
 * // 21. [remove-nodes] - Removes nodes from a list.
 */
if
   mte
      get-count:x:@strings.split/*
      .:int:2
   .lambda
      .value
      set-value:x:@.value
         strings.join:x:@strings.split/*/[1,100]
            .:":"
      set-value:x:@strings.split/0
         strings.trim:x:@strings.split/0
            .:@"
	 "
      set-value:x:@.value
         strings.trim:x:@.value
            .:@"
	 "
      switch:x:@strings.split/0
         case:Crawl-Delay
         case:Crawl-delay
         case:crawl-delay
            set-value:x:@.value
               strings.replace-not-of:x:@.value
                  .:0123456789
                  .:
            if
               and
                  eq:x:@.relevant
                     .:bool:true
                  neq:x:@.value
                     .:
               .lambda
                  try
                     set-value:x:@.crawl-delay
                        math.multiply
                           .:int:1000
                           convert:x:@.value
                              type:int
                     if
                        mt:x:@.crawl-delay
                           .:int:60000
                        .lambda
                           sockets.signal:x:@.arguments/*/feedback-channel
                              args
                                 message:Crawl-Delay was more than 60 seconds, using 60 seconds as our value
                                 type:warning
                           set-value:x:@.crawl-delay
                              .:int:60000
                  .catch
                     sockets.signal:x:@.arguments/*/feedback-channel
                        args
                           message:Crawl-Delay was not a valid integer value, using 10 seconds as our value
                           type:warning
                     set-value:x:@.crawl-delay
                        .:int:10000
         case:User-Agent
         case:User-agent
         case:user-agent
            switch:x:@.value
               case:*
               case:AINIRO
               case:GPTBot
                  if
                     eq:x:@.value
                        .:AINIRO
                     .lambda
                        remove-nodes:x:@.allow/*
                        remove-nodes:x:@.disallow/*
                        set-value:x:@.has-seen-ainiro
                           .:bool:true
                        set-value:x:@.relevant
                           .:bool:true
                  else
                     if
                        eq:x:@.has-seen-ainiro
                           .:bool:false
                        .lambda
                           set-value:x:@.relevant
                              .:bool:true
                     else
                        set-value:x:@.relevant
                           .:bool:false
               default
                  set-value:x:@.relevant
                     .:bool:false
         case:Sitemap
         case:sitemap
            if
               or
                  strings.starts-with:x:@.value
                     .:"http://"
                  strings.starts-with:x:@.value
                     .:"https://"
               .lambda
                  unwrap:x:+/*/*
                  add:x:@.sitemap
                     .
                        .:x:@.value
            else
               strings.concat
                  get-value:x:@.domain
                  .:/
                  get-value:x:@.value
               strings.replace:x:@strings.concat
                  .://
                  .:/
               unwrap:x:+/*/*
               add:x:@.sitemap
                  .
                     .:x:@strings.replace
         case:Disallow
         case:disallow
            if
               eq:x:@.relevant
                  .:bool:true
               .lambda
                  if
                     or
                        strings.starts-with:x:@.value
                           .:"http://"
                        strings.starts-with:x:@.value
                           .:"https://"
                     .lambda
                        unwrap:x:+/*/*
                        add:x:@.disallow
                           .
                              .:x:@.value
                  else
                     strings.concat
                        get-value:x:@.domain
                        get-value:x:@.value
                     unwrap:x:+/*/*
                     add:x:@.disallow
                        .
                           .:x:@strings.concat
         case:Allow
         case:allow
            if
               eq:x:@.relevant
                  .:bool:true
               .lambda
                  if
                     or
                        strings.starts-with:x:@.value
                           .:"http://"
                        strings.starts-with:x:@.value
                           .:"https://"
                     .lambda
                        unwrap:x:+/*/*
                        add:x:@.allow
                           .
                              .:x:@.value
                  else
                     strings.concat
                        get-value:x:@.domain
                        get-value:x:@.value
                     unwrap:x:+/*/*
                     add:x:@.allow
                        .
                           .:x:@strings.concat
