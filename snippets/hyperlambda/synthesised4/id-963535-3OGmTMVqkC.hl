
/*
 * The code snippet demonstrates how to use the [add] slot in Hyperlambda to dynamically append nodes to a destination node. It specifies a destination node [@.result] and adds a nested structure with two nodes, [prompt] and [completion], whose values are derived from expressions pointing to [@.prompt] and [@.completion] respectively. This allows for dynamic construction of node structures based on existing data. 
 * 
 * 1. [add] - Appends nodes to the specified destination node.
 * 2. [.] - Represents a container for the nodes being added.
 * 3. [prompt] - A node whose value is set from the expression [@.prompt].
 * 4. [completion] - A node whose value is set from the expression [@.completion].
 */
add:x:@.result
   .
      .
         prompt:x:@.prompt
         completion:x:@.completion
