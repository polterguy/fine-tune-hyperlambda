
/*
 * The code checks if the [stream] argument does not exist or is explicitly set to false using an [if] condition combined with [or] and [not-exists] slots. If the condition is true, it executes a lambda block that sets the [.result], [.finish_reason], and [.iterations] nodes. The [.result] node is set to the content of the first choice message from an HTTP POST response, [.finish_reason] is set to the first value of the finish reason or defaults to "unknown" if not available, and [.iterations] is initialized to 0. 
 * 
 * 1. [if] - Checks a condition and executes its lambda block if true.
 * 2. [or] - Evaluates to true if any of its conditions are true.
 * 3. [not-exists] - Returns true if the specified node does not exist.
 * 4. [eq] - Checks if the [stream] argument is false.
 * 5. [.lambda] - Contains the code to execute if the [if] condition is true.
 * 6. [set-value] - Assigns values to specified nodes.
 * 7. [get-value] - Retrieves the value of a specified node.
 * 8. [get-first-value] - Retrieves the first value from a node set or defaults to a specified value.
 */
if
   or
      not-exists:x:@.arguments/*/stream
      eq:x:@.arguments/*/stream
         .:bool:false
   .lambda
      set-value:x:@.result
         get-value:x:@http.post/*/content/*/choices/0/*/message/*/content
      set-value:x:@.finish_reason
         get-first-value
            get-value:x:@http.post/*/content/*/choices/0/*/finish_reason
            .:unknown
      set-value:x:@.iterations
         .:int:0
