
// This Hyperlambda code snippet demonstrates how to perform a SQL query using the [data.read] slot, specifically targeting a SQLite database. The code specifies a left join between the "activities" table and the "clients" table, using the "client_id" field as the joining key. The [join] slot is used to define the type of join (left join in this case) and the condition for joining the tables, which is that the "client_id" in the "activities" table matches the "client_id" in the "clients" table. The [columns] slot specifies an aggregate function, which is aliased as "result", to be included in the query's result set. The [where] slot is included, but it currently lacks any conditions, indicating that all records will be considered unless further conditions are added. The [group] slot specifies a "group_column" for grouping the results, enabling the aggregation of data based on this column. Finally, the [return-nodes] slot is used to return the nodes from the [data.read] operation, effectively outputting the results of the SQL query.
data.read
   database-type:sqlite
   table:activities
      join:clients
         as:client_id
         type:left
         on
            and
               activities.client_id:client_id.client_id
   columns
      aggregate_functor
         as:result
   where
      and
   group
      group_column
return-nodes:x:@data.read/*
