
/*
 * This Hyperlambda code checks if the current node's value ends with ".hl" and loads the file if true. It then parses the file into a lambda hierarchy, preserving comments. If the root node's name is "..", it renames specific nodes to MySQL equivalents, converts the lambda back to Hyperlambda, and saves the updated content back to the file. 
 * 
 * 1. [if] - Checks if the current node's value ends with ".hl".
 * 2. [strings.ends-with] - Determines if the node's value ends with ".hl".
 * 3. [io.file.load] - Loads the file if the condition is true.
 * 4. [hyper2lambda] - Parses the file content into a lambda hierarchy, preserving comments.
 * 5. [if] - Checks if the root node's name is "..".
 * 6. [eq] - Compares the root node's name to "..".
 * 7. [set-name] - Renames nodes to MySQL equivalents.
 * 8. [lambda2hyper] - Converts the lambda hierarchy back to Hyperlambda, preserving comments.
 * 9. [io.file.save] - Saves the updated Hyperlambda back to the file.
 */
if
   strings.ends-with:x:@.dp/#
      .:.hl
   .lambda
      io.file.load:x:@.dp/#
      hyper2lambda:x:@io.file.load
         comments:true
      if
         eq
            get-name:x:@hyper2lambda/0
            .:..
         .lambda
            set-name:x:@hyper2lambda/**/data.connect
               .:mysql.connect
            set-name:x:@hyper2lambda/**/data.create
               .:mysql.create
            set-name:x:@hyper2lambda/**/data.read
               .:mysql.read
            set-name:x:@hyper2lambda/**/data.update
               .:mysql.update
            set-name:x:@hyper2lambda/**/data.delete
               .:mysql.delete
            lambda2hyper:x:@hyper2lambda/*
               comments:true
            io.file.save:x:@.dp/#
               get-value:x:@lambda2hyper
