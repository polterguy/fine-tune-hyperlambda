
/*
 * This Hyperlambda code checks if the value of [.no] is equal to 0. If true, it sets the value of [.sql] by concatenating several string parts, including values from [.sql], [.fields], and [.no], using the [strings.concat] slot. This constructs a SQL expression involving length calculations and replacements, dynamically building a query string. 
 * 
 * 1. [if] - Checks if the value of [.no] is equal to 0.
 * 2. [eq] - Compares [.no] with the integer 0.
 * 3. [.lambda] - Executes the following block if the condition is true.
 * 4. [set-value] - Sets the value of [.sql] with the result of the concatenation.
 * 5. [strings.concat] - Concatenates multiple string parts to form a SQL expression.
 * 6. [get-value:x:@.sql] - Retrieves the current value of [.sql].
 * 7. [get-value:x:@.fields] - Retrieves the value of [.fields] for use in the SQL expression.
 * 8. [get-value:x:@.no] - Retrieves the value of [.no] to be used in the SQL expression.
 */
if
   eq:x:@.no
      .:int:0
   .lambda
      set-value:x:@.sql
         strings.concat:x:@.sql
            get-value:x:@.sql
            .:" (length("
            get-value:x:@.fields
            .:) - length(replace(lower(
            get-value:x:@.fields
            .:), @p
            get-value:x:@.no
            .:", ''))) / length(@p"
            get-value:x:@.no
            .:)
