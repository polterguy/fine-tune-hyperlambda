
/*
 * // This Hyperlambda code checks if a specific expression does not exist within a set of nodes. If the expression does not exist, it unwraps and adds a new candidate node with the specified name, expression, and a completion status set to true.
 * // 1. [if] - Checks a condition and executes its lambda if the condition is true.
 * // 2. [not-exists] - Evaluates to true if the specified expression does not yield any results.
 * // 3. [.lambda] - Contains the code to execute if the [if] condition is true.
 * // 4. [unwrap] - Evaluates expressions within the specified range.
 * // 5. [add] - Adds a new node to the specified location.
 * // 6. [name] - Sets the name of the new node using the value of [x].
 * // 7. [expression] - Sets the expression of the new node using the value of [x].
 * // 8. [complete] - Sets the completion status of the new node to true.
 */
if
   not-exists:x:../*/return/*/candidates/*/*/expression/={@.x}
   .lambda
      unwrap:x:+/*/*/*
      add:x:../*/return/*/candidates
         .
            .
               name:x:@.x
               expression:x:@.x
               complete:bool:true
