/*
 * Creates a reusable dynamic slot [math.average] that calculates the average of a list of integers.
 *
 * First validates that the [numbers] argument exists and contains only integers.
 * It then sums up the values using a [for-each] loop and the [math.add] slot.
 * The total count of values is retrieved using [get-count], and the sum is divided by this count
 * via [math.divide] to calculate the average.
 *
 * Finally, the result is returned in a [yield] under the node [average], making this slot
 * a reusable and reliable numerical utility within larger workflows.
 */
slots.create:math.average

   // Making sure caller supplied at least one integer value in [numbers] argument collection.
   validators.mandatory:x:@.arguments/*/numbers
   validators.integer:x:@.arguments/*/numbers/*

   // Initialize sum to 0
   .sum:int:0

   // Add each number to the sum
   for-each:x:@.arguments/*/numbers/*
      set-value:x:@.sum
         math.add
            get-value:x:@.sum
            get-value:x:@.dp/#

   // Count the number of values
   .count
   set-value:x:@.count
      get-count:x:@.arguments/*/numbers/*

   // Divide sum by count
   math.divide
      get-value:x:@.sum
      get-value:x:@.count

   // Return average
   yield
      average:x:@math.divide