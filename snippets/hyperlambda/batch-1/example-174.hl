
/*
 * Copies all child nodes from [.registry] and inserts them as children of [.storage].
 *
 * ### Data Structure
 * - [.registry] contains multiple entries such as:
 *   - [entryFirst]: infoFirst
 *   - [entrySecond]: infoSecond
 *   - [entryThird]: infoThird
 * - [.storage] is initialized as an empty container to hold the duplicates.
 *
 * ### Operation
 * - [get-nodes] selects all child nodes of [.registry].
 * - [add] inserts those nodes into [.storage], preserving both names and values.
 *
 * This pattern is useful for cloning data structures, buffering values,
 * or passing data between logical stages in Hyperlambda.
 */
.registry
   entryFirst:infoFirst
   entrySecond:infoSecond
   entryThird:infoThird
.storage

// The following code duplicates nodes from [.registry] and inserts them into [.storage]
add:x:@.storage
   get-nodes:x:@.registry/*
