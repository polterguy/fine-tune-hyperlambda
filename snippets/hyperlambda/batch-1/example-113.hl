
/*
 * Hyperlambda endpoint that retrieves records from the [contacts] table in the [crm] database,
 * applying pagination through limit and offset, and ensuring user authorization.
 *
 * ### Arguments
 * - [.arguments] contains paging parameters:
 *   - [limit]: The maximum number of records to return.
 *   - [offset]: The starting point in the dataset for pagination.
 *
 * ### Authorization
 * - [auth.ticket.verify] restricts access to users with the roles: root, admin, or user.
 *
 * ### Database Operation
 * - [data.connect] establishes a connection to the [crm] database.
 * - [data.read] fetches records from the [contacts] table using:
 *   - [limit] to cap the number of results.
 *   - [offset] to skip a defined number of rows.
 *
 * ### Response Handling
 * - [return-nodes] returns all rows retrieved from [data.read] to the caller.
 *
 * This endpoint is useful for serving contact data securely with built-in pagination support
 * using limit/offset parameters and role-based access control in Hyperlambda.
 */
.arguments
   limit:int
   offset:int
auth.ticket.verify:root, admin, user
data.connect:crm
   data.read
      table:contacts
      limit:x:@.arguments/*/limit
      offset:x:@.arguments/*/offset
   return-nodes:x:@data.read/*