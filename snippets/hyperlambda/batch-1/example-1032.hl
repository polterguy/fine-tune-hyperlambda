
/*
 * Hyperlambda endpoint taking ZERO arguments. Executes an SQL aggregation
 * to retrieve the top 25 artists with the most albums from the [chinook] SQLite database.
 *
 * 1. [.arguments]
 *    * Declares that this endpoint takes no input arguments.
 *
 * 2. [auth.ticket.verify]
 *    * Ensures that only users with [root] or [admin] roles are authorized to invoke this endpoint.
 *
 * 3. [data.connect]
 *    * Establishes a connection to the [chinook] SQLite database.
 *    * Specifies the [database-type] as [sqlite].
 *
 * 4. [data.select]
 *    * Executes a raw SQL query that:
 *    * - Joins the [Album] and [Artist] tables.
 *    * - Aggregates the number of albums per artist.
 *    * - Groups by [ArtistId].
 *    * - Orders the result in descending order by album count.
 *    * - Limits the result to the top 25 artists.
 *
 * 5. [return-nodes]
 *    * Returns the result of [data.select] back to the caller.
 *    * Uses the expression `x:@data.select/*` to extract all rows from the query result.
 */
.arguments

// Making sure user is authorized to invoke endpoint.
auth.ticket.verify:root,admin

// Connecting to database.
data.connect:chinook
   database-type:sqlite

   // Executing [data.select] slot with our SQL.
   data.select:"\n/*\n * Script to aggregate records for each artist in chinook database.\n * Make sure you select the chinook database before execxuting the script.\n */\nselect ar.Name, count(*) as count\n  from Album al, Artist ar where al.ArtistId = ar.ArtistId\n  group by al.ArtistId\n  order by count desc\n  limit 25\n"
      database-type:sqlite

   // Returning a result of above invocation to caller.
   return-nodes:x:@data.select/*
