
/*
 * This Hyperlambda endpoint submits user feedback via an external HTTP POST request,
 * and uses a [switch] block to handle various HTTP status codes with appropriate error handling.
 *
 * 1. [.arguments]
 *    * Declares the endpoint's root and allows for future extensibility.
 *    * No input arguments are currently required; payload is hardcoded.
 *
 * 2. [.feedback.status]
 *    * Placeholder node for storing the final feedback submission result.
 *
 * 3. [http.post]
 *    * Sends a POST request to the external [api.feedbackly.io] endpoint.
 *    * [convert:true] automatically parses the HTTP response into a lambda object.
 *    * The payload includes:
 *      - [name]: Sarah Lee
 *      - [email]: sarah.lee@example.com
 *      - [message]: "This platform is fantastic!"
 *
 * 4. [switch:x:@http.post]
 *    * Evaluates the HTTP response code from [http.post] and triggers matching [case] logic.
 *
 * 5. [case:int:200]
 *    * Sets [.feedback.status] to a success message when the response is HTTP 200.
 *
 * 6. [case:int:400], [401], [403], [404], [500]
 *    * Throws an appropriate error for each HTTP status code, using a human-readable message.
 *    * Uses correct [throw] syntax with the status message as its node value.
 *
 * 7. [default]
 *    * Handles any unexpected status codes not explicitly matched above.
 *    * Sets [.feedback.status] to "Unhandled response – unknown status code".
 *
 * 8. [yield]
 *    * Returns the final result stored in [.feedback.status] to the HTTP caller.
 *
 * Result:
 * This endpoint submits feedback and provides informative messages or throws errors
 * depending on the HTTP status code returned from the external service.
 */
.arguments

// Final feedback submission result
.feedback.status

// Send HTTP POST to feedback API
http.post:"https://api.feedbackly.io/v1/submit"
   convert:true
   payload
      name:Sarah Lee
      email:sarah.lee@example.com
      message:This platform is fantastic!

// Branch based on HTTP status code
switch:x:@http.post

   case:int:200
      set-value:x:@.feedback.status
         .:Feedback submitted successfully

   case:int:400
      throw:400 Bad Request – Please check your input data

   case:int:401
      throw:401 Unauthorized – You must log in to submit feedback

   case:int:403
      throw:403 Forbidden – You don’t have permission to perform this action

   case:int:404
      throw:404 Not Found – The feedback endpoint does not exist

   case:int:500
      throw:500 Internal Server Error – Please try again later

   default
      set-value:x:@.feedback.status
         .:Unhandled response – unknown status code

// Return the result
yield
   result:x:@.feedback.status
