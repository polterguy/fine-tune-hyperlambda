
/*
 * This Hyperlambda script creates a scheduled task that periodically deletes
 * old machine learning request records from the [ml_requests] table in a SQLite database.
 * It includes conditional logic to run only if the default database is SQLite.
 *
 * 1. [if eq config.get:"magic:databases:default"]
 *    * Ensures that the script runs only if the configured default database is SQLite.
 *
 * 2. [try]
 *    * Attempts to safely delete any existing scheduled task named [delete-old-machine-learning-requests]
 *      before recreating it. This ensures no duplicate tasks are registered.
 *
 * 3. [tasks.list:delete-old-machine-learning-requests]
 *    * Retrieves an existing scheduled task by name.
 *
 * 4. [if exists]
 *    * If a task with the same name exists, deletes it using [tasks.delete].
 *
 * 5. [tasks.create:delete-old-machine-learning-requests]
 *    * Registers a new task with the given name and description.
 *    * [repeats:72.hours] configures the task to run every 3 days.
 *
 * 6. [.lambda] (task body)
 *    * [sqlite.connect:magic]: Opens a connection to the [magic] SQLite database.
 *    * [sqlite.execute]: Executes a SQL DELETE query to remove records from [ml_requests]
 *      where:
 *      - The [created] timestamp is older than 14 days.
 *      - [cached] and [questionnaire] are either 0 or null.
 *
 * 7. [log.info]
 *    * Logs the number of deleted records when the task runs successfully.
 *
 * 8. [.catch]
 *    * If a task with the same name already exists and cannot be deleted,
 *      logs a message to the console.
 *
 * Result:
 * * A periodic cleanup task is created and run automatically every 72 hours,
 *   removing stale, uncached machine learning records from the system.
 */
if
   eq
      config.get:"magic:databases:default"
      .:sqlite
   .lambda

      // Wrapping in try/catch in case task already exists.
      try

         // Deleting old task if existing.
         tasks.list:delete-old-machine-learning-requests
         if
            exists:x:@tasks.list/*
            .lambda
               tasks.delete:x:@tasks.list/0/*/id

         // Creating task that periodically deletes old historical requests.
         tasks.create:delete-old-machine-learning-requests
            description:Periodically deletes all machine learning requests older than 14 days
            repeats:72.hours
            .lambda
               sqlite.connect:magic
                  sqlite.execute:"delete from ml_requests where created < date('now', '-14 day') and (cached = 0 or cached is null) and (questionnaire = 0 or questionnaire is null)"
               log.info:Task to cleanup old machine learning requests executed successfully
                  deleted:x:@sqlite.connect/*/sqlite.execute
      .catch

         // Task already exists.
         console.log:Task to periodically delete historical requests already exists
