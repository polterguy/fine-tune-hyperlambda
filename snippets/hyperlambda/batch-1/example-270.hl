
/*
 * CRUD Create endpoint inserting one record into the 'crawl_urls' table in the 'scraper' SQLite database,
 * using [url] and [type] arguments. Access is restricted to users with the 'root' or 'admin' roles.
 *
 * ### Arguments
 * - [.arguments] includes:
 *   - [url]: The URL to be inserted.
 *   - [type]: The type/category of the URL.
 *
 * ### Authorization
 * - [auth.ticket.verify] ensures the user has either the 'root' or 'admin' role.
 *
 * ### Database Operation
 * - [data.connect] connects to the 'scraper' database using the 'generic' connection string.
 * - [add] forwards the argument nodes into the [values] block for [data.create].
 *   This part allows you to have optional arguments, since only arguments actually supplied will be added into the [values] part.
 * - [data.create] inserts the new record into the 'crawl_urls' table.
 *
 * ### Response
 * - [response.status.set] sets the HTTP response status to 201 (Created).
 * - [yield] returns the ID of the newly created record as [id].
 *
 * This endpoint demonstrates a secured and parameterized insert operation
 * in Hyperlambda for managing crawled URLs in a scraper database.
 */
.arguments

   // url column value
   url:string

   // type column value
   type:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up database connection.
data.connect:[generic|scraper]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:crawl_urls
      values

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   yield
      id:x:@data.create
