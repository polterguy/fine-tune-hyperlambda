
/*
 * Sum all integers starting from 1 while the accumulated sum remains below 100.
 * 
 * - Initializes [.no] as a counter starting at 0, and [.sum] to track the total.
 * - A [while] loop runs as long as the value of [.sum] is less than 100.
 * - Inside the loop:
 *   - The current value of [.no] is added to [.sum] using [math.add] and [set-value].
 *   - [.no] is incremented by 1 using [math.increment] to prepare for the next iteration.
 * 
 * Demonstrates the use of [while], [lt], [get-value], [math.add], and [math.increment]
 * to iteratively update values based on a conditional loop.
 */
.no:int:0
.sum:int:0
while
   lt
      get-value:x:@.sum
      .:int:100
   .lambda

      // Adding to sum.
      set-value:x:@.sum
         math.add:x:@.sum
            get-value:x:@.no

      // Incrementing counter.
      math.increment:x:@.no
