
/*
 * Dynamically sets HTTP response headers based on a file type using a [switch] statement.
 *
 * Steps:
 * - Initializes [.fileType] to "json" (can be any file extension or MIME-related label).
 * - The [switch:x:@.fileType] slot evaluates the value and selects the matching [case].
 *
 * Each [case] block sets appropriate headers using [response.headers.set], including:
 * - [Content-Type] to specify the MIME type.
 * - [Content-Disposition] to instruct the browser to treat the file as an attachment
 *   with a specified filename.
 *
 * Supported types:
 * - pdf → "application/pdf"
 * - zip → "application/zip"
 * - txt → "text/plain"
 * - default → "application/octet-stream" (used for unknown or binary files)
 *
 * This pattern is useful for serving downloadable content where headers must match
 * the file type to ensure correct client handling.
 */
.fileType:json
switch:x:@.fileType
   case:pdf
      response.headers.set
         Content-Type:application/pdf
         Content-Disposition:@"attachment; filename=""document.pdf"""
   case:zip
      response.headers.set
         Content-Type:application/zip
         Content-Disposition:@"attachment; filename=""archive.zip"""
   case:txt
      response.headers.set
         Content-Type:text/plain
         Content-Disposition:@"attachment; filename=""notes.txt"""
   default
      response.headers.set
         Content-Type:application/octet-stream
         Content-Disposition:@"attachment; filename=""file.bin"""
