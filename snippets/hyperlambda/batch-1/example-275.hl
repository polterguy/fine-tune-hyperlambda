
/*
 * This Hyperlambda snippet checks for the presence of child nodes in [.src1] and [.src2] using [exists].
 *
 * 1. [.src1] and [.src2]
 *    * These nodes act as containers. [.src1] has one child node named [foo], while [.src2] has no children.
 *
 * 2. [@.src1/*]
 *    * The `@` named iterator looks for the first [.src1] node in the current scope or above.
 *    * The `*` child iterator selects all direct child nodes of [.src1].
 *    * Result: Resolves to [foo].
 *
 * 3. [exists:x:@.src1/*]
 *    * Returns true because [.src1] has at least one child node ([foo]).
 *
 * 4. [@.src2/*]
 *    * The `@` named iterator finds the [.src2] node.
 *    * The `*` iterator selects all child nodes of [.src2], but since there are none, this returns an empty set.
 *
 * 5. [exists:x:@.src2/*]
 *    * Returns false because [.src2] has no children.
 */
.src1
   foo
.src2
exists:x:@.src1/*
exists:x:@.src2/*