
/*
 * This Hyperlambda snippet demonstrates how to use [include] to inject a generated subtree
 * into each node matched by a lambda expression.
 *
 * 1. [.data]
 *    * Contains child nodes [item1] and [item2] with respective values.
 *
 * 2. [include]
 *    * Targets each child of [.data] using the expression `@.data/*`.
 *    * Executes its child [return] block for each matched node.
 *
 * 3. [return]
 *    * Defines the subtree to inject into each matched node.
 *    * Adds a new child node [child] with the value "added" under each [item1] and [item2].
 *
 * Result:
 * * [item1] and [item2] will each receive a new child node [child:added].
 * * The updated structure will look like:
 *     .data
 *        item1
 *           child:added
 *        item2
 *           child:added
 */
.data
   item1:foo
   item2:bar
include:x:@.data/*
   return
      child:added
