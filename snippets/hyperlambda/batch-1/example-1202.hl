
/*
 * This Hyperlambda script defines a CRUD delete endpoint that removes one item
 * from the [roles] table in the [magic] database. Access is restricted to users with [root] role.
 *
 * 1. [.arguments]
 *    * Accepts one required input:
 *    * - [name]: The name of the role to be deleted from the [roles] table.
 *
 * 2. [auth.ticket.verify:root]
 *    * Ensures that only authenticated users with the [root] role can invoke this endpoint.
 *
 * 3. [validators.mandatory]
 *    * Validates that the [name] argument is provided before executing the delete operation.
 *
 * 4. [data.connect:[generic|magic]]
 *    * Establishes a connection to the [magic] SQLite database using a [generic] connection string.
 *
 * 5. [add:x:./*/data.delete/*/where/*/and]
 *    * Injects the [name] parameter dynamically into the [where and] clause of the [data.delete] block.
 *    * This targets the correct record in the [roles] table based on the provided name.
 *
 * 6. [data.delete]
 *    * Performs the DELETE operation on the [roles] table with the specified condition.
 *
 * 7. [unwrap]
 *    * Makes the [data.delete] result directly available for further reference in the response.
 *
 * 8. [return]
 *    * Returns a node named [affected], showing how many rows were deleted as a result of the operation.
 */
.arguments
   name:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root
validators.mandatory:x:@.arguments/*/name

// Opening up our database connection.
data.connect:[generic|magic]

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      table:roles
      where
         and

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
