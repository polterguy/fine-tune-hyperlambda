
/*
 * CRUD Hyperlambda endpoint that inserts a new record into the [questionnaires] table
 * of the [magic] SQLite database, with authentication and name validation.
 *
 * ### Arguments
 * - [.arguments] includes the following input parameters:
 *   - [name]: The name of the questionnaire.
 *   - [type]: The type or category of the questionnaire.
 *   - [action]: An optional action or trigger identifier.
 *
 * ### Authorization
 * - [auth.ticket.verify] ensures only users with the "root" role can access the endpoint.
 *
 * ### Validation
 * - [validators.regex] checks that [name] matches the pattern: lowercase letters, numbers,
 *   underscores or hyphens, between 2 and 20 characters long.
 *
 * ### Database Operation
 * - [data.connect] establishes a connection to the [magic] SQLite database.
 * - [add] dynamically injects the arguments into the [values] block of [data.create].
 * - [data.create] inserts the new record into the [questionnaires] table.
 *
 * ### Response Handling
 * - [response.status.set] sets the HTTP response status to 201 (Created).
 * - [return] responds to the client with [result] set to "success".
 *
 * This endpoint demonstrates secure and validated insertion of records using Hyperlambda's
 * CRUD infrastructure, with strict access control and clean response handling.
 */
.arguments
   name:string
   type:string
   action:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Sanity checking name.
validators.regex:x:@.arguments/*/name
   regex:^[a-z0-9_-]{2,20}$

// Opening up database connection.
data.connect:[generic|magic]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:questionnaires
      values

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   return
      result:success
