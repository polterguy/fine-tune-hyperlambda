
/*
 * This endpoint returns a greeting message based on a specified [type].
 * It uses a raw SQL query through [data.select] to fetch data from the 'ml_types' table.
 *
 * 1. [.arguments]
 *    - Declares the input parameter [type], which determines the greeting to retrieve.
 *
 * 2. [validators.mandatory]
 *    - Ensures the [type] parameter is present before proceeding.
 *
 * 3. [data.connect]
 *    - Opens a connection to the [generic|magic] database to enable database interaction.
 *
 * 4. [data.select]
 *    - Executes a raw SQL SELECT query to fetch the [greeting] column from the [ml_types] table
 *      where the [type] matches the provided argument.
 *    - Uses parameterized input ([type:x:@.arguments/*/type]) to prevent SQL injection and bind variables securely.
 *
 * 5. [yield]
 *    - Returns the retrieved [greeting] value back to the caller, extracted from the result of [data.select].
 */
.arguments
   type:string

// Ensuring [type] is passed in
validators.mandatory:x:@.arguments/*/type

// Opening up database connection.
data.connect:[generic|magic]

   // Retrieving all questions from database.
   data.select:"\nselect greeting\n\tfrom ml_types\n\twhere type = @type"
      type:x:@.arguments/*/type

   // Returning greeting to caller.
   yield
      greeting:x:@data.select/*/*/greeting
