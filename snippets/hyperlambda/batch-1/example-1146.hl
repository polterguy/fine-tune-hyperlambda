
/*
 * This Hyperlambda snippet demonstrates sequential evaluation of multiple [.lambda] nodes
 * using the [eval] slot. The result is determined by the last [.lambda] that executes.
 *
 * 1. [.res]
 *    * Declares a node that will store the result after evaluating all [.lambda] blocks.
 *
 * 2. [.lambda] (first)
 *    * Sets the value of [.res] to "First".
 *
 * 3. [.lambda] (second)
 *    * Sets the value of [.res] to "Second", overwriting the first value.
 *
 * 4. [eval]
 *    * Executes all [.lambda] nodes found at the same level as [.res], in sequence.
 *    * Each [.lambda] modifies [.res], with the last one taking precedence.
 *
 * Result:
 * * [.res] ends up as "Second", since the last [.lambda] sets it to that value.
 */
.res:
.lambda
   set-value:x:@.res
      .:First
.lambda
   set-value:x:@.res
      .:Second
eval:x:../*/.lambda

// Result after executing above lambda
.res:Second
.lambda
   set-value:x:@.res
      .:First
.lambda
   set-value:x:@.res
      .:Second
eval:x:../*/.lambda
