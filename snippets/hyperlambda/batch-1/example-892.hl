
/*
 * This Hyperlambda endpoint generates a personalized greeting based on user-provided name and age.
 *
 * 1. [.arguments]
 *    - Declares the expected input parameters for the endpoint: [name] as a string and [age] as an integer.
 *    - This node is required in endpoint definitions to properly parse incoming arguments.
 *
 * 2. [validators.mandatory]
 *    - Ensures that both [name] and [age] are provided by the caller.
 *    - Prevents further execution and returns an error if either is missing.
 *
 * 3. [strings.concat]
 *    - Concatenates static strings and dynamic values (from [name] and [age]) into a complete greeting sentence.
 *    - Uses [get-value] to extract argument values and joins them with literal string segments like "Hello " and " years old.".
 *
 * 4. [yield]
 *    - Returns a response node [greeting] containing the final string generated by [strings.concat].
 *    - The lambda expression `@strings.concat` references the result of the concatenation operation.
 */
.arguments
   name:string
   age:int

// IMPORTANT! Endpoints and hyperlambda files taking arguments should almost ALWAYS have an [.arguments] node such as above!

// Ensures name was provided.
validators.mandatory:x:@.arguments/*/name

// Ensures age was provided.
validators.mandatory:x:@.arguments/*/age

// Concatenates the name and age into a greeting.
strings.concat
   .:"Hello "
   get-value:x:@.arguments/*/name
   .:", you are "
   get-value:x:@.arguments/*/age
   .:" years old."

// Returns the greeting to the caller.
yield
   greeting:x:@strings.concat