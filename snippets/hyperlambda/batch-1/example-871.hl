
/*
 * This code defines an HTTP endpoint that connects to a database, retrieves employee data,
 * transforms the data into XML format, and returns the XML response to the caller.
 *
 * 1. [.arguments]
 *    - Declares the beginning of the parameter definition block for the endpoint, where any incoming arguments to the HTTP request would typically be declared.
 *
 * 2. [data.connect]
 *    - Opens a connection to the SQLite database named 'company_database'.
 *    - All subsequent database operations must reside within the scope of this slot to use the opened connection.
 *
 * 3. [data.read]
 *    - Executes a `SELECT` operation on the 'employees' table.
 *    - Returns all records unless further filtered using children like `where`, `limit`, or similar.
 *
 * 4. [response.headers.set]
 *    - Sets the HTTP response header `Content-Type` to `'application/xml'`, indicating the response body will be XML.
 *
 * 5. [lambda2xml]
 *    - Converts the result of the [data.read] operation (referenced using the lambda expression `@data.read/*`) into an XML string.
 *    - This transformation prepares the data to be returned in a format compatible with XML consumers.
 *
 * 6. [return]
 *    - Sends the final transformed result (now XML) back to the HTTP caller as the response.
 *    - The dash `-` indicates returning the currently evaluated value, which is the output from [lambda2xml].
 */
.arguments

// Connect to the database and retrieve employee
data.connect:company_database
   data.read
      table:employees
   response.headers.set
      Content-Type:application/xml

   // Converting lambda object to XML
   lambda2xml:x:@data.read/*

   // Returning lambda object to caller
   return:x:-
