
/*
 * Creates 10 new child nodes named [item] under the [.list] node using a [while] loop.
 *
 * ### Initialization
 * - [.i] is initialized to 0 and serves as the loop counter.
 * - [.list] is the parent node where all [item] nodes will be added.
 *
 * ### Loop Logic
 * - [while] continues looping as long as [.i] is not equal to 10, using [neq].
 * - In each iteration:
 *   - [add] appends a new [item] node to [.list].
 *   - [math.increment] increases [.i] by 1 to progress the loop.
 *
 * This snippet demonstrates dynamic node creation and iterative logic using [while]
 * and [add] to build a collection of nodes in Hyperlambda.
 */
.i:long:0
.list
while
   neq:x:@.i
      .:long:10
   .lambda
      add:x:@.list
         .
            item
      math.increment:x:@.i
