
/*
 * Iterates through a list of car parts and updates their statuses based on availability.
 *
 * ## Initial Data
 * - [.car-parts] holds a collection of part names as keys (e.g., 'engine', 'wheel', 'door') with their respective availability statuses as values.
 *
 * ## Logic Loop
 * - [for-each] loops over each child node inside [.car-parts], representing individual car parts.
 * - For each part:
 *   - [if] checks whether its value is equal to 'available' using [eq] and a direct reference to the node's value via [@.dp/#].
 *     - If the part is available, [set-value] updates its value to 'checked'.
 *   - [else] is executed if the condition fails, and sets the part's value to 'needs restocking'.
 *
 * ## Result
 * - After processing, each part in [.car-parts] will have its value updated to either 'checked' or 'needs restocking' based on availability.
 */
.car-parts
   engine:available
   wheel:out-of-stock
   door:available

for-each:x:@.car-parts/*
   if
      eq:x:@.dp/#
         .:available
      .lambda
         set-value:x:@.dp/#
            .:checked
   else
      set-value:x:@.dp/#
         .:needs restocking