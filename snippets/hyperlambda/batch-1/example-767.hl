
/*
 * This Hyperlambda snippet runs a [while] loop for exactly 20 iterations,
 * logging a message each time and incrementing a counter named [.no].
 *
 * 1. [.no]
 *    - Declares a node with the name '.no' and an initial integer value of '0'.
 *    - Used as the loop counter that controls how many times the loop executes.
 *
 * 2. [while]
 *    - Continuously evaluates its [.lambda] child as long as the condition inside it is true.
 *
 * 3. [lt]
 *    - Compares the current value of [.no] to '20'.
 *    - The loop continues as long as [.no] is less than '20'.
 *
 * 4. [get-value]
 *    - Retrieves the value of [.no] so it can be compared inside [lt].
 *
 * 5. [.lambda]
 *    - Contains the logic that runs each time the [while] loop iterates.
 *
 * 6. [log.info]
 *    - Logs the message "Howdy from while" during each iteration.
 *    - Helps with tracing loop execution or debugging.
 *
 * 7. [math.increment]
 *    - Increments [.no] by 1 at the end of each iteration to eventually stop the loop.
 */
.no:int:0

while
   lt
      get-value:x:@.no
      .:int:20
   .lambda

      // Your lambda goes here.
      log.info:Howdy from while
      math.increment:x:@.no