
/*
 * CRUD Create endpoint that inserts a new record into the [comments] table
 * in the [cms] SQLite database. Only users with the [admin] role are allowed to execute this operation.
 *
 * ### Arguments
 * - [.arguments] includes:
 *   - [post_id]: The ID of the post the comment belongs to.
 *   - [user_id]: The ID of the user who authored the comment.
 *   - [content]: The content of the comment.
 *   - [created_at]: The date and time the comment was created.
 *
 * ### Authorization
 * - [auth.ticket.verify] ensures only users with the [admin] role can access this endpoint.
 *
 * ### Database Operation
 * - [data.connect] opens a connection to the [cms] SQLite database using the [generic] connection string.
 * - [add] forwards all argument nodes into the [values] block of the [data.create] slot.
 * - [data.create] inserts the record into the `comments` table.
 *
 * ### Response
 * - [response.status.set] sets the HTTP response status to 201 (Created).
 * - [yield] returns the ID of the newly created comment as [id].
 *
 * This endpoint demonstrates secure, role-based insertion of records into a database table
 * using structured arguments and automatic parameter mapping in Hyperlambda.
 */
.arguments

   // post_id column value
   post_id:long

   // user_id column value
   user_id:long

   // content column value
   content:string

   // created_at column value
   created_at:date

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin

// Opening up database connection.
data.connect:[generic|cms]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:comments
      values

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   yield
      id:x:@data.create
