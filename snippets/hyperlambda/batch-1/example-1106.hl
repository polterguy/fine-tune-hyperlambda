
/*
 * This Hyperlambda snippet conditionally evaluates a [.check] node to determine
 * which logic branch to execute using [if] and [else].
 *
 * 1. [.check]
 *    * Declares a boolean node with the value true.
 *    * This node acts as the condition being tested.
 *
 * 2. [if]
 *    * Begins a conditional block that compares the value of [.check] using [eq].
 *
 * 3. [eq]
 *    * Compares the dynamic value from [.check] to a static boolean true.
 *    * If they are equal, the [.lambda] block is executed.
 *
 * 4. [.lambda] (true branch)
 *    * Executes only if the condition evaluates to true.
 *    * Logs a message: "[.check] is true".
 *
 * 5. [else]
 *    * Executes if the condition evaluates to false.
 *    * Logs a message: "[.check] is false".
 *
 * Use Case:
 * * Demonstrates conditional branching logic where a flag or toggle controls execution flow.
 */
.check:bool:true
if
   eq:x:@.check
      .:bool:true
   .lambda

      // Lambda evaluates if condition is true.
      log.info:[.check] is true
else

   // Lambda evaluated if condition is NOT true.
   log.info:[.check] is false
