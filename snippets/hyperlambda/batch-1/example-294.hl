
/*
 * Clones all fields from [user1] to [user2] under the [.users] node using extrapolated paths.
 *
 * ### Data Structure
 * - [.users] / [user1] contains fields like [name], [role], and [active] with assigned values.
 * - [.users] / [user2] contains empty placeholder nodes for the same fields.
 *
 * ### Operation
 * - [for-each] loops over each child of [user1].
 * - [get-name] retrieves the name of the current node (e.g., "name", "role", "active").
 * - [set-value] dynamically constructs the path to [user2]'s corresponding field using extrapolation (`{@get-name}`).
 * - The value from the current [user1] field is copied over using [get-value] with the expression `:x:@.dp/#`.
 *
 * This pattern demonstrates how to clone node values across structurally similar objects
 * using dynamic path construction in Hyperlambda to reference parts of the currently executing lambda object.
 */
.users
   user1
      name:Alice
      role:admin
      active:yes
   user2
      name
      role
      active
for-each:x:@.users/*/user1/*
   get-name:x:@.dp/#
   set-value:x:@.users/*/user2/*/{@get-name}
      get-value:x:@.dp/#
