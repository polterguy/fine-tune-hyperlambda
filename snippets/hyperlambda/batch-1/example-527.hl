
/*
 * Defines an HTTP endpoint that inserts a new record into the 'categories' table in the 'cms' SQLite database.
 * The endpoint is protected and allows access only to users with the 'guest' role.
 *
 * ## Input Arguments
 * - [name]: The name of the category (required string).
 * - [description]: A description for the category (required string).
 *
 * ## Authorization
 * - [auth.ticket.verify] ensures that only authenticated users with the 'guest' role can invoke this endpoint.
 *
 * ## Database Interaction
 * - [data.connect] opens a connection to the 'cms' SQLite database using the 'generic' connection string.
 * - [add] dynamically maps all argument values into the [values] section of [data.create].
 * - [data.create] inserts the new record into the [categories] table.
 *
 * ## Response
 * - [response.status.set] sets the HTTP response status to 201 (Created).
 * - [yield] returns the ID of the newly inserted record to the caller via the [id] node.
 *
 * ## Use Case
 * - Suitable for content management systems (CMS) where users with limited roles like 'guest' are allowed
 *   to contribute content by categorizing it.
 */
.arguments

   // name column value
   name:string

   // description column value
   description:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest

// Opening up database connection.
data.connect:[generic|cms]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:categories
      values

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   yield
      id:x:@data.create
