
/*
 * This Hyperlambda script demonstrates how to invoke the OpenAI API with audio output,
 * decode the resulting base64 audio content, and save it as a binary MP3 file.
 *
 * 1. [http.post]
 *    - Sends a POST request to the OpenAI API endpoint for chat completions.
 *    - Includes headers for authorization using a Bearer token and content type as JSON.
 *    - The [payload] includes configuration for the model, message content, audio generation options,
 *      and selected modalities ('text' and 'audio').

 * 2. [convert]
 *    - Extracts the base64-encoded MP3 audio data from the API response.
 *    - Converts it from base64 format into binary using [type:from-base64].

 * 3. [io.file.save.binary]
 *    - Saves the decoded binary audio data to the specified file path ('/foo.mp3').
 *    - Ensures the audio content can be played or accessed as a valid MP3 file.
 */
http.post:"https://api.openai.com/v1/chat/completions"
   convert:bool:true
   headers
      Authorization:Bearer TOKEN_HERE
      Content-Type:application/json
   payload
      model:gpt-4o-audio-preview
      max_tokens:int:4000
      temperature:double:0.3
      messages
         .
            role:system
            content:You are a helpful assistant and you can answer questions related to the context.
         .
            role:user
            content:"Hi there, how's it going?"
      audio
         voice:alloy
         format:mp3
      modalities
         .:text
         .:audio
convert:x:@http.post/*/content/*/choices/0/*/message/*/audio/*/data
   type:from-base64
io.file.save.binary:/foo.mp3
   get-value:x:@convert
