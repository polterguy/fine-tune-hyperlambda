
/*
 * Endpoint that does the following; Submits ID and source to an identity verification API.
 * On success, returns the extracted user name and email address.
 *
 * 1. [.arguments]
 *    * Declares required input parameters:
 *    * - [id]: The unique user identifier.
 *    * - [source]: The origin or context of the verification request.
 *
 * 2. [add]
 *    * Dynamically constructs a [payload] by injecting all argument nodes using [get-nodes:x:@.arguments/*].
 *    * Ensures the POST request body reflects all provided arguments.
 *
 * 3. [http.post]
 *    * Sends a POST request to "https://identity.example.com/api/verify".
 *    * The [payload] is sent in the body of the request.
 *    * [convert:true] automatically parses the JSON response into a lambda structure.
 *
 * 4. [if]
 *    * Checks if the HTTP status code is within the 200–299 success range.
 *
 * 5. [and], [mte], [lt]
 *    * [mte]: Ensures status code is ≥ 200.
 *    * [lt]: Ensures status code is < 300.
 *    * Together, they verify a successful response.
 *
 * 6. [.lambda] (success branch)
 *    * Executes if the response is successful.
 *    * Returns:
 *    * - [name]: The verified user's name.
 *    * - [email]: The verified user's email address.
 *
 * 7. [return] (failure branch)
 *    * Returns a static error message if the verification request fails.
 */
.arguments
   id:int
   source:string

add:x:+/*/payload
   get-nodes:x:@.arguments/*
http.post:"https://identity.example.com/api/verify"
   convert:true
   payload

if
   and
      mte:x:@http.post
         .:int:200
      lt:x:@http.post
         .:int:300
   .lambda
      yield
         name:x:@http.post/*/content/*/name
         email:x:@http.post/*/content/*/email
return
   error:Identity verification failed
