
/*
 * Dynamically sets HTTP response headers based on the value of [.fileType] using a [switch] statement.
 *
 * ### Input
 * - [.fileType] is set to a value such as 'json', 'xml', or 'csv'.
 *
 * ### Logic
 * - [switch] evaluates [.fileType] and applies a matching [case]:
 *   - [case]:json -> Sets headers for a JSON file.
 *   - [case]:xml -> Sets headers for an XML file.
 *   - [case]:csv -> Sets headers for a CSV file.
 *   - [default]: Fallback for unknown file types, setting headers for a generic binary file.
 *
 * ### Headers Set
 * - [Content-Type]: Specifies the MIME type appropriate for the file type.
 * - [Content-Disposition]: Suggests a filename and attachment disposition for download.
 *
 * This pattern is useful when generating downloadable files with different formats,
 * ensuring clients receive the correct content type and filename dynamically.
 */
.fileType:json
switch:x:@.fileType

   case:json
      response.headers.set
         Content-Type:application/json
         Content-Disposition:"attachment; filename=\"file.json\""

   case:xml
      response.headers.set
         Content-Type:application/xml
         Content-Disposition:"attachment; filename=\"file.xml\""

   case:csv
      response.headers.set
         Content-Type:text/csv
         Content-Disposition:"attachment; filename=\"file.csv\""

   default
      response.headers.set
         Content-Type:application/octet-stream
         Content-Disposition:"attachment; filename=\"file.bin\""
