
/*
 * This Hyperlambda snippet performs a compound mathematical operation by multiplying multiple factors,
 * including a nested addition as one of the operands.
 *
 * 1. [math.multiply]
 *    * Multiplies all of its child values together.
 *    * Starts with an inline base value of 4.
 *
 * 2. [.:int:3]
 *    * A static factor that is multiplied by the base, resulting in 4 * 3 = 12.
 *
 * 3. [math.add]
 *    * A nested addition operation that evaluates to 1 + 1 = 2.
 *    * This becomes another factor in the multiplication.
 *
 * Final Calculation:
 * * 4 (base) * 3 = 12
 * * 12 * 2 (result of addition) = 24
 *
 * Result:
 * * The final result of [math.multiply] is 24.
 */
math.multiply:int:4

   // multiplies base 4 by 3 -> intermediate result 12
   .:int:3

   // nested addition as another factor
   math.add

      // first term of addition
      .:int:1

      // second term of addition (1 + 1 = 2)
      .:int:1

   // The intermediate result 12 is then multiplied by 2 (from nested add) -> 24
