
/*
 * This Hyperlambda snippet demonstrates encrypting a message using a combination of RSA and AES,
 * with cryptographic signing and a custom seed for deterministic randomness.
 *
 * 1. [crypto.rsa.create-key]
 *    * Generates a new RSA key pair with a strength of 2048 bits.
 *    * The result includes both [public] and [private] keys, as well as a [fingerprint].
 *
 * 2. [crypto.encrypt]
 *    * Encrypts the string "Top secret message" using a hybrid approach.
 *    * [encryption-key]: Uses the RSA [public] key to secure the AES key used internally for encryption.
 *    * [signing-key]: Uses the RSA [private] key to digitally sign the message for authenticity.
 *    * [signing-key-fingerprint]: Adds integrity by including the fingerprint of the signing key.
 *    * [seed]: A static string ('RandomSeed123') used to initialize the cryptographically secure random number generator (CSRNG),
 *      allowing deterministic outputs for testing or repeated operations in specific contexts.
 */
crypto.rsa.create-key
   strength:2048

crypto.encrypt:Top secret message
   encryption-key:x:@crypto.rsa.create-key/*/public
   signing-key:x:@crypto.rsa.create-key/*/private
   signing-key-fingerprint:x:@crypto.rsa.create-key/*/fingerprint
   seed:RandomSeed123