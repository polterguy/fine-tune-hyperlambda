
/*
 * Defines a secure Hyperlambda endpoint that deletes a single record from the 'actor' table
 * in the 'sakila' SQLite database. The endpoint is protected and can only be accessed by users
 * with the 'root' or 'admin' roles.
 * 
 * ## Input Argument
 * - [actor_id]: Required primary key used to identify the record to be deleted.
 * 
 * ## Security & Validation
 * - [auth.ticket.verify] ensures that only authorized roles ('root', 'admin') can invoke this endpoint.
 * - [validators.mandatory] checks that [actor_id] is included in the request.
 * 
 * ## Database Interaction
 * - The database connection is established to the 'sakila' database using the 'generic' connection string.
 * - The [add] slot dynamically injects the argument(s) into the [where] / [and] clause of [data.delete],
 *   forming a parameterized query.
 * - [data.delete] deletes the actor with the matching [actor_id] from the database.
 * 
 * ## Response
 * - The [yield] returns the number of affected rows via the [affected] property taken from the [data.delete] result.
 */
.arguments

   // Primary key of record to delete, mandatory argument
   actor_id:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin
validators.mandatory:x:@.arguments/*/actor_id

// Opening up our database connection.
data.connect:[generic|sakila]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:actor
      where
         and

   // Returning result of above invocation to caller.
   yield
      affected:x:@data.delete
