
/*
 * This Hyperlambda endpoint deletes one record from the [PlaylistTrack] table
 * in the [chinook] SQLite database. Only users with the [root] or [admin] role are authorized.
 *
 * 1. [.arguments]
 *    * Accepts two mandatory parameters that together form the composite primary key:
 *    * - [PlaylistId]: ID of the playlist.
 *    * - [TrackId]: ID of the track.
 *
 * 2. [auth.ticket.verify]
 *    * Ensures that only users with either the [root] or [admin] role can access this endpoint.
 *
 * 3. [validators.mandatory]
 *    * Validates that both [PlaylistId] and [TrackId] are provided by the client.
 *
 * 4. [data.connect]
 *    * Opens a connection to the [chinook] database using the [generic] connection string.
 *    * Declares the database type explicitly as [sqlite].
 *
 * 5. [add]
 *    * Dynamically injects both key values into the [where and] clause of the delete operation.
 *
 * 6. [data.delete]
 *    * Executes the DELETE statement on the [PlaylistTrack] table.
 *    * Filters the deletion by matching both [PlaylistId] and [TrackId].
 *
 * 7. [unwrap]
 *    * Makes the [data.delete] result available for use in the return block.
 *
 * 8. [return]
 *    * Returns the number of affected rows in a node named [affected].
 *    * This allows the caller to confirm whether the deletion was successful.
 */
.arguments

   // Primary key of record to delete, mandatory argument
   PlaylistId:long

   // Primary key of record to delete, mandatory argument
   TrackId:long

// Verifying user is either root or admin
auth.ticket.verify:root,admin

validators.mandatory:x:@.arguments/*/PlaylistId
validators.mandatory:x:@.arguments/*/TrackId

// Opening up our database connection.
data.connect:[generic|chinook]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:PlaylistTrack
      where
         and

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
