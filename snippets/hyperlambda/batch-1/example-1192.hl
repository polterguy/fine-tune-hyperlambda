
/*
 * This Hyperlambda endpoint updates a record in the [Categories] table of the [northwind] SQLite database.
 * It modifies values such as [CategoryName], [Description], and [Picture], filtered by the primary key [CategoryID].
 *
 * 1. [.arguments]
 *    * Accepts the following input parameters:
 *    * - [CategoryID]: Mandatory, used to locate the record (primary key).
 *    * - [CategoryName]: New name for the category.
 *    * - [Description]: New description for the category.
 *    * - [Picture]: New picture value (typically image data or a reference).
 *
 * 2. [validators.mandatory]
 *    * Ensures the [CategoryID] argument is provided before continuing.
 *
 * 3. [data.connect]
 *    * Opens a connection to the [northwind] database using a [generic] connection string.
 *    * Declares [sqlite] as the database type.
 *
 * 4. [add] (values)
 *    * Dynamically injects all updateable fields (starting from index 1 onward) into the [values] section.
 *
 * 5. [add] (where clause)
 *    * Injects the [CategoryID] argument into the [where and] clause to target the specific record.
 *
 * 6. [data.update]
 *    * Executes the UPDATE operation on the [Categories] table using the values and filter conditions provided.
 *
 * 7. [if eq get-value:x:@data.update]
 *    * Verifies whether any record was updated. If [data.update] returns 0, no record matched the filter.
 *    * Responds with status code 404 and a message if no record was found.
 *
 * 8. [response.status.set:202]
 *    * Sets the HTTP status code to 202 (Accepted) to indicate the update was processed successfully.
 *
 * 9. [unwrap]
 *    * Makes the result of the update operation accessible at the root level for the return statement.
 *
 * 10. [return]
 *    * Returns the number of records affected by the update in a node named [affected].
 */
.arguments

   // CategoryID column value being primary key of record to update, mandatory argument
   CategoryID:long

   // CategoryName column's new value
   CategoryName:string

   // Description column's new value
   Description:string

   // Picture column's new value
   Picture:string

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/CategoryID

// Opening up our database connection.
data.connect:[generic|northwind]
   database-type:sqlite

   // Parametrising our invocation.
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]

   // Invoking our update slot.
   data.update
      database-type:sqlite
      table:Categories
      values
      where
         and

   // Verifying record exists.
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found

   // Returning the correct status code.
   response.status.set:202

   // Returning success to caller.
   unwrap:x:+/*
   return
      affected:x:@data.update
