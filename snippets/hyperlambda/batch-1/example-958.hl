
/*
 * This Hyperlambda snippet demonstrates dynamic text processing using [strings.mixin],
 * where embedded Hyperlambda code segments within a string are executed and substituted with their results.
 *
 * 1. [.mixin]
 *    * Defines a string containing an embedded Hyperlambda expression inside double curly braces `{{ ... }}`.
 *    * The code within the braces computes a sum using [math.add] and returns the result.
 *    * The [return] with a value of `x:-` ensures the evaluated value replaces the entire mixin placeholder in the string.
 *
 * 2. [strings.mixin]
 *    * Executes the embedded Hyperlambda code inside [.mixin].
 *    * Replaces the mixin expression with the actual result of the computation.
 *    * Takes [arg1] and [arg2] as input arguments and evaluates their sum inside the mixin block.
 *
 * Result:
 * * The output string will be:
 *   "The sum of your arguments is 5"
 */
.mixin:@"The sum of your arguments is {{
math.add
   get-value:x:@.arguments/*/arg1
   get-value:x:@.arguments/*/arg2

// Whatever we return here substitutes the mixin in the result
return:x:-
}}"
strings.mixin:x:-
   arg1:int:2
   arg2:int:3
