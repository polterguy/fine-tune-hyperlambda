
/*
 * Repeats a logging operation while [.attempts] is less than 3.
 *
 * ### Initialization
 * - [.attempts] is initialized to 0.
 *
 * ### Loop Logic
 * - [while] continues execution as long as [.attempts] is less than 3.
 *   - [lt] compares the current value of [.attempts] with 3.
 *
 * ### Repeated Actions
 * - [log.info] logs "Attempting task" on each iteration.
 * - [math.increment] increases the value of [.attempts] by 1.
 *
 * This snippet demonstrates how to use looping and counters in Hyperlambda
 * to repeat a task a limited number of times.
 */
.attempts:int:0
while
   lt
      get-value:x:@.attempts
      .:int:3
   .lambda

      // Logging attempt.
      log.info:Attempting task

      // Increasing attempt count.
      math.increment:x:@.attempts
