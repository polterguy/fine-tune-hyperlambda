
/*
 * Defines a secure HTTP endpoint that saves a SQL template file to disk,
 * using input arguments to dynamically determine the file path and content.
 * Only users with the 'root' role are authorized to use this endpoint.
 *
 * ## Input Arguments
 * - [databaseType]: The type of database (e.g., 'mysql', 'pgsql') used to determine the folder path.
 * - [filename]: The name of the file to be saved, including the extension (e.g., 'create-table.sql').
 * - [content]: The actual SQL content to be written into the file.
 *
 * ## Authorization
 * - [auth.ticket.verify] ensures that only users with the 'root' role can invoke this operation.
 *
 * ## File Path Construction
 * - [strings.concat] dynamically constructs the full file path using:
 *   - Static root directory: '/etc/'
 *   - The [databaseType] argument for subdirectory selection.
 *   - A fixed '/templates/' path segment.
 *   - The target [filename].
 *
 * ## File Save Operation
 * - [io.file.save] writes the content from the [content] argument to the dynamically constructed file path.
 * - `x:-` refers to the expression result from [strings.concat], resolving to the full path.
 *
 * ## Use Case
 * - Useful for saving or updating SQL template files per database type for later execution or version control,
 *   typically in tooling or admin scenarios.
 */
.arguments
   databaseType:string
   filename:string
   content:string

// Ensures user is authorized to access endpoint.
auth.ticket.verify:root

// Saving file.
strings.concat
   .:/etc/
   get-value:x:@.arguments/*/databaseType
   .:/templates/
   get-value:x:@.arguments/*/filename
io.file.save:x:-
   get-value:x:@.arguments/*/content
