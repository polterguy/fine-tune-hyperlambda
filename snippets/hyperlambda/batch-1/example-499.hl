
/*
 * Checks if a specific value exists and matches an expected result before executing logic.
 *
 * ## Data Initialization
 * - [.foo1] is initialized with the value 'OK'.
 *
 * ## Conditional Logic
 * - [if] checks whether the value of [.foo1] is equal to the string 'OK' using [eq].
 *   - [get-value]:x:../*/.foo1 retrieves the value of [.foo1].
 *   - 'OK' is the expected value for comparison.
 *
 * ## Result Handling
 * - If the condition is true, [.result] is set to the value 'MATCH' using [set-value].
 *   The [.result] node is not shown here, but expected to exist as a child of the root lambda node.
 *
 * ## Use Case
 * - Useful when validating input, flags, or state transitions before triggering an action or storing output.
 */
.foo1:OK
if
   eq
      get-value:x:../*/.foo1
      .:OK
   .lambda
      set-value:x:../*/.result
         .:MATCH
