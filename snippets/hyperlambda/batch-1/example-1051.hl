
/*
 * Hyperlambda file for an endpoint that can be executed with arguments.
 * Prepares a password reset email by replacing the {{user}} and {{reset_link}} placeholders.
 *
 * 1. [.arguments]
 *    * Declares the input parameters required for the operation:
 *    * - [user]: The name or username of the recipient.
 *    * - [reset_link]: The URL to reset the user's password.
 *
 * 2. [.email-template]
 *    * Contains the raw email template with placeholders for [{{user}}] and [{{reset_link}}].
 *    * The message is defined using multi-line string syntax (@").
 *
 * 3. [.reset-email] + [strings.replace] (first)
 *    * Replaces the placeholder [{{user}}] in the template with the actual user value.
 *    * Stores the intermediate result in [.reset-email].
 *
 * 4. [set-value] + [strings.replace] (second)
 *    * Replaces the [{{reset_link}}] placeholder in the updated string with the actual reset link.
 *    * The final rendered message is again stored in [.reset-email].
 *
 * 5. [yield]
 *    * Returns the rendered email message inside a node named [email].
 *    * The message is now ready to be sent via an email delivery service.
 */
.arguments
   user:string
   reset_link:string
.email-template:@"
Hi {{user}},

We received a request to reset your password.

Click the link below to proceed:
{{reset_link}}

If you didn't request this, please ignore this message.

Thanks,
Support Team"

.reset-email
set-value:x:@.reset-email
   strings.replace:x:@.email-template
      .:{{user}}
      get-value:x:@.arguments/*/user

set-value:x:@.reset-email
   strings.replace:x:@.reset-email
      .:{{reset_link}}
      get-value:x:@.arguments/*/reset_link

yield
   email:x:@.reset-email