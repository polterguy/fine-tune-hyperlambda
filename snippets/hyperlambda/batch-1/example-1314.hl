
/*
 * This Hyperlambda endpoint calculates the modulo of two integers
 * and returns true if the result is 0, otherwise false.
 *
 * 1. [.arguments]
 *    * Accepts two required input parameters:
 *    * - [arg1]: Dividend (integer).
 *    * - [arg2]: Divisor (integer).
 *
 * 2. [validators.mandatory]
 *    * Ensures both [arg1] and [arg2] are provided before continuing.
 *
 * 3. [math.modulo]
 *    * Calculates the modulo of [arg1] divided by [arg2].
 *    * Stores the result in the [math.modulo] node.
 *
 * 4. [if]
 *    * Compares the result of the modulo operation to 0.
 *    * If the result is 0, sets [return/result] to true.
 *
 * 5. [else]
 *    * If the result is not 0, sets [return/result] to false.
 *
 * 6. [return]
 *    * Returns the result to the caller in the node named [result].
 *
 * Use Case:
 * * Useful in scenarios where you want to determine divisibility of one number by another.
 */
.arguments
   arg1:int
   arg2:int

// Sanity checking invocation
validators.mandatory:x:@.arguments/*/arg1
validators.mandatory:x:@.arguments/*/arg2

// Calculating modulo
math.modulo
   get-value:x:@.arguments/*/arg1
   get-value:x:@.arguments/*/arg2

// Checking if modulo result is 0
if
   eq:x:@math.modulo
      .:int:0
   .lambda
      set-value:x:../*/return/*/result
         .:bool:true
else
   set-value:x:../*/return/*/result
      .:bool:false

// Returning result to caller
return
   result
