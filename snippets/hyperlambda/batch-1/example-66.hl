
/*
 * Executes a lambda block only if **all** conditions evaluate to true using logical AND.
 *
 * ### Initialization
 * - [.result] is declared to store the outcome of the logic.
 *
 * ### Conditional Evaluation
 * - [if] uses [and] to group two boolean conditions:
 *   - Both are explicitly set to `true`.
 * - Since all conditions are true, the [.lambda] block is executed.
 *
 * ### Result Assignment
 * - Inside [.lambda], [set-value] assigns the value "OK" to the [.result] node.
 * - The expression inside [set-value] resolves to the [.result] node at the root level.
 * - `..` iterator implies root, `*` iterator implies all children, and `.result` iterator implies only node's who's names are ".result".
 *
 * This demonstrates:
 * - Logical conjunction in decision-making using [and]
 * - Conditional execution of blocks in Hyperlambda
 * - Node path targeting and dynamic value assignment
 */
.result
if
   and
      .:bool:true
      .:bool:true
   .lambda
      set-value:x:../*/.result
         .:OK
