
/*
 * This Hyperlambda snippet demonstrates the creation and usage of RSA encryption and decryption.
 *
 * 1. [crypto.rsa.create-key]
 *    - Generates a new RSA key pair consisting of a public and private key.
 *    - The [key-size] child defines the bit strength of the keys (e.g., '2048' for secure encryption).
 *    - The generated keys are stored in child nodes named 'public' and 'private'.

 * 2. [crypto.rsa.encrypt]
 *    - Encrypts a message using the RSA public key.
 *    - Requires a [public-key] child node, which is typically retrieved from the output of [crypto.rsa.create-key].
 *    - The node's value or expression represents the plaintext to be encrypted.

 * 3. [crypto.rsa.decrypt]
 *    - Decrypts a message that was encrypted with a matching RSA public key.
 *    - Requires a [private-key] child node referencing the private key from the [crypto.rsa.create-key] output.
 *    - The value passed into the node (e.g., using `x:-`) is typically the result of a previous [crypto.rsa.encrypt] operation.
 */
crypto.rsa.create-key
   key-size:int:2048

// Encrypt a message using RSA public key
.message
   content:Secret Message
crypto.rsa.encrypt:x:@.message/*/content
   public-key:x:@crypto.rsa.create-key/*/public

// Decrypting message we encrypted above
crypto.rsa.decrypt:x:-
   private-key:x:@crypto.rsa.create-key/*/private
