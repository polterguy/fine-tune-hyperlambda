
/*
 * This Hyperlambda endpoint deletes one item from the [plans] table in the [hub] database.
 * It uses the provided [name] argument as the filter and requires authorization from users with the [root] role.
 *
 * 1. [.arguments]
 *    * Accepts a required argument:
 *    * - [name]: The name of the item in the [plans] table to delete.
 *
 * 2. [auth.ticket.verify:root]
 *    * Ensures only users with the [root] role can execute the deletion.
 *
 * 3. [validators.mandatory]
 *    * Validates that the [name] argument is provided before proceeding.
 *
 * 4. [data.connect:[generic|hub]]
 *    * Opens a connection to the [hub] database using the [generic] connection string.
 *
 * 5. [add:x:./*/data.delete/*/where/*/and]
 *    * Dynamically inserts the [name] filter condition into the WHERE clause for deletion.
 *
 * 6. [data.delete]
 *    * Executes the deletion from the [plans] table where the [name] matches the provided argument.
 *
 * 7. [return]
 *    * Returns a simple success message: [result:OK] if the operation was executed.
 *
 * Note:
 * * Although the comment says "types table in onboarding", the logic targets the [plans] table in the [hub] database.
 * * Adjust [table] and [database] values if that was unintended.
 */
.arguments
   name:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/name

// Opening up our database connection.
data.connect:[generic|hub]

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      table:plans
      where
         and

   // Returning result of above invocation to caller.
   return
      result:OK
