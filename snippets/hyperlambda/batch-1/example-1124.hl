
/*
 * This Hyperlambda snippet loops until the [.requests] counter reaches 10.
 * It simulates processing a sequence of requests by incrementing a counter within a [while] loop.
 *
 * 1. [.requests]
 *    * Initializes the counter to 1.
 *
 * 2. [while]
 *    * Starts a loop that continues as long as the condition is true.
 *
 * 3. [lt]
 *    * Compares the value of [.requests] to 10.
 *    * The loop runs while [.requests] is less than 10.
 *
 * 4. [.lambda]
 *    * Contains the logic to execute during each loop iteration.
 *
 * 5. [log.info]
 *    * Logs the message "Processing request" for each iteration.
 *
 * 6. [math.increment]
 *    * Increments the [.requests] counter by 1 during each loop cycle.
 *
 * Result:
 * * The loop executes 9 times (from 1 through 9), and ends once [.requests] reaches 10.
 */
.requests:int:1
while
   lt
      get-value:x:@.requests
      .:int:10
   .lambda

      // Handling request.
      log.info:Processing request

      // Incrementing request counter.
      math.increment:x:@.requests
