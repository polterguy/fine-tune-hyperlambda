
/*
 * Performs a division operation where the numerator is the result of a nested subtraction.
 *
 * Step-by-step:
 * - [.a] and [.b] are initialized with integer values 10 and 4, respectively.
 *
 * - [math.subtract] computes the result of 10 - 4, yielding 6.
 * - [math.divide] then divides the result (6) by 2.
 *
 * The structure demonstrates:
 * - How to nest math operations in Hyperlambda
 * - How to use [get-value] to dynamically retrieve values for computation
 * - The final result is 3
 *
 * This example is useful for illustrating how to layer mathematical logic in a clean, readable structure.
 */
.a:int:10
.b:int:4

// outer operation (division)
math.divide

   // nested inner operation (subtraction)
   math.subtract

      // fetches 10
      get-value:x:@.a

      // subtracts 4, yielding 6
      get-value:x:@.b

   // divides the base (6 from inner op) by 2 -> result 3
   .:int:2
