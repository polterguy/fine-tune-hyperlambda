/*
 * Creates a new menu record in the 'cms' database and returns its ID, with guest-level access control.
 *
 * 1. Accepts a [name] parameter from the client, which will be inserted as a record into the [menus] table.
 * 2. Uses [auth.ticket.verify] to ensure the caller has at least 'guest' access before continuing.
 * 3. Connects to the 'cms' SQLite database using [data.connect] and the '[generic]' connection string.
 * 4. Dynamically injects the input argument into the [data.create] invocation using [add] for clean parameter handling.
 * 5. Executes [data.create] to insert the new record into the [menus] table.
 * 6. Sends an HTTP 201 Created response via [response.status.set] to indicate successful resource creation.
 * 7. Returns the ID of the newly created menu item using [yield].
 *
 * This endpoint is ideal for public or semi-public systems where low-level users are allowed to create menu entries.
 */
.arguments

   // name column value
   name:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest

// Opening up database connection.
data.connect:[generic|cms]
   database-type:sqlite

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      database-type:sqlite
      table:menus
      values

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   yield
      id:x:@data.create
