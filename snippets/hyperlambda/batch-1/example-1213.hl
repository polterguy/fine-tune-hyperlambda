
/*
 * This Hyperlambda snippet uses a [switch] statement to determine the availability of a car part
 * based on a boolean value. It evaluates [true] or [false] and sets an appropriate message.
 *
 * 1. [.available:bool:true]
 *    * Declares a boolean value indicating the availability of the car part.
 *    * In this case, the part is available ([true]).
 *
 * 2. [.result]
 *    * Declares a placeholder node to store the result message.
 *
 * 3. [switch:x:@.available]
 *    * Begins a switch-case evaluation based on the value of [.available].
 *
 * 4. [case:bool:true]
 *    * Matches if [.available] is [true].
 *    * Sets [.result] to "Car part is available".
 *
 * 5. [case:bool:false]
 *    * Matches if [.available] is [false].
 *    * Sets [.result] to "Car part is not available".
 *
 * Result:
 * * Based on the value of [.available], the switch sets [.result] to the corresponding message.
 * * In this case, [.result] will be "Car part is available".
 */
.available:bool:true
.result
switch:x:@.available

   case:bool:true
      set-value:x:@.result
         .:Car part is available

   case:bool:false
      set-value:x:@.result
         .:Car part is not available