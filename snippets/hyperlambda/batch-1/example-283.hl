
/*
 * Demonstrates the use of [else-if] with expression shorthand to evaluate a condition.
 *
 * ### Initialization
 * - [.flag] is set to `true`.
 * - [.result] is declared to store the result of the conditional evaluation.
 *
 * ### Conditional Logic
 * - [if] checks a hardcoded boolean value `false` and does not execute its [.lambda] block.
 * - [else-if:x:@.flag] uses shorthand syntax to directly evaluate [.flag] as its condition.
 *   - Since [.flag] is true, the [set-value] block is executed.
 *   - [.result] is assigned the value "Second".
 *
 * This snippet illustrates how to simplify conditional branching using [else-if]
 * with inline expressions in Hyperlambda.
 */
.flag:bool:true
.result
if
   .:bool:false
   .lambda
      set-value:x:@.result
         .:First
else-if:x:@.flag
   set-value:x:@.result
      .:Second
