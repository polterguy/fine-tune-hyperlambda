
/*
 * CRUD Hyperlambda endpoint that deletes a record from the [questionnaires] table
 * in the [magic] SQLite database where the name matches the given argument.
 *
 * ### Arguments
 * - [.arguments] contains input parameters:
 *   - [name]: The name of the questionnaire to delete (mandatory).
 *
 * ### Authorization
 * - [auth.ticket.verify] ensures the user has either the "root" or "admin" role.
 *
 * ### Validation
 * - [validators.mandatory] enforces that [name] is provided before continuing.
 *
 * ### Database Operation
 * - [data.connect] opens a connection to the [magic] database.
 * - [add] dynamically injects the [name] argument into the [where] / [and] clause of the delete statement.
 * - [data.delete] performs the deletion in the [questionnaires] table using the given name as filter.
 *
 * ### Response Handling
 * - [unwrap] is used to forward-evaluate the [affected] nodeâ€™s value such that it becomes the return value of [data.delete].
 *   This ensures that the returned structure contains only the final response nodes, not internal metadata.
 * - [return] provides the number of affected rows to the caller as [affected].
 *   The previous [unwrap] invocation is crucial to ensure we're returning whatever the expressions inside of [return] is pointing to
 *
 * This endpoint demonstrates secure and parameterized record deletion with role-based access control,
 * input validation, and clean response formatting using Hyperlambda.
 */
.arguments
   name:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/name

// Opening up our database connection.
data.connect:[generic|magic]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:questionnaires
      where
         and

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
