
/*
 * Demonstrates conditional logic using [if] and [neq] (not equal) to compare the value of a string node.
 * 
 * The [.status] node is assigned the value "Ready". The [if] slot checks whether this value is NOT equal to "Ready".
 * This is achieved using the [neq] slot, which evaluates to true if the two values or types differ.
 * 
 * If [.status] is anything other than "Ready", the [.lambda] block executes, logging that the status is NOT Ready.
 * If the condition is false (i.e., [.status] **is** "Ready"), the [else] block runs, logging that the status is Ready.
 * 
 * This structure is commonly used for branching execution paths based on inequality.
 */
.status:Ready
if

   // [neq] checks inequality.
   neq:x:@.status
      .:Ready
   .lambda

      // Executes when [.status] is not Ready.
      log.info:[.status] is NOT Ready
else

   // Executes when [.status] is Ready.
   log.info:[.status] is Ready
