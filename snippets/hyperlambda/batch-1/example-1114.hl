
/*
 * This Hyperlambda snippet demonstrates how to evaluate a lambda expression stored in a data node
 * and how that evaluated lambda can modify nodes outside its own scope.
 *
 * 1. [.res]
 *    * Declares a node that will be updated as a result of the lambda execution.
 *
 * 2. [.lambda]
 *    * Contains a lambda expression that will be executed later using [eval].
 *    * The lambda sets the value of [.res] to "Hello".
 *
 * 3. [set-value]
 *    * Updates the [.res] node during execution of the lambda block.
 *    * Uses a lambda expression path to access and modify [.res] from within [.lambda].
 *
 * 4. [eval]
 *    * Dynamically evaluates the contents of [.lambda].
 *    * Executes its logic in the context of the parent structure, allowing it to affect [.res].
 *
 * Result:
 * * After evaluation, the [.res] node will contain the string "Hello".
 */
.res
.lambda
   set-value:x:@.res
      .:Hello
eval:x:@.lambda
