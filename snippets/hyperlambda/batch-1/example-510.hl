
/*
 * Compiles a C# source file into a .NET assembly and saves it to disk using [system.compile] and [io.file.save.binary].
 *
 * 1. [io.file.load:/etc/foo.cs]
 *    * Loads the content of the C# source file located at '/etc/foo.cs'.
 *    * The loaded content is passed into the [code] argument of [system.compile].
 *
 * 2. [system.compile]
 *    * Dynamically compiles C# code to a .NET assembly (DLL).
 *    * [references] includes required assemblies for the compilation process.
 *      These allow the code to use types from .NET Standard, core libraries, and Magic-specific components.
 *    * [code] receives the source code from [io.file.load].
 *    * [assembly-name] assigns the name 'foo.dll' to the resulting assembly.
 *
 * 3. [io.file.save.binary:/etc/foo.dll]
 *    * Takes the compiled assembly result from [system.compile] and saves it to disk at '/etc/foo.dll'.
 *
 * Use cases:
 * * Dynamically compiling and deploying C# code at runtime.
 * * Creating plugins or extensions for Magic Cloudlet systems.
 * * Supporting hot-reloading of custom logic without restarting services.
 */
io.file.load:/etc/foo.cs
system.compile
   references
      .:netstandard
      .:System.Runtime
      .:System.Console
      .:System.Private.Uri
      .:System.ComponentModel
      .:System.Private.CoreLib
      .:System.Net.Primitives
      .:magic.node
      .:magic.node.extensions
      .:magic.library
      .:magic.signals.contracts
   code:x:@io.file.load
   assembly-name:foo.dll

// Saving our compiled CLR assembly to '/etc/foo.dll'.
io.file.save.binary:/etc/foo.dll
   get-value:x:@system.compile