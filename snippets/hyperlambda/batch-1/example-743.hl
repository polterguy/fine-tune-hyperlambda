
/*
 * This Hyperlambda snippet demonstrates a [switch] construct with [case] options and a [default] fallback.
 * It performs value matching and assigns a result based on the input.
 * 
 * 1. [switch]
 *    - Evaluates the value of [.val] and matches it against the defined [case] options.
 *    - If a case matches, the corresponding logic is executed.
 * 
 * 2. [case]
 *    - Defines specific match values ('bar' and 'foo') to compare against [.val].
 *    - Executes the nested [set-value] if the case matches the input.
 * 
 * 3. [default]
 *    - Executes when none of the [case] options match the input.
 *    - Acts as a fallback to ensure a result is always produced.
 * 
 * 4. [set-value]
 *    - Updates the value of [.result] based on the matching case or default branch.
 */
.val:fooXX
.result
switch:x:@.val
   case:bar
      set-value:x:@.result
         .:Oops
   case:foo
      set-value:x:@.result
         .:Oops2.0
   default
      set-value:x:@.result
         .:Success!
