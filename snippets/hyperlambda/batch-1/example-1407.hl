
/*
 * This Hyperlambda endpoint generates a long-lived JWT token associated with a given username and role.
 * The token will expire on a user-specified future date. Only users with [root] privileges can invoke this endpoint.
 *
 * 1. [.arguments]
 *    * Accepts three mandatory arguments:
 *    * - [username]: The username for which the token will be generated.
 *    * - [role]: The role to be embedded in the JWT token.
 *    * - [expires]: The expiration datetime for the token.
 *
 * 2. [auth.ticket.verify:root]
 *    * Verifies that the caller has [root] level authorization to securely restrict token creation.
 *
 * 3. [validators.mandatory]
 *    * Ensures all required fields ([username], [role], and [expires]) are supplied.
 *
 * 4. [auth.ticket.create]
 *    * Creates the JWT token based on the supplied arguments.
 *    * Includes:
 *      - [username]: The identity tied to the token.
 *      - [expires]: Token expiration date and time.
 *      - [roles]: A list containing the single provided role.
 *
 * 5. [yield]
 *    * Returns the generated JWT token to the client under the [ticket] node.
 *
 * Use Case:
 * * Allows system administrators to generate long-term API keys or tokens for temporary or external users,
 *   bypassing standard login but maintaining secure role-based access.
 */
.arguments

   // Mandatory username for token we should generate. Does not need to be an existing user from the database.
   username:string

   // Mandatory argument being the role the returned JWT token should be associated with.
   role:string

   // Mandatory expiration date for the token. Can be any future date and time.
   expires:date

// Ensures user is authorized to access endpoint.
auth.ticket.verify:root

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/username
validators.mandatory:x:@.arguments/*/role
validators.mandatory:x:@.arguments/*/expires

/*
 * Invokes [auth.ticket.create] to create our JWT token,
 * making sure we return the token to the caller.
 */
auth.ticket.create
   username:x:@.arguments/*/username
   expires:x:@.arguments/*/expires
   roles
      .:x:@.arguments/*/role

// Returns the authentication JWT ticket created above to caller.
yield
   ticket:x:@auth.ticket.create
