
/*
 * Calculates the sum of two integer nodes [.one] and [.two], then multiplies the result by 3.
 * 
 * - [.one] is initialized with the integer value 7.
 * - [.two] is initialized with the integer value 11.
 * 
 * The [math.add] slot retrieves the values of [.one] and [.two] using [get-value],
 * and adds them to produce 18.
 * 
 * This result is passed as the second operand to [math.multiply],
 * which multiplies it by 3 (the first operand) to get the final result: 54.
 * 
 * This nested math structure demonstrates arithmetic composition in Hyperlambda using slot chaining.
 */
.one:int:7
.two:int:11
math.multiply
   .:int:3
   math.add
      get-value:x:@.one
      get-value:x:@.two