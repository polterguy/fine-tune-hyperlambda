/*
 * Declares an [.arguments] node at the top, which is essential when creating 
 * executable Hyperlambda files (e.g., for endpoints). This defines the input 
 * parameters the lambda is allowed to handleâ€”in this case, a single [name] 
 * argument of type 'string'.
 *
 * The [strings.concat] slot is then used to concatenate a static greeting 
 * ("Hello ") with the value of the [name] argument, retrieved via 
 * [get-value]'s expression.
 *
 * Finally, the [yield] slot returns the result of the concatenation under 
 * the [greeting] node. [yield] automatically [unwrap]s the expression, 
 * meaning the reference '@strings.concat' is evaluated before being returned.
 *
 * This illustrates a typical pattern for building simple, dynamic Hyperlambda 
 * endpoints that accept arguments and return computed results.
 */
.arguments
   name:string

// Concatenating two strings, one being a reference to an argument
strings.concat
   .:"Hello "
   get-value:x:@.arguments/*/name

// Returns greeting, notice [yield] will automatically [unwrap] expression references inside of itself
yield
   greeting:x:@strings.concat
