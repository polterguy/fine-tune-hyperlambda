
/*
 * This Hyperlambda snippet uses [switch] to evaluate an integer value and execute the matching [case] branch.
 * It demonstrates numeric-based conditional logic without providing a [default] fallback.

 * 1. [switch]
 *    - Evaluates the value of [.value] against a list of [case] options.
 *    - Executes the first matching [case]'s inner logic and skips all others.

 * 2. [case]
 *    - Defines a specific match value for comparison against the [switch] input.
 *    - If the input value equals the case value, the logic inside the case executes.

 * 3. [set-value]
 *    - Updates [.result] to a descriptive string based on the matched case.
 *    - Each case contains a distinct message representing its numeric value.
 */
.value:int:10
.result
switch:x:@.value
   case:int:5

      // If value is 5.
      set-value:x:@.result
         .:Value is five
   case:int:10

      // If value is 10.
      set-value:x:@.result
         .:Value is ten
   case:int:20

      // If value is 20.
      set-value:x:@.result
         .:Value is twenty
