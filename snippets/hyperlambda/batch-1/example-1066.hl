
/*
 * This Hyperlambda snippet demonstrates a [while] loop that continues
 * to execute as long as [.score] is less than 50.
 *
 * 1. [.score]
 *    * Initializes an integer variable with a starting value of 0.
 *    * Acts as the loop counter.
 *
 * 2. [while]
 *    * Defines a loop that runs while its condition evaluates to true.
 *
 * 3. [lt]
 *    * Stands for "less than".
 *    * Compares the current value of [.score] with 50.
 *    * The loop continues as long as [.score] is less than 50.
 *
 * 4. [.lambda]
 *    * Contains the loop body that executes each time the condition holds.
 *
 * 5. [log.info]
 *    * Logs the message "Increasing score" to indicate loop progress.
 *
 * 6. [math.increment]
 *    * Increments the value of [.score] by 1 on each iteration,
 *    * gradually progressing the loop toward completion.
 */
.score:int:0
while
   lt
      get-value:x:@.score
      .:int:50
   .lambda

      // Score increasing.
      log.info:Increasing score

      // Incrementing score.
      math.increment:x:@.score
