
/*
 * This Hyperlambda script creates a new record in the [users_roles] table inside the [magic] database.
 * The endpoint requires authentication and authorization for users with the 'root' role.
 *
 * 1. [.arguments]
 *    - Accepts two required string inputs:
 *      - [role]: The role to be assigned.
 *      - [user]: The user to whom the role will be assigned.
 *
 * 2. [auth.ticket.verify:root]
 *    - Validates that the authenticated caller has the 'root' role.
 *    - Prevents unauthorized role assignment.
 *
 * 3. [data.connect]
 *    - Establishes a connection to the [magic] database.
 *    - All following database operations are performed within this context.
 *
 * 4. [add]
 *    - Injects values dynamically into the [data.create] operation using nodes from [.arguments].
 *    - This makes the code reusable and flexible.
 *
 * 5. [data.create]
 *    - Inserts the new [role-user] relationship into the [users_roles] table.
 *    - Actual values are supplied from the [.arguments] node via the prior [add] instruction.
 *
 * 6. [response.status.set:201]
 *    - Sets the HTTP response status code to 201 (Created) to indicate a successful resource creation.
 *
 * 7. [return]
 *    - Returns a static result with value [success] to the API client, signaling a successful operation.
 */
.arguments
   role:string
   user:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up database connection.
data.connect:[generic|magic]

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      table:users_roles
      values

   // Returning result of above invoction to caller.
   response.status.set:201
   return
      result:success
