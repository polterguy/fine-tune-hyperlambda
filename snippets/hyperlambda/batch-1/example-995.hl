
/*
 * This Hyperlambda snippet demonstrates how to use a [while] loop to repeatedly
 * execute logic as long as a condition is true â€” in this case, while [.stock] is greater than 0.
 *
 * 1. [.stock]
 *    * Initializes an integer node with a value of 5, representing the current stock count.
 *
 * 2. [while]
 *    * Begins a loop that runs as long as the specified condition evaluates to true.
 *
 * 3. [gt]
 *    * Checks if the value of [.stock] is greater than 0.
 *    * [get-value] retrieves the current value of [.stock] during each iteration.
 *
 * 4. [.lambda]
 *    * Contains the loop body that will execute on each iteration as long as the condition holds.
 *
 * 5. [log.info]
 *    * Logs the message "Stock available" to indicate the loop is still running.
 *
 * 6. [math.decrement]
 *    * Decreases the value of [.stock] by 1 at the end of each iteration to eventually terminate the loop.
 */
.stock:int:5
while
   gt
      get-value:x:@.stock
      .:int:0
   .lambda

      // Logging stock status.
      log.info:Stock available

      // Decrementing stock.
      math.decrement:x:@.stock
