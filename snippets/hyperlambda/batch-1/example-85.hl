
/*
 * Sends an email with a file attachment using SMTP, where the recipient,
 * subject, and message body are statically defined, and the attachment
 * is referenced by a file path.
 *
 * ### Email Structure
 * - [mail.smtp.send] is used to construct and send the email.
 * - [message] / [to] defines the recipient: "john.doe@example.com".
 * - [subject] sets the subject line to "Email with Attachment".
 * 
 * ### MIME Composition
 * - [entity] defines a multipart email, allowing both
 *   text content and file attachments.
 *
 * Inside the multipart entity:
 * - The first [entity] defines the body content: "Please find the attachment."
 * - The second [entity] includes an attachment via [filename].
 *   The filename path points to a file on disk which will be attached to the email.
 * 
 * This example illustrates how to structure and send multipart MIME emails
 * with both plain text content and file attachments using Hyperlambda.
 */
mail.smtp.send
   message
      to
         .
            email:john.doe@example.com
      subject:Email with Attachment

      // This is how we declare a multipart MIME message of type `mixed`
      entity:multipart/mixed
         entity:text/plain
            content:Please find the attachment.
         entity:text/plain
            filename:/path/to/attachment.txt
