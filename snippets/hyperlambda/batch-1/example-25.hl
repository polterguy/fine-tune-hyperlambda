
/*
 * Checks if at least one condition is true using logical [or],
 * and if so, sets the value of [.result] to "OK".
 *
 * Structure:
 * - Initializes [.result] as a placeholder and [.value] with a boolean value of `true`.
 *
 * - The [if] block contains an [or] logical operator with two conditions:
 *   1. A hardcoded `false` value.
 *   2. A dynamic evaluation of [.value] using [get-value:x:@.value], which resolves to `true`.
 *
 * - Since one of the conditions is true, the [.lambda] block is executed,
 *   which uses [set-value] to assign "OK" to the [.result] node.
 *
 * This demonstrates conditional branching in Hyperlambda using logical operators
 * and relative node path expressions to dynamically update values.
 */
.result
.value:bool:true
if
   or
      .:bool:false
      get-value:x:@.value
   .lambda
      set-value:x:../*/.result
         .:OK
