
/*
 * Endpoint that deletes a single record from the 'category' table in the 'sakila' SQLite database.
 * This operation does not require authentication, but logs the invocation.
 *
 * ### Arguments
 * - [.arguments] includes:
 *   - [category_id]: The primary key of the record to delete (mandatory).
 *
 * ### Validation
 * - [validators.mandatory] ensures that [category_id] is provided to prevent accidental full-table deletion.
 *
 * ### Database Operation
 * - [data.connect] connects to the 'sakila' SQLite database using the 'generic' connection string.
 * - [add] dynamically injects the 'category_id' argument into the [and] node which is the child of [where].
 *   This ensures that only records with the specified category_id will be deleted.
 * - [data.delete] deletes the matching record from the 'category' table.
 *
 * ### Logging
 * - [log.info] is implied or should be inserted if logging of the invocation is required.
 *
 * ### Response
 * - [unwrap] evaluates the `x:@data.delete` expression, substituting the expression with the value returned from [data.delete].
 * - [return] sends the number of affected rows back to the caller as [affected].
 *
 * This endpoint demonstrates a simple and unauthenticated delete operation with validation,
 * and can be extended to include logging or access control if needed.
 */
.arguments

   // Primary key of record to delete, mandatory argument
   category_id:long

validators.mandatory:x:@.arguments/*/category_id

// Opening up our database connection.
data.connect:[generic|sakila]
   database-type:sqlite

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      database-type:sqlite
      table:category
      where
         and

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
