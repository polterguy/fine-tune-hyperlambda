
/*
 * This Hyperlambda endpoint dynamically generates a bar chart image based on arbitrary input values.
 * It accepts any number of arguments using a wildcard [.arguments:*] and converts them into chart bars.
 *
 * 1. [.arguments:*]
 *    * Accepts a dynamic set of named arguments, each representing a value for a bar in the chart.
 *
 * 2. [.bars]
 *    * Declares a container node to store the individual bars as parsed from the input arguments.
 *
 * 3. [for-each:x:@.arguments/*]
 *    * Iterates through all arguments provided.
 *    * [unwrap] ensures the inner node value is accessible.
 *    * [set-name] adjusts the node name to match the key from the original argument.
 *    * [add] stores each bar definition in the [.bars] container.
 *
 * 4. [add:x:../*/image.chart/*/bars]
 *    * Injects the parsed bar nodes into the [image.chart] slot dynamically.
 *
 * 5. [image.chart:bars]
 *    * Generates a bar chart image using the specified dimensions (800x500) and the bars defined above.
 *
 * 6. [response.headers.set]
 *    * Sets the Content-Type header to "image/png", indicating the return value is a PNG image.
 *
 * 7. [return:x:@image.chart]
 *    * Returns the resulting chart image back to the client.
 *
 * Use Case:
 * * This endpoint can be used to visualize dynamic key-value input as a bar chart image.
 *   Example call: `?Apples=5&Bananas=3&Oranges=7` would create a chart with three labeled bars.
 */
.arguments:*

// Creating our individual bars.
.bars
for-each:x:@.arguments/*

   // Adding primary node for bar.
   unwrap:x:+/+/*/*
   set-name:x:+/*/*
      get-name:x:@.dp/#
   add:x:@.bars
      .
         .:x:@.dp/#

// Parametrizing [image.chart] invocation.
add:x:../*/image.chart/*/bars
   get-nodes:x:@.bars/*
image.chart:bars
   width:800
   height:500
   bars

// Applying correct HTTP header.
response.headers.set
   Content-Type:image/png

// Returning chart to caller.
return:x:@image.chart
