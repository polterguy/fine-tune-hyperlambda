
/*
 * This Hyperlambda snippet demonstrates how to execute a fallback action using [else]
 * when the condition in an [if] block evaluates to false.
 *
 * 1. [.result]
 *    * Declares a node that will hold the final outcome of the conditional evaluation.
 *
 * 2. [if]
 *    * Begins a conditional block with a hardcoded boolean value of false.
 *    * Since the condition is false, the associated [.lambda] block will be skipped.
 *
 * 3. [.lambda]
 *    * Would have executed and set [.result] to "failure" if the condition were true.
 *    * Not triggered in this case.
 *
 * 4. [else]
 *    * Executes as a fallback because the [if] condition was false.
 *    * Sets [.result] to "OK", indicating that the fallback path was taken.
 *
 * Result:
 * * [.result] will be assigned the value "OK" after execution.
 */
.result
if
   .:bool:false
   .lambda
      set-value:x:../*/.result
         .:failure
else
   set-value:x:../*/.result
      .:OK
