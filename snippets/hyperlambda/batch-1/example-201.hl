
/*
 * Evaluates whether [.metricX] is less than 6 and [.metricY] is greater than 14.
 * If both conditions are true, sets [.status] to true. Otherwise, sets it to false.
 *
 * ### Initialization
 * - [.metricX] is set to 5.
 * - [.metricY] is set to 15.
 * - [.status] is initialized to hold the evaluation result.
 *
 * ### Conditional Logic
 * - [if] uses [and] to ensure both conditions must be satisfied:
 *   - [lt] checks if [.metricX] is less than 6.
 *   - [mt] checks if [.metricY] is greater than 14.
 *
 * ### Outcome
 * - If both conditions are true:
 *   - [.lambda] sets [.status] to true.
 * - Otherwise:
 *   - [else] sets [.status] to false.
 *
 * This snippet demonstrates compound conditional checks using [and] logic
 * to control branching and update state in Hyperlambda.
 */
.status
.metricX:int:5
.metricY:int:15
if
   and

      // Less than condition
      lt:x:@.metricX
         .:int:6

      // Greater than condition
      mt:x:@.metricY
         .:int:14
   .lambda

      // Setting [.status] to true
      set-value:x:@.status
         .:bool:true
else

   // Setting [.status] to false
   set-value:x:@.status
      .:bool:false
