
/*
 * Converts a lambda structure into CSV format and then parses it back into a lambda structure.
 *
 * ### Input Structure
 * - [.data] contains multiple unnamed child nodes, each representing a record with:
 *   - [name]: A string representing the person's name.
 *   - [age]: An integer representing the person's age.
 *
 * ### Conversion to CSV
 * - [lambda2csv] transforms the lambda object at the specified path into a CSV-formatted string.
 *   - The expressions targets all child nodes of [.data].
 *
 * ### Conversion Back to Lambda
 * - [csv2lambda] parses the resulting CSV string from [lambda2csv] back into a lambda node structure.
 *
 * This snippet is useful for serializing and deserializing lambda-based data structures
 * to and from CSV format, often for export, import, or interoperability tasks in Hyperlambda.
 */
.data
   .
      name:Thomas Hansen
      age:int:47
   .
      name:John Doe
      age:int:67
lambda2csv:x:-/*
csv2lambda:x:@lambda2csv
